{"version":3,"sources":["webpack:///./node_modules/openlayers/src/ol/format/filter/Filter.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LogicalNary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/And.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Bbox.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Spatial.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Contains.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Comparison.js","webpack:///./node_modules/openlayers/src/ol/format/filter/During.js","webpack:///./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js","webpack:///./node_modules/openlayers/src/ol/format/filter/EqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Intersects.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsBetween.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsLike.js","webpack:///./node_modules/openlayers/src/ol/format/filter/IsNull.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThan.js","webpack:///./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Not.js","webpack:///./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Or.js","webpack:///./node_modules/openlayers/src/ol/format/filter/Within.js","webpack:///./node_modules/openlayers/src/ol/format/filter.js","webpack:///./src/misc/EventHelper.js","webpack:///./src/filter/Condition.js","webpack:///./src/map/component.js","webpack:///./contribs/gmf/src/theme/Manager.js","webpack:///./src/misc/debounce.js","webpack:///./src/draw/features.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js","webpack:///./contribs/gmf/src/editing/Snapping.js","webpack:///./contribs/gmf/src/map/component.js","webpack:///./src/Popover.js","webpack:///./src/olcs/constants.js","webpack:///./src/format/FeatureHash.js","webpack:///./src/format/FeatureHashStyleType.js","webpack:///./src/statemanager/module.js","webpack:///./node_modules/openlayers/src/ol/interaction/Snap.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./src/proj/EPSG21781.js","webpack:///./src/proj/somerc.js","webpack:///./node_modules/proj4/package.json","webpack:///./node_modules/openlayers/src/ol/format/XSD.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiLineString.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPoint.js","webpack:///./node_modules/openlayers/src/ol/geom/MultiPolygon.js","webpack:///./contribs/gmf/src/theme/Themes.js","webpack:///./src/layertree/Controller.js","webpack:///./contribs/gmf/src/raster/RasterService.js","webpack:///./node_modules/openlayers/src/ol/format/XMLFeature.js","webpack:///./src/statemanager/Service.js","webpack:///./src/datasource/OGC.js","webpack:///./src/format/AttributeType.js","webpack:///./contribs/gmf/examples/elevation.js","webpack:///./contribs/gmf/src/raster/module.js","webpack:///./contribs/gmf/src/raster/component.js","webpack:///./node_modules/openlayers/src/ol/format/GMLBase.js","webpack:///./src/map/LayerHelper.js","webpack:///./contribs/gmf/src/layertree/TreeManager.js","webpack:///./node_modules/openlayers/src/ol/format/XML.js","webpack:///./node_modules/openlayers/src/ol/format/GML2.js","webpack:///./src/utils.js","webpack:///./src/format/FeatureProperties.js","webpack:///./src/message/Message.js","webpack:///./node_modules/openlayers/src/ol/format/XLink.js","webpack:///./node_modules/openlayers/src/ol/Image.js","webpack:///./node_modules/openlayers/src/ol/source/ImageWMS.js","webpack:///./node_modules/openlayers/src/ol/format/WFS.js","webpack:///./node_modules/openlayers/src/ol/source/common.js","webpack:///./node_modules/openlayers/src/ol/source/WMSServerType.js","webpack:///./src/datasource/Group.js","webpack:///./node_modules/openlayers/src/ol/source/TileWMS.js","webpack:///./src/statemanager/Location.js","webpack:///./src/datasource/DataSource.js","webpack:///./node_modules/openlayers/src/ol/style/Text.js","webpack:///./node_modules/openlayers/src/ol/format/GML3.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./node_modules/openlayers/src/ol/proj/proj4.js","webpack:///./node_modules/proj4/lib/global.js","webpack:///./node_modules/proj4/lib/constants/values.js","webpack:///./node_modules/proj4/lib/constants/PrimeMeridian.js","webpack:///./node_modules/proj4/lib/constants/units.js","webpack:///./node_modules/proj4/lib/match.js","webpack:///./node_modules/proj4/lib/projString.js","webpack:///./node_modules/wkt-parser/parser.js","webpack:///./node_modules/wkt-parser/process.js","webpack:///./node_modules/wkt-parser/index.js","webpack:///./node_modules/proj4/lib/defs.js","webpack:///./node_modules/proj4/lib/parseCode.js","webpack:///./node_modules/proj4/lib/extend.js","webpack:///./node_modules/proj4/lib/common/msfnz.js","webpack:///./node_modules/proj4/lib/common/sign.js","webpack:///./node_modules/proj4/lib/common/adjust_lon.js","webpack:///./node_modules/proj4/lib/common/tsfnz.js","webpack:///./node_modules/proj4/lib/common/phi2z.js","webpack:///./node_modules/proj4/lib/projections/longlat.js","webpack:///./node_modules/proj4/lib/projections.js","webpack:///./node_modules/proj4/lib/projections/merc.js","webpack:///./node_modules/proj4/lib/constants/Ellipsoid.js","webpack:///./node_modules/proj4/lib/constants/Datum.js","webpack:///./node_modules/proj4/lib/datum.js","webpack:///./node_modules/proj4/lib/Proj.js","webpack:///./node_modules/proj4/lib/deriveConstants.js","webpack:///./node_modules/proj4/lib/datum_transform.js","webpack:///./node_modules/proj4/lib/datumUtils.js","webpack:///./node_modules/proj4/lib/adjust_axis.js","webpack:///./node_modules/proj4/lib/common/toPoint.js","webpack:///./node_modules/proj4/lib/checkSanity.js","webpack:///./node_modules/proj4/lib/transform.js","webpack:///./node_modules/proj4/lib/core.js","webpack:///./node_modules/mgrs/mgrs.js","webpack:///./node_modules/proj4/lib/Point.js","webpack:///./node_modules/proj4/lib/common/pj_enfn.js","webpack:///./node_modules/proj4/lib/common/pj_mlfn.js","webpack:///./node_modules/proj4/lib/common/pj_inv_mlfn.js","webpack:///./node_modules/proj4/lib/projections/tmerc.js","webpack:///./node_modules/proj4/lib/common/sinh.js","webpack:///./node_modules/proj4/lib/common/hypot.js","webpack:///./node_modules/proj4/lib/common/asinhy.js","webpack:///./node_modules/proj4/lib/common/log1py.js","webpack:///./node_modules/proj4/lib/common/gatg.js","webpack:///./node_modules/proj4/lib/common/clens.js","webpack:///./node_modules/proj4/lib/common/clens_cmplx.js","webpack:///./node_modules/proj4/lib/common/cosh.js","webpack:///./node_modules/proj4/lib/projections/etmerc.js","webpack:///./node_modules/proj4/lib/common/adjust_zone.js","webpack:///./node_modules/proj4/lib/projections/utm.js","webpack:///./node_modules/proj4/lib/common/srat.js","webpack:///./node_modules/proj4/lib/projections/gauss.js","webpack:///./node_modules/proj4/lib/projections/sterea.js","webpack:///./node_modules/proj4/lib/projections/stere.js","webpack:///./node_modules/proj4/lib/projections/omerc.js","webpack:///./node_modules/proj4/lib/projections/lcc.js","webpack:///./node_modules/proj4/lib/projections/krovak.js","webpack:///./node_modules/proj4/lib/common/mlfn.js","webpack:///./node_modules/proj4/lib/common/e0fn.js","webpack:///./node_modules/proj4/lib/common/e1fn.js","webpack:///./node_modules/proj4/lib/common/e2fn.js","webpack:///./node_modules/proj4/lib/common/e3fn.js","webpack:///./node_modules/proj4/lib/common/gN.js","webpack:///./node_modules/proj4/lib/common/adjust_lat.js","webpack:///./node_modules/proj4/lib/common/imlfn.js","webpack:///./node_modules/proj4/lib/projections/cass.js","webpack:///./node_modules/proj4/lib/common/qsfnz.js","webpack:///./node_modules/proj4/lib/projections/laea.js","webpack:///./node_modules/proj4/lib/common/asinz.js","webpack:///./node_modules/proj4/lib/projections/aea.js","webpack:///./node_modules/proj4/lib/projections/gnom.js","webpack:///./node_modules/proj4/lib/common/iqsfnz.js","webpack:///./node_modules/proj4/lib/projections/cea.js","webpack:///./node_modules/proj4/lib/projections/eqc.js","webpack:///./node_modules/proj4/lib/projections/poly.js","webpack:///./node_modules/proj4/lib/projections/nzmg.js","webpack:///./node_modules/proj4/lib/projections/mill.js","webpack:///./node_modules/proj4/lib/projections/sinu.js","webpack:///./node_modules/proj4/lib/projections/moll.js","webpack:///./node_modules/proj4/lib/projections/eqdc.js","webpack:///./node_modules/proj4/lib/projections/vandg.js","webpack:///./node_modules/proj4/lib/projections/aeqd.js","webpack:///./node_modules/proj4/lib/projections/ortho.js","webpack:///./node_modules/proj4/lib/projections/qsc.js","webpack:///./node_modules/proj4/projs.js","webpack:///./node_modules/proj4/lib/index.js","webpack:///./node_modules/proj4/lib/projections/somerc.js","webpack:///./node_modules/openlayers/src/ol/format/OWS.js","webpack:///./node_modules/openlayers/src/ol/format/WMTSCapabilities.js","webpack:///./src/misc/decorate.js","webpack:///./contribs/gmf/src/permalink/Permalink.js","webpack:///./src/message/Notification.js","webpack:///./src/datasource/WMSGroup.js","webpack:///./src/datasource/OGCGroup.js"],"names":["Filter","tagName","this","tagName_","prototype","getTagName","filter_Filter","LogicalNary","conditions","call","Array","slice","arguments","Object","asserts","length","ol","filter_LogicalNary","And","params","concat","apply","filter_And","Bbox","geometryName","extent","opt_srsName","srsName","filter_Bbox","Spatial","geometry","filter_Spatial","Contains","filter_Contains","Comparison","propertyName","filter_Comparison","During","begin","end","filter_During","ComparisonBinary","expression","opt_matchCase","matchCase","filter_ComparisonBinary","EqualTo","filter_EqualTo","GreaterThan","filter_GreaterThan","GreaterThanOrEqualTo","filter_GreaterThanOrEqualTo","Intersects","filter_Intersects","IsBetween","lowerBoundary","upperBoundary","filter_IsBetween","IsLike","pattern","opt_wildCard","opt_singleChar","opt_escapeChar","wildCard","undefined","singleChar","escapeChar","filter_IsLike","IsNull","filter_IsNull","LessThan","filter_LessThan","LessThanOrEqualTo","filter_LessThanOrEqualTo","Not","condition","filter_Not","NotEqualTo","filter_NotEqualTo","Or","filter_Or","Within","filter_Within","_ol_format_filter_","and","Function","bind","or","not","bbox","contains","intersects","within","equalTo","notEqualTo","lessThan","lessThanOrEqualTo","greaterThan","greaterThanOrEqualTo","isNull","between","like","during","__webpack_exports__","__webpack_require__","exports","listenerKeys_","addListenerKey","uid","key","initListenerKey_","push","clearListenerKey","forEach","_events2","default","unlistenByKey","module","angular","service","AND","NOT","OR","directive_","$window","restrict","link","scope","element","attrs","prop","map","$eval","_asserts2","assertInstanceof","_Map2","setTarget","manageResizeProp","resizeTransitionProp","resizeTransition","listen","start","Date","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","directive","$rootScope","gmfThemes","gmfTreeManagerModeFlush","gmfTreeManager","ngeoStateManager","$rootScope_","gmfThemes_","modeFlush","gmfTreeManager_","ngeoStateManager_","themeName_","addTheme","theme","opt_silent","updateState","name","setThemeName","setFirstLevelGroups","children","addFirstLevelGroups","getThemeName","isLoading","loaded","$emit","EventType","THEME_NAME_SET","removeAll","_TreeManager2","_Service2","value","_index","factory_","$timeout","func","wait","invokeApply","timeout","_len","args","_key","context","cancel","factory","_Collection2","manager","index","manager_","features_","index_","addFeature","feature","removeFeature","clear","setFeatures","features","unlisten","handleFeatureAdd_","handleFeatureRemove_","setStyle","style","evt","__WEBPACK_IMPORTED_MODULE_5__xml_js__","WMSGetFeatureInfo","opt_options","options","featureNS_","gmlFormat_","__WEBPACK_IMPORTED_MODULE_2__format_GML2_js__","layers_","layers","__WEBPACK_IMPORTED_MODULE_3__format_XMLFeature_js__","__WEBPACK_IMPORTED_MODULE_0__index_js__","featureIdentifier_","layerIdentifier_","getLayers","setLayers","readFeatures_","node","objectStack","setAttribute","localName","childNodes","i","ii","layer","nodeType","Node","ELEMENT_NODE","toRemove","layerName","replace","__WEBPACK_IMPORTED_MODULE_1__array_js__","featureType","parsers","makeArrayPusher","readFeatureElement","parsersNS","makeStructureNS","layerFeatures","pushParseAndPop","gmlFeatures","FEATURE_COLLECTION_PARSERS","readFeatures","readFeaturesFromNode","__WEBPACK_IMPORTED_MODULE_4__obj_js__","getReadOptions","writeFeatureNode","writeFeaturesNode","writeGeometryNode","olBase","$http","$q","http_","q_","rootScope_","timeout_","cache_","map_","mapViewChangePromise_","ogcServers_","ensureSnapInteractionsOnTop","assert","item","active","interaction","removeInteraction","addInteraction","setMap","_this","keys","treeCtrlsUnregister_","unregisterAllTreeCtrl_","$watchCollection","rootCtrl","traverseDepthFirst","registerTreeCtrl_","handleThemesChange_","handleMapMoveEnd_","_this2","getOgcServersObject","then","ogcServers","treeCtrl","snappingConfig","_Themes2","getSnappingConfig","wfsConfig","getWFSConfig_","getUid","stateWatcherUnregister","$watch","getState","handleTreeCtrlStateChange_","featureNS","featurePrefix","maxFeatures","requestDeferred","deactivateItem_","gmfLayer","type","NodeType","WMS","gmfLayerWMS","featureTypes","childLayers","queryable","ogcServerName","parent","mixed","ogcServer","_Controller2","getFirstParentTree","wfsSupport","urlWfs","join","url","newVal","activateItem_","_Snap2","edge","pixelTolerance","tolerance","vertex","loadItemFeatures_","resolve","loadAllItems_","view","getView","size","getSize","calculateExtent","projCode","getProjection","getCode","split","getFeatureOptions","outputFormat","wfsFormat","_WFS2","xmlSerializer","XMLSerializer","featureRequestXml","writeGetFeature","featureRequest","serializeToString","defer","post","promise","response","data","extend","_Permalink2","_Snapping2","_component2","_FeatureOverlayMgr2","manageResize","controller","bindToController","templateUrl","_index2","baseModuleTemplateUrl","Controller_","ngeoFeatureOverlayMgr","gmfPermalink","gmfSnapping","ngeoFeatureOverlayMgr_","gmfPermalink_","gmfSnapping_","$onInit","init","_Overlay","originalEl","$","closeEl_","class","html","contentEl_","append","_Overlay2","inherits","getElement","getMap","popover","contentEl","window","setTimeout","content","placement","template","one","removeOverlay","ENABLED","LON","LAT","ELEVATION","HEADING","PITCH","PREFIX","olColor","olArray","_TextFeature2","accuracy_","accuracy","ACCURACY_","encodeStyles_","encodeStyles","propertiesFunction_","properties","defaultPropertiesFunction_","setStyle_","prevX_","prevY_","LegacyProperties_","propertiesType","StyleTypes_","LineString","_FeatureHashStyleType2","LINE_STRING","Point","POINT","Polygon","POLYGON","MultiLineString","MultiPoint","MultiPolygon","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","CHAR64_","getProperties","encodeSignedNumber_","num","signedNum","encodeNumber_","encodedNumber","charAt","styles","geometryType","encodedStyles","styleType","fillStyle","getFill","imageStyle","getImage","strokeStyle","getStroke","textStyle","getText","encodeStylePolygon_","encodeStyleLine_","encodeStylePoint_","encodeStyleText_","encodeStyleStroke_","radius","getRadius","encodeURIComponent","encodeStyleFill_","opt_propertyName","fillColor","getColor","isArray","fillColorRgba","asArray","fillColorHex","_utils2","rgbArrayToHex","strokeColor","strokeColorRgba","strokeColorHex","strokeWidth","getWidth","fontStyle","getFont","font","readLineStringGeometry_","text","substring","flatCoordinates","decodeCoordinates_","lineString","_LineString2","setFlatCoordinates","_GeometryLayout2","XY","readMultiLineStringGeometry_","ends","lineStrings","multiLineString","_MultiLineString2","readPointGeometry_","point","_Point2","readMultiPointGeometry_","multiPoint","_MultiPoint2","readPolygonGeometry_","rings","polygon","_Polygon2","readMultiPolygonGeometry_","endss","polygons","j","jj","multipolygon","_MultiPolygon2","setStyleInFeature_","getStyleProperties_","fontSize","fontColor","pointRadius","_Fill2","color","_Stroke2","width","_Circle2","fill","stroke","_Text2","_Style2","image","setStyleProperties_","getGeometry","_FeatureProperties2","IS_TEXT","parseFloat","indexOf","Math","round","clone","setProperties","castValue_","numProperties","ANGLE","OPACITY","SIZE","STROKE","boolProperties","IS_CIRCLE","IS_RECTANGLE","SHOW_MEASURE","SHOW_LABEL","includes","parts","keyVal","decodeURIComponent","val","writeLineStringGeometry_","getFlatCoordinates","stride","getStride","encodeCoordinates_","writeMultiLineStringGeometry_","getEnds","lineStringCount","offset","textArray","writePointGeometry_","writeMultiPointGeometry_","encodeRings_","linearRingCount","writePolygonGeometry_","writeMultiPolygonGeometry_","getEndss","polygonCount","GEOMETRY_READERS_","P","L","A","l","p","a","GEOMETRY_WRITERS_","opt_flatCoordinates","len","b","shift","result","dx","dy","encodedCoordinates","x","y","floor","readFeatureFromText","splitIndex","geometryText","readGeometryFromText","_Feature2","attributesAndStylesText","attributesText","set","stylesText","readFeaturesFromText","geometryReader","writeFeatureText","encodedParts","encodedGeometry","writeGeometryText","encodedProperties","propFunction","getGeometryName","encoded","toString","styleFunction","getStyleFunction","getType","writeFeaturesText","geometryWriter","transformedGeometry","_Feature4","transformWithOptions","_Location2","__WEBPACK_IMPORTED_MODULE_14__structs_RBush_js__","Snap","__WEBPACK_IMPORTED_MODULE_10__interaction_Pointer_js__","handleEvent","handleEvent_","handleDownEvent","__WEBPACK_IMPORTED_MODULE_7__functions_js__","handleUpEvent","handleUpEvent_","source_","source","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","pixelTolerance_","sortByDistance_","sortByDistance","rBush_","SEGMENT_WRITERS_","LinearRing","GeometryCollection","writeGeometryCollectionGeometry_","Circle","writeCircleGeometry_","opt_listen","feature_uid","segmentWriter","getExtent","__WEBPACK_IMPORTED_MODULE_6__extent_js__","__WEBPACK_IMPORTED_MODULE_4__events_js__","__WEBPACK_IMPORTED_MODULE_5__events_EventType_js__","CHANGE","handleFeatureChange_","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","getFeatures","__WEBPACK_IMPORTED_MODULE_12__source_Vector_js__","Event","__WEBPACK_IMPORTED_MODULE_1__Collection_js__","handlingDownUpSequence","updateFeature_","opt_unlisten","rBush","nodesToRemove","forEachInExtent","remove","currentMap","__WEBPACK_IMPORTED_MODULE_2__CollectionEventType_js__","ADD","REMOVE","__WEBPACK_IMPORTED_MODULE_13__source_VectorEventType_js__","ADDFEATURE","REMOVEFEATURE","shouldStopEvent","snapTo","pixel","pixelCoordinate","lowerLeft","getCoordinateFromPixel","upperRight","box","segments","getInExtent","filter","segment","__WEBPACK_IMPORTED_MODULE_8__geom_GeometryType_js__","CIRCLE","dist","pixel1","pixel2","squaredDist1","squaredDist2","snappedToVertex","snapped","vertexPixel","sort","closestSegment","isCircle","getPixelFromCoordinate","__WEBPACK_IMPORTED_MODULE_3__coordinate_js__","squaredDistance","sqrt","min","closestOnCircle","closestOnSegment","distance","coordinates","__WEBPACK_IMPORTED_MODULE_9__geom_Polygon_js__","getCoordinates","segmentData","insert","geometries","getGeometriesArray","lines","points","k","kk","coordinate","featuresToUpdate","__WEBPACK_IMPORTED_MODULE_11__obj_js__","squaredDistanceToSegment","XYZ","projection","tileGrid","tilegrid","createXYZ","extentFromProjection","maxZoom","minZoom","tileSize","TileImage","attributions","cacheSize","crossOrigin","opaque","reprojectionErrorThreshold","tileLoadFunction","tilePixelRatio","tileUrlFunction","urls","wrapX","transition","source_XYZ","OSM","ATTRIBUTION","olProj","olProjProj4","epsg21781def","_proj4","defs","register","get","setExtent","Proj","projections","add","_somerc2","_from","_id","_inBundle","_integrity","_location","_phantomChildren","_requested","registry","raw","escapedName","rawSpec","saveSpec","fetchSpec","_requiredBy","_resolved","_shasum","_spec","_where","author","bugs","bundleDependencies","contributors","email","dependencies","mgrs","wkt-parser","deprecated","description","devDependencies","chai","curl","grunt","grunt-cli","grunt-contrib-connect","grunt-contrib-jshint","grunt-contrib-uglify","grunt-mocha-phantomjs","grunt-rollup","istanbul","mocha","rollup","rollup-plugin-json","rollup-plugin-node-resolve","tin","directories","test","doc","homepage","license","main","repository","scripts","build","build:tmerc","version","__WEBPACK_IMPORTED_MODULE_1__string_js__","XSD","readBoolean","s","__WEBPACK_IMPORTED_MODULE_0__xml_js__","getAllTextContent","readBooleanString","string","m","exec","readDateTime","dateTime","parse","isNaN","readDecimal","readDecimalString","readNonNegativeInteger","readNonNegativeIntegerString","parseInt","readString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeCDATASection","appendChild","DOCUMENT","createCDATASection","writeDateTimeTextNode","date","getUTCFullYear","padNumber","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","createTextNode","writeDecimalTextNode","decimal","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","__WEBPACK_IMPORTED_MODULE_12__geom_flat_simplify_js__","opt_layout","__WEBPACK_IMPORTED_MODULE_6__geom_SimpleGeometry_js__","ends_","maxDelta_","maxDeltaRevision_","setCoordinates","appendLineString","changed","layout","closestPointXY","closestPoint","minSquaredDistance","__WEBPACK_IMPORTED_MODULE_2__extent_js__","getRevision","__WEBPACK_IMPORTED_MODULE_7__geom_flat_closest_js__","getsMaxSquaredDelta","getsClosestPoint","getCoordinateAtM","opt_extrapolate","opt_interpolate","__WEBPACK_IMPORTED_MODULE_3__geom_GeometryLayout_js__","XYM","XYZM","extrapolate","interpolate","__WEBPACK_IMPORTED_MODULE_10__geom_flat_interpolate_js__","lineStringsCoordinateAtM","__WEBPACK_IMPORTED_MODULE_9__geom_flat_inflate_js__","coordinatess","getLineString","__WEBPACK_IMPORTED_MODULE_5__geom_LineString_js__","getLineStrings","getFlatMidpoints","midpoints","midpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","douglasPeuckers","simplifiedMultiLineString","__WEBPACK_IMPORTED_MODULE_4__geom_GeometryType_js__","MULTI_LINE_STRING","intersectsExtent","__WEBPACK_IMPORTED_MODULE_11__geom_flat_intersectsextent_js__","setLayout","__WEBPACK_IMPORTED_MODULE_8__geom_flat_deflate_js__","setFlatCoordinatesInternal","setLineStrings","getLayout","__WEBPACK_IMPORTED_MODULE_9__math_js__","appendPoint","__WEBPACK_IMPORTED_MODULE_8__geom_flat_inflate_js__","getPoint","n","__WEBPACK_IMPORTED_MODULE_5__geom_Point_js__","getPoints","MULTI_POINT","__WEBPACK_IMPORTED_MODULE_7__geom_flat_deflate_js__","__WEBPACK_IMPORTED_MODULE_17__geom_flat_simplify_js__","__WEBPACK_IMPORTED_MODULE_7__geom_SimpleGeometry_js__","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","appendPolygon","multiPolygon","newEndss","__WEBPACK_IMPORTED_MODULE_10__geom_flat_closest_js__","getssMaxSquaredDelta","getssClosestPoint","getOrientedFlatCoordinates","containsXY","__WEBPACK_IMPORTED_MODULE_11__geom_flat_contains_js__","linearRingssContainsXY","getArea","__WEBPACK_IMPORTED_MODULE_8__geom_flat_area_js__","linearRingss","opt_right","__WEBPACK_IMPORTED_MODULE_16__geom_flat_orient_js__","orientLinearRingss","__WEBPACK_IMPORTED_MODULE_13__geom_flat_inflate_js__","coordinatesss","getFlatInteriorPoints","flatCenters","__WEBPACK_IMPORTED_MODULE_9__geom_flat_center_js__","__WEBPACK_IMPORTED_MODULE_14__geom_flat_interiorpoint_js__","getInteriorPoints","interiorPoints","__WEBPACK_IMPORTED_MODULE_5__geom_MultiPoint_js__","linearRingssAreOriented","simplifiedEndss","quantizess","simplifiedMultiPolygon","getPolygon","prevEnds","__WEBPACK_IMPORTED_MODULE_6__geom_Polygon_js__","getPolygons","MULTI_POLYGON","__WEBPACK_IMPORTED_MODULE_15__geom_flat_intersectsextent_js__","__WEBPACK_IMPORTED_MODULE_12__geom_flat_deflate_js__","lastEnds","setPolygons","$injector","ngeoLayerHelper","gettextCatalog","gmfThemesOptions","_EventTarget2","addBlankBackgroundLayer_","addBlankBackgroundLayer","$q_","$http_","treeUrl_","has","cacheVersion_","ngeoLocation_","layerHelper_","deferred_","promise_","bgLayerPromise_","findGroupByLayerNodeName","themes","group","getFlatNodes","findObjectByName","findGroupByName","internalNodes","getFlatInternalNodes","objects","objectName","find","object","findThemeByName","themeName","nodes","getBgLayers","appDimensions","layerHelper","callback","metadata","dimensions","ids","getIds","array","child","layerLayerCreationFn","gmfLayerWMTS","createWMTSLayerFromCapabilitites","message","console","error","server","imageType","createBasicWMSLayer","credential","fail","promiseSuccessFn","promises","background_layers","itemType","reverse","all","collection","createBasicGroup","layerGroupCreationFn","values","getString","_Tile2","label","thumbnail","getThemeObject","getThemesObject","getBackgroundLayersObject","hasEditableLayers","hasEditableLayers_","some","hasNodeEditableLayers_","editable","getNodeMaxResolution","maxResolution","maxResolutionHint","getNodeMinResolution","minResolution","minResolutionHint","loadThemes","opt_roleId","_this3","role","cache_version","cache","withCredentials","errors","hasParam","alert","dispatchEvent","reject","MIXED_GROUP","NOT_MIXED_GROUP","WMTS","_LayerHelper2","$scope","$attrs","isRoot","nodeExpr","state_","oldVal","mapExpr","$parent","$on","splice","depth","nodelayerExpr","nodelayerexprExpr","newNodelayerExpr","assertString","dataSource_","_decorate2","layerLoading","$broadcast","listenersExpr","listenersexprExpr","treeScope","setState","state","opt_broadcast","setStateInternal_","refreshState","firstParents","firstParent","newState","getCalculateState","childState","previousChildState","getSetActive","getArray","addLayer","removeLayer","getDataSource","setDataSource","dataSource","tree","VisitorDecision","STOP","SKIP","DESCEND","visitor","gmfRasterUrl","url_","getRaster","opt_params","Param","X","Y","handleGetRaster_","resp","__WEBPACK_IMPORTED_MODULE_4__xml_js__","XMLFeature","xmlSerializer_","__WEBPACK_IMPORTED_MODULE_2__format_Feature_js__","__WEBPACK_IMPORTED_MODULE_3__format_FormatType_js__","XML","isDocument","readFeatureFromDocument","isNode","readFeatureFromNode","readFeaturesFromDocument","firstChild","nextSibling","readGeometryFromDocument","readGeometryFromNode","readProjection","readProjectionFromDocument","readProjectionFromNode","defaultDataProjection","ngeoLocation","ngeoUsedKeyRegexp","initialState","usedKeyRegexp","useLocalStorage_","setUseLocalStorage","paramKeys","getParamKeys","_loop","keyRegexp","match","localStorage","getParam","err","getInitialValue","getInitialStringValue","getInitialNumberValue","getInitialBooleanValue","updateParams","deleteParam","RegExp","_classCallCheck","_possibleConstructorReturn","__proto__","getPrototypeOf","dimensionsConfig_","dimensionsConfig","filterCondition_","filterCondition","_Condition2","filterRules_","filterRules","filtrable_","filtrable","copyable_","copyable","dimensions_","geometryName_","DEFAULT_GEOMETRY_NAME_","ogcImageType_","ogcImageType","ogcLayers_","ogcLayers","ogcServerType_","ogcServerType","ServerType","MAPSERVER","ogcType_","ogcType","Type","snappable_","snappable","snappingToEdges_","snappingToEdges","snappingToVertice_","snappingToVertice","snappingTolerance_","snappingTolerance","timeAttributeName_","timeAttributeName","timeLowerValue_","timeLowerValue","timeProperty_","timeProperty","timeUpperValue_","timeUpperValue","wfsFeatureNS_","wfsFeatureNS","WFSFeatureNS","wfsFeaturePrefix_","wfsFeaturePrefix","WFSFeaturePrefix","FEATURE","wfsOutputFormat_","wfsOutputFormat","WFSOutputFormat","GML3","wfsUrl_","wfsUrl","wmsInfoFormat_","wmsInfoFormat","WMSInfoFormat","GML","wmsIsSingleTile_","wmsIsSingleTile","wmsUrl_","wmsUrl","wmtsLayer_","wmtsLayer","wmtsUrl_","wmtsUrl","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","ogcLayer","return","supportsWFS","format","_GML4","GML2","_GML2","gmlFormat","wfsFormat_","wmsFormat","supportsWMS","_WMSGetFeatureInfo2","wmsFormat_","_inherits","_DataSource2","_createClass","_get","attributes","updateGeometryNameFromAttributes_","combinableForWFS","haveTheSameActiveDimensions","combinableForWMS","res","queryableOnly","getInRangeOGCLayerNames","layerNames","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","maxRes","minRes","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","getOGCLayerNames","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","attribute","_AttributeType2","GEOMETRY","share","myActive","activeDimensions","itsActive","time","range","lower","upper","config","timeRangeValue","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","guessServiceTypeByUrl","GEOSERVER","QGISSERVER","geoserver","mapserver","qgisserver","BOOLEAN","DATE","DATETIME","TIME","NUMBER","SELECT","TEXT","_module2","constant","MainController","elevationLayers","selectedElevationLayer","_OSM2","_View2","resolutions","center","zoom","_RasterService2","_debounce2","component_","elevation","loading","attr","ctrl","toggleActive_","ngeoDebounce","gmfRaster","ngeoDebounce_","gmfRaster_","scope_","inViewport_","e","$apply","pointerStop_","getViewport","getRasterSuccess_","getRasterError_","widgetComponent_","bindings","component","WidgetController_","__WEBPACK_IMPORTED_MODULE_15__xml_js__","GMLBase","schemaLocation","GMLNS","featureMember","makeReplacer","readFeaturesInternal","featureMembers","__WEBPACK_IMPORTED_MODULE_4__format_XMLFeature_js__","ONLY_WHITESPACE_RE_","namespaceURI","prefix","defaultPrefix","ft","nodeName","pop","count","uri","candidate","ns","readGeometryElement","firstElementChild","getAttribute","GEOMETRY_PARSERS_","__WEBPACK_IMPORTED_MODULE_3__format_Feature_js__","fid","getAttributeNS","nextElementSibling","__WEBPACK_IMPORTED_MODULE_2__Feature_js__","setGeometryName","setId","readPoint","readFlatCoordinatesFromNode_","__WEBPACK_IMPORTED_MODULE_11__geom_Point_js__","__WEBPACK_IMPORTED_MODULE_5__geom_GeometryLayout_js__","readMultiPoint","MULTIPOINT_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiPoint_js__","readMultiLineString","MULTILINESTRING_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_MultiLineString_js__","readMultiPolygon","MULTIPOLYGON_PARSERS_","__WEBPACK_IMPORTED_MODULE_10__geom_MultiPolygon_js__","pointMemberParser_","parseNode","POINTMEMBER_PARSERS_","lineStringMemberParser_","LINESTRINGMEMBER_PARSERS_","polygonMemberParser_","POLYGONMEMBER_PARSERS_","readLineString","__WEBPACK_IMPORTED_MODULE_6__geom_LineString_js__","readFlatLinearRing_","ring","GEOMETRY_FLAT_COORDINATES_PARSERS_","readLinearRing","__WEBPACK_IMPORTED_MODULE_7__geom_LinearRing_js__","readPolygon","flatLinearRings","FLAT_LINEAR_RINGS_PARSERS_","__WEBPACK_IMPORTED_MODULE_12__geom_Polygon_js__","http://www.opengis.net/gml","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","RING_PARSERS","__WEBPACK_IMPORTED_MODULE_13__obj_js__","__WEBPACK_IMPORTED_MODULE_14__proj_js__","olObj","olUri","GROUP_KEY","REFRESH_PARAM","sourceURL","sourceLayersName","sourceFormat","opt_serverType","opt_time","opt_crossOrigin","FORMAT","LAYERS","olServerType","_ImageWMS2","serverType","_Image2","createBasicWMSLayerFromDataSource","setVisible","visible","id","capabilitiesURL","opt_dimensions","parser","_WMTSCapabilities2","preload","Infinity","read","_WMTS2","optionsFromCapabilities","isEmpty","updateDimensions","setSource","elt","createWMTSLayerFromCapabilititesObj","capabilities","layerCap","capabilitiesStyles","opt_layers","_Group2","getGroupFromMap","groupName","getLayerGroup","existingGroup","getFlatLayers","getFlatLayers_","getLayerByName","found","sublayers","getWMTSLegendURL","legendURL","getWMSLegendURL","opt_scale","opt_legendRule","queryString","TRANSPARENT","SERVICE","VERSION","REQUEST","LAYER","appendParams","isLayerVisible","getVisible","currentResolution","getResolution","getMinResolution","getMaxResolution","refreshWMSLayer","getSource","getParams","random","updateWMSLayerState","names","getQuerySourceIds","ngeoNotification","$timeout_","$injector_","gettextCatalog_","ngeoNotification_","root","numberOfGroupsToAddInThisDigestLoop","groupsToAddInThisDigestLoop_","promiseForGroupsToAddInThisDigestLoop_","refreshFirstLevelGroups_","firstLevelGroups","PermalinkParam","TREE_GROUPS","opt_add","groupNotAdded","addFirstLevelGroup_","notifyCantAddGroups_","updateTreeGroupsState_","groups","treeGroupsParam","cleanParams","alreadyAdded","groupID","rootChild","grp","unshift","addGroupByName","_this4","addGroupByLayerName","_this5","groupAdded","getTreeCtrlByNodeId","treeCtrlToActive","warn","removeGroup","cloneGroupNode_","assign","toggleNodeCheck_","childNode","isChecked","msg","notify","_Message2","INFORMATION","correspondingTreeCtrl","getOgcServer","firstLevelGroupCtrl","gmfGroup","_this6","firstLevelGroupsFullState","getFirstLevelGroupFullState_","nodesToRestore","nodeToRestore","fullState","setNodeMetadataFromFullState_","_this7","isExpanded","isLegendExpanded","nodeElement","hasClass","legendElement","is","_this8","_Notification2","readFromDocument","readFromNode","__WEBPACK_IMPORTED_MODULE_8__xml_js__","__WEBPACK_IMPORTED_MODULE_3__format_GMLBase_js__","schemaLocation_","readFlatCoordinates_","containerSrs","axisOrientation","proj","__WEBPACK_IMPORTED_MODULE_7__proj_js__","getAxisOrientation","coordsGroups","z","coords","substr","readBox_","BOX_PARSERS_","__WEBPACK_IMPORTED_MODULE_1__extent_js__","innerBoundaryIsParser_","flatLinearRing","outerBoundaryIsParser_","innerBoundaryIs","outerBoundaryIs","Box","GEOMETRY_NODE_FACTORY_","opt_nodeName","multiSurface","surface","multiCurve","createElementNS","writeFeatureElement","getId","serializers","__WEBPACK_IMPORTED_MODULE_5__geom_Geometry_js__","makeChildAppender","writeGeometryElement","__WEBPACK_IMPORTED_MODULE_4__format_XSD_js__","__WEBPACK_IMPORTED_MODULE_6__obj_js__","pushSerializeAndPop","makeSimpleNodeFactory","dataProjection","featureProjection","GEOMETRY_SERIALIZERS_","writeCurveOrLineString_","createCoordinatesNode_","writeCoordinates_","writeCurveSegments_","hasZ","getCoords_","line","writeSurfaceOrPolygon_","getLinearRings","RING_SERIALIZERS_","RING_NODE_FACTORY_","patches","writeSurfacePatches_","parentNode","exteriorWritten","writeRing_","linearRing","writeLinearRing_","opt_hasZ","writeMultiCurveOrLineString_","curve","LINESTRINGORCURVEMEMBER_SERIALIZERS_","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","writePoint_","coord","writeMultiPoint_","POINTMEMBER_SERIALIZERS_","writePointMember_","writeLineStringOrCurveMember_","writeMultiSurfaceOrPolygon_","SURFACEORPOLYGONMEMBER_SERIALIZERS_","writeSurfaceOrPolygonMember_","writeEnvelope","ENVELOPE_SERIALIZERS_","OBJECT_PROPERTY_NODE_FACTORY","Curve","MultiCurve","Surface","MultiSurface","Envelope","curveMember","MULTIGEOMETRY_TO_MEMBER_NODENAME_","surfaceMember","lowerCorner","upperCorner","multiGeom","navigator","userAgent","hex","rgb","r","g","Error","colorZeroPadding","queryData","pairs","pair","indexOfEquals","queryItem","event","_condition2","noModifierKeys","singleClick","COLOR","NAME","AZIMUT","showMessage","show","getMessageObjects","ERROR","info","success","SUCCESS","WARNING","opt_type","msgObjects","msgObject","defaultType","XLink","readHref","_ol_Image_","resolution","pixelRatio","src","imageLoadFunction","ImageBase","ImageState","IDLE","src_","image_","Image","imageListenerKeys_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","ol_extent","height","LOADED","load","LOADING","events","listenOnce","LOAD","setImage","ol_Image","ImageWMS","source_Image","crossOrigin_","defaultImageLoadFunction","params_","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","projectionObj","sourceProjectionObj","reproj","calculateSourceResolution","baseParams","common","QUERY_LAYERS","obj","getRequestUrl_","getImageInternal","findNearestResolution","imageResolution","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getPixelRatio","handleImageChange","getImageLoadFunction","WMSServerType","dpi","CARMENTA_SERVER","QGIS","getUrl","setImageLoadFunction","setUrl","compareVersions","__WEBPACK_IMPORTED_MODULE_11__xml_js__","WFS","featureType_","__WEBPACK_IMPORTED_MODULE_3__format_GML3_js__","SCHEMA_LOCATIONS","DEFAULT_VERSION","__WEBPACK_IMPORTED_MODULE_6__format_XMLFeature_js__","FEATURE_PREFIX","XMLNS","OGCNS","WFSNS","FESNS","1.1.0","1.0.0","getFeatureType","setFeatureType","__WEBPACK_IMPORTED_MODULE_9__obj_js__","__WEBPACK_IMPORTED_MODULE_4__format_GMLBase_js__","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","FEATURE_COLLECTION_PARSERS_","boundedBy","makeObjectPropertySetter","__WEBPACK_IMPORTED_MODULE_7__format_XSD_js__","TRANSACTION_SUMMARY_PARSERS_","http://www.opengis.net/wfs","totalInserted","totalUpdated","totalDeleted","readTransactionSummary_","OGC_FID_PARSERS_","http://www.opengis.net/ogc","FeatureId","fidParser_","INSERT_RESULTS_PARSERS_","Feature","readInsertResults_","TRANSACTION_RESPONSE_PARSERS_","TransactionSummary","InsertResults","QUERY_SERIALIZERS_","PropertyName","writeFeature_","gmlVersion","writeOgcFidFilter_","getTypeName_","writeDelete_","__WEBPACK_IMPORTED_MODULE_1__asserts_js__","typeName","setAttributeNS","writeUpdate_","getKeys","__WEBPACK_IMPORTED_MODULE_8__geom_Geometry_js__","TRANSACTION_SERIALIZERS_","writeProperty_","writeNative_","nativeElement","vendorId","safeToIgnore","Insert","Update","Delete","Property","Native","writeQuery_","propertyNames","writeFilterCondition_","GETFEATURE_SERIALIZERS_","writeBboxFilter_","writeOgcPropertyName_","writeContainsFilter_","writeIntersectsFilter_","writeWithinFilter_","writeDuringFilter_","valueReference","timePeriod","writeTimeInstant_","writeLogicalFilter_","writeNotFilter_","writeComparisonFilter_","writeOgcLiteral_","writeIsNullFilter_","writeIsBetweenFilter_","writeIsLikeFilter_","writeOgcExpression_","property","timeInstant","timePosition","Query","BBOX","PropertyIsEqualTo","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","PropertyIsBetween","PropertyIsLike","writeFilter","writeGetFeature_","handle","resultType","startIndex","__WEBPACK_IMPORTED_MODULE_5__format_filter_js__","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","nativeElements","__WEBPACK_IMPORTED_MODULE_10__proj_js__","dataSourcesCollection_","dataSources","title_","title","VisibilityState","ON","OFF","visibleToSet","visibilityState","getDataSourceState","INDETERMINATE","__WEBPACK_IMPORTED_MODULE_13__uri_js__","TileWMS","transparent","__WEBPACK_IMPORTED_MODULE_9__source_TileImage_js__","tileClass","gutter_","gutter","tmpExtent_","__WEBPACK_IMPORTED_MODULE_3__extent_js__","setKey","getKeyForParams_","__WEBPACK_IMPORTED_MODULE_1__index_js__","__WEBPACK_IMPORTED_MODULE_6__proj_js__","getTileGrid","getTileGridForProjection","tileCoord","getTileCoordForCoordAndResolution","getResolutions","tileResolution","tileExtent","getTileCoordExtent","__WEBPACK_IMPORTED_MODULE_8__size_js__","toSize","getTileSize","tmpSize","buffer","__WEBPACK_IMPORTED_MODULE_7__reproj_js__","__WEBPACK_IMPORTED_MODULE_0__common_js__","getGutterInternal","__WEBPACK_IMPORTED_MODULE_10__source_WMSServerType_js__","__WEBPACK_IMPORTED_MODULE_2__asserts_js__","tmp","__WEBPACK_IMPORTED_MODULE_5__math_js__","__WEBPACK_IMPORTED_MODULE_11__tilecoord_js__","hash","getTilePixelRatio","fixedTileUrlFunction","scale","__WEBPACK_IMPORTED_MODULE_12__string_js__","location","history","history_","schema_","protocol","domain_","hostname","port_","port","path_","pathname","queryData_","decodeQueryString","search","fragment_","replaceState","getPath","getUriString","out","String","encodedQueryData","encodeQueryString","encodedFragment","hasFragmentParam","getFragmentParam","getParamAsInt","valueAsInt","getParamAsFloat","valueAsFloat","getFragmentParamAsInt","getFragmentParamKeys","getParamKeysWithPrefix","getFragmentParamKeysWithPrefix","updateFragmentParams","deleteFragmentParam","refresh","setPath","path","LocationFactory","lastUri","newUri","$evalAsync","MockProvider","$locationProvider","absUrl","opt_path","host","opt_search","opt_paramValue","opt_url","inRange_","inRange","visible_","id_","identifierAttribute_","identifierAttribute","maxResolution_","minResolution_","name_","__WEBPACK_IMPORTED_MODULE_1__style_TextPlacement_js__","Text","font_","rotation_","rotation","rotateWithView_","rotateWithView","scale_","text_","textAlign_","textAlign","textBaseline_","textBaseline","fill_","__WEBPACK_IMPORTED_MODULE_0__style_Fill_js__","DEFAULT_FILL_COLOR_","maxAngle_","maxAngle","PI","placement_","overflow_","overflow","stroke_","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","getPlacement","getMaxAngle","getOverflow","getRotation","getRotateWithView","getScale","getTextAlign","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setFill","setRotation","setScale","setStroke","setText","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","__WEBPACK_IMPORTED_MODULE_14__xml_js__","surface_","curve_","multiCurve_","multiSurface_","readMultiCurve_","MULTICURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_9__geom_MultiLineString_js__","readMultiSurface_","MULTISURFACE_PARSERS_","curveMemberParser_","CURVEMEMBER_PARSERS_","surfaceMemberParser_","SURFACEMEMBER_PARSERS_","readPatch_","PATCHES_PARSERS_","readSegment_","SEGMENTS_PARSERS_","readPolygonPatch_","readLineStringSegment_","interiorParser_","exteriorParser_","readSurface_","SURFACE_PARSERS_","__WEBPACK_IMPORTED_MODULE_11__geom_Polygon_js__","__WEBPACK_IMPORTED_MODULE_7__geom_GeometryLayout_js__","readCurve_","CURVE_PARSERS_","__WEBPACK_IMPORTED_MODULE_8__geom_LineString_js__","readEnvelope_","ENVELOPE_PARSERS_","readFlatPos_","re","__WEBPACK_IMPORTED_MODULE_13__proj_js__","readFlatPosList_","contextDimension","dim","__WEBPACK_IMPORTED_MODULE_5__format_XSD_js__","pos","posList","interior","exterior","curveMembers","surfaceMembers","PolygonPatch","LineStringSegment","writePos_","srsDimension","writePosList_","__WEBPACK_IMPORTED_MODULE_12__obj_js__","__WEBPACK_IMPORTED_MODULE_6__geom_Geometry_js__","writeFeatureMembers_","adaptOptions","geom","featureUidToGroupIndex_","groups_","_Vector4","useSpatialIndex","layer_","_Vector2","styleFunction_","updateWhileAnimating","updateWhileInteracting","groupIndex","featureUid","getLayer","getFeatureOverlay","defaultFunction","_FeatureOverlay2","createFunction","proj4","projCodes","code","__WEBPACK_IMPORTED_MODULE_0__proj_js__","def","__WEBPACK_IMPORTED_MODULE_2__Projection_js__","axis","metersPerUnit","to_meter","units","code1","proj1","code2","proj2","__WEBPACK_IMPORTED_MODULE_1__transforms_js__","transform","forward","inverse","PJD_3PARAM","PJD_7PARAM","PJD_WGS84","PJD_NODATUM","SEC_TO_RAD","HALF_PI","SIXTH","RA4","RA6","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","PrimeMeridian_exports","greenwich","lisbon","paris","bogota","madrid","rome","bern","jakarta","ferro","brussels","stockholm","athens","oslo","us-ft","ignoredChar","testkey","lkey","toLowerCase","projString","defData","paramName","paramVal","paramOutname","self","paramObj","v","reduce","datum","rf","lat_0","lat0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","alpha","lonc","longc","x_0","x0","y_0","y0","k_0","k0","r_a","R_A","zone","south","utmSouth","towgs84","datum_params","unit","from_greenwich","pm","nadgrids","datumCode","txt","Parser","output","NEUTRAL","whitespace","latin","keyword","endThings","digets","level","place","stack","currentObject","mapit","thing","newObj","sExpr","convert","readCharicter","char","neutral","quoted","afterquote","number","word","afterItem","newObjects","wkt_parser_D2R","d2r","input","wkt_parser","wkt","lisp","projName","local","PROJECTION","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","sphere","ellps","isFinite","outName","inName","cleanWKT","that","EPSG","ESRI","IAU2000","log","WGS84","GOOGLE","global","lib_defs","codeWords","parseCode","testObj","testDef","testWKT","testProj","destination","msfnz","eccent","sinphi","cosphi","con","sign","adjust_lon","abs","tsfnz","phi","com","pow","tan","phi2z","ts","dphi","eccnth","atan","sin","identity","pt","projs","es","cos","lon","lat","exp","projections_names","projStore","Ellipsoid_exports","MERIT","ellipseName","SGS85","GRS80","IAU76","airy","APL4","NWL9D","mod_airy","andrae","aust_SA","GRS67","bessel","bess_nam","clrk66","clrk80","clrk58","CPM","delmbr","engelis","evrst30","evrst48","evrst56","evrst69","evrstSS","fschr60","fschr60m","fschr68","helmert","hough","intl","kaula","lerch","mprts","new_intl","plessis","krass","SEasia","walbeck","WGS60","WGS66","WGS7","Datum_exports","wgs84","ellipse","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","lib_datum","ep2","datum_type","Projection","srsCode","json","ourProj","datumDef","a2","b2","sphere_","deriveConstants_sphere","ecc","datumObj","checkParams","datum_transform","dest","compareDatums","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","geodeticToGeocentric","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricToWgs84","x_tmp","y_tmp","z_tmp","geocentricFromWgs84","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","Z","atan2","geocentricToGeodetic","adjust_axis","crs","denorm","t","xin","yin","zin","toPoint","checkSanity","checkCoord","Number","TypeError","checkNotWGS","core_wgs84","transformer","from","to","transformedArray","checkProj","oProj","core","fromProj","toProj","single","NUM_100K_SETS","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","mgrs_A","I","O","mgrs_V","mgrs_Z","mgrs_forward","UTMtoLL","decode","toUpperCase","left","bottom","right","top","mgrs_toPoint","ll","utm","seasting","easting","snorthing","northing","zoneNumber","zoneLetter","setParm","get100kSetForZone","setColumn","setRow","column","row","parm","colOrigin","charCodeAt","rowOrigin","colInt","rowInt","rollover","fromCharCode","encode","N","T","C","M","LongOriginRad","ZoneNumber","Lat","Long","LatRad","degToRad","LongRad","UTMEasting","UTMNorthing","LetterDesignator","getLetterDesignator","LLtoUTM","deg","radToDeg","rad","N1","T1","C1","R1","D","LongOrigin","mu","phi1Rad","e1","topRight","mgrsString","testChar","hunK","sb","east100k","curCol","eastingValue","rewindMarker","getEastingFromChar","north100k","curRow","northingValue","getNorthingFromChar","getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","fromMGRS","mgrsStr","toMGRS","lib_Point","C08","pj_enfn","en","pj_mlfn","sphi","cphi","pj_inv_mlfn","arg","tmerc","ml0","delta_lon","sin_phi","cos_phi","al","als","c","cs","tq","ml","acos","tan_phi","d","ds","f","temp","h","asin","sinh","hypot","max","asinhy","log1py","gatg","pp","B","cos_2B","h1","h2","clens","arg_r","hr","hr1","hr2","clens_cmplx","arg_i","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","cosh_arg_i","cosh","hi1","hi","etmerc","cgb","cbg","utg","gtu","np","Qn","Zb","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","adjust_zone","dependsOn","srat","esinp","gauss_MAX_ITER","gauss","rc","phic0","ratexp","K","sterea","sinc0","cosc0","R2","sinc","cosc","cosl","rho","stere","coslat0","sinlat0","cons","ms1","X0","ssfn_","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","NaN","ce","Chi","phit","eccen","omerc","no_off","no_rot","bl","fl","gl","t0","dl","t1","t2","el","hl","jl","pl","dlon12","dlon10","gamma0","uc","us","vs","ql","sl","tl","vl","ul","POSITIVE_INFINITY","qp","sp","tp","vp","up","lcc","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","f0","rh1","theta","krovak","s45","s90","fi0","e2","alfa","uq","u0","k1","n0","s0","ro0","ad","gfi","u","deltav","eps","ro","czech","fi1","ok","mlfn","e0","e3","e0fn","e1fn","e2fn","e3fn","gN","adjust_lat","imlfn","cass","lam","nl","asq","cl","dd","ml1","phi1","nl1","rl1","tl1","dsq","qsfnz","P00","P01","P02","P10","P11","P20","laea","mode","S_POLE","N_POLE","EQUIT","OBLIQ","mmf","apa","APA","authset","rq","xmf","ymf","sinb1","cosb1","sinph0","cosph0","coslam","sinlam","q","sinb","cosb","phi0","cCe","sCe","ab","beta","cosz","sinz","asinz","aea","sin_po","cos_po","qs1","qs2","t3","qs0","ns0","qs","phi1z","eccnts","gnom","sin_p14","cos_p14","infinity_dist","coslon","iqsfnz","cea","eqc","dlat","poly_MAX_ITER","poly","tanphi","mln","mlnp","ma","nzmg","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_im1","delta_x","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","mill","sinu_MAX_ITER","sinu","C_y","C_x","V","moll","delta_theta","eqdc","ml2","vandg","R","sinth","costh","gsq","msq","xx","yy","xys","c1","c2","c3","a1","m1","th1","aeqd","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","H","GH","Hs","kp","cos_c","s2","s3","s4","cosAz","Ee","F","ortho","FACE_ENUM","FRONT","RIGHT","BACK","LEFT","TOP","BOTTOM","AREA_ENUM","AREA_0","AREA_1","AREA_2","AREA_3","qsc_fwd_equat_face_theta","area","qsc_shift_lon_origin","slon","qsc","face","one_minus_f","one_minus_f_squared","xy","sinlon","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","defaultDatum","proj4_package","somerc","phy0","lambda0","sinPhy0","semiMajorAxis","flattening","b0","k2","k3","Sa1","Sa2","S","rotI","rotB","lambda","phy","prevPhy","iteration","OWS","owsObject","xml","PARSERS_","readAddress_","ADDRESS_PARSERS_","readAllowedValues_","ALLOWED_VALUES_PARSERS_","readConstraint_","CONSTRAINT_PARSERS_","readContactInfo_","CONTACT_INFO_PARSERS_","readDcp_","DCP_PARSERS_","readGet_","href","REQUEST_METHOD_PARSERS_","readHttp_","HTTP_PARSERS_","readOperation_","OPERATION_PARSERS_","readOperationsMetadata_","OPERATIONS_METADATA_PARSERS_","readPhone_","PHONE_PARSERS_","readServiceIdentification_","SERVICE_IDENTIFICATION_PARSERS_","readServiceContact_","SERVICE_CONTACT_PARSERS_","readServiceProvider_","SERVICE_PROVIDER_PARSERS_","readValue_","NAMESPACE_URIS_","ServiceIdentification","ServiceProvider","OperationsMetadata","DeliveryPoint","City","AdministrativeArea","PostalCode","Country","ElectronicMailAddress","Value","makeObjectPropertyPusher","AllowedValues","Phone","Address","HTTP","Get","Post","DCP","Operation","Voice","Facsimile","Constraint","IndividualName","PositionName","ContactInfo","Abstract","AccessConstraints","Fees","Title","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","format_OWS","WMTSCapabilities","owsParser_","WMTSCapabilityObject","readContents_","CONTENTS_PARSERS_","readLayer_","LAYER_PARSERS_","readTileMatrixSet_","TMS_PARSERS_","readStyle_","STYLE_PARSERS_","isDefault","readTileMatrixSetLink_","TMS_LINKS_PARSERS_","readDimensions_","DIMENSION_PARSERS_","readResourceUrl_","resourceType","resource","readWgs84BoundingBox_","WGS84_BBOX_READERS_","readLegendUrl_","legend","readCoordinates_","readTileMatrix_","TM_PARSERS_","readTileMatrixLimitsList_","TMS_LIMITS_LIST_PARSERS_","readTileMatrixLimits_","TMS_LIMITS_PARSERS_","OWS_NAMESPACE_URIS_","Contents","Layer","TileMatrixSet","Style","Format","TileMatrixSetLink","Dimension","ResourceURL","WGS84BoundingBox","Identifier","LegendURL","TileMatrixSetLimits","TileMatrixLimits","TileMatrix","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","Default","LowerCorner","UpperCorner","WellKnownScaleSet","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","_Interaction2","defineProperty","getActive","setActive","_Base2","configurable","getOpacity","setOpacity","incrementEvents","decrementEvents","incrementLoadCount_","increment_","load_count","decrementLoadCount_","decrement_","on","olEvent","$applyAsync","ngeoEventHelper","mapViewPropertyChangeEventKey_","ngeoEventHelper_","ngeoFeatures_","ngeoBackgroundLayerMgr_","featureOverlay_","featureHelper_","ngeoQuerent_","gmfPermalinkOptions","useLocalStorage","crosshairEnabledByDefault_","crosshairEnabledByDefault","gmfExternalDataSourcesManager_","gmfObjectEditingManager_","gmfThemeManager_","defaultTheme_","ngeoWfsPermalink_","gmfUser_","ngeoAutoProjection_","sourceProjections_","projectionCodes","getProjectionList","crosshairFeature_","crosshairStyle_","crosshairStyle","_RegularShape2","radius2","angle","mapTooltip_","featureHashFormat_","_FeatureHash2","fillOpacity","isBox","isLabel","showLabel","showMeasure","handleBackgroundLayerManagerChange_","param","ParamPrefix","TREE_ENABLE","gmfLayerNames","TREE_GROUP_LAYERS","opacity","TREE_OPACITY","TREE_GROUP_OPACITY","addNgeoFeature_","handleNgeoFeaturesAdd_","handleNgeoFeaturesRemove_","_Manager2","setThemeInUrl_","setExternalDataSourcesStatePromise_","initExternalDataSources_","wmsGroupsCollection","handleExternalDSGroupCollectionAdd_","handleExternalDSGroupCollectionRemove_","wmtsGroupsCollection","wmsGroups","wmsGroup","registerExternalDSGroup_","wmtsGroups","wmtsGroup","initLayers_","getMapCenter","MAP_X","MAP_Y","targetProjection","reprojectedCenter","tryProjectionsWithInversion","getMapZoom","MAP_Z","getMapCrosshair","crosshair","MAP_CROSSHAIR","setMapCrosshair","opt_center","crosshairCoordinate","getCenter","assertArray","getMapTooltip","MAP_TOOLTIP","setMapTooltip","tooltipText","tooltipPosition","div","_Popover2","position","addOverlay","FEATURES","setDimensions","DIMENSIONS","unregisterMap_","getFeature","registerMap_","oeFeature","fit","_constants2","Permalink3dParam","setCenter","setZoom","getZoom","wfsPermalinkData","getWfsPermalinkData_","issue","getBackgroundLayer","BG_LAYER","refreshFirstLevelGroups","orderedNames","themeInUrl_","pathElements","indexOfTheme","defaultThemeName","tn","defaultTheme","defaultThemeNameFromFunctionalities","functionalities","default_theme","groupsNames","enable","groupLayers","groupLayersArray","removeNgeoFeature_","handleNgeoFeaturesChange_","wfsLayer","WFS_LAYER","numGroups","WFS_NGROUPS","filterGroups","filterGroup","createFilterGroup_","showFeaturesParam","WFS_SHOW_FEATURES","wfsType","showFeatures","filters","paramKey","ngeoQuerent","gmfExtDSManager","layerNamesString","EXTERNAL_DATASOURCES_NAMES","urlsString","EXTERNAL_DATASOURCES_URLS","ExtDSSeparator","LIST","groupLayerNamesString","groupLayerNames","NAMES","serviceType","_OGC2","getCapabilitiesDefer","wmsGetCapabilities","wmtsGetCapabilities","responses","wmsFindLayerCapability","createAndAddDataSourceFromWMSCapability","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","wmtsFindLayerCapability","createAndAddDataSourceFromWMTSCapability","rejections","setExternalDataSourcesState_","dataSourcesCollection","containsLayerName","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","unregisterExternalDSGroup_","_this8$ngeoStateManag","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","wmsGroupLayerNames","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","wmsDataSource","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","wmtsGroupLayerNames","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","wmtsDataSource","_defineProperty","_this9","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","startsWith","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","_features2","_EventHelper2","OpenLayersLayerProperties","regexp","key1","key2","container","document","body","container_","DEFAULT_DELAY_","clearMessageByCacheItem_","classNames","target","addClass","delay","injector","ngeoLayerHelper_","wmsDataSourceUnregister_","init_","_OGCGroup2","registerDataSource_","unregisterDataSource_","handleDataSourceVisibleChange_","updateLayer_","oldValue","unregister"],"mappings":"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","file":"elevation.320b7754fe15bcd4e628.js","sourcesContent":["/**\n * @module ol/format/filter/Filter\n */\n\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @struct\n */\nconst Filter = function(tagName) {\n\n  /**\n   * @private\n   * @type {!string}\n   */\n  this.tagName_ = tagName;\n};\n\n/**\n * The XML tag name for a filter.\n * @returns {!string} Name.\n */\nFilter.prototype.getTagName = function() {\n  return this.tagName_;\n};\n\nexport default Filter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Filter.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LogicalNary\n */\nimport {inherits} from '../../index.js';\nimport {assert} from '../../asserts.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.Filter}\n */\nconst LogicalNary = function(tagName, conditions) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {Array.<ol.format.filter.Filter>}\n   */\n  this.conditions = Array.prototype.slice.call(arguments, 1);\n  assert(this.conditions.length >= 2, 57); // At least 2 conditions are required.\n};\n\ninherits(LogicalNary, Filter);\nexport default LogicalNary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LogicalNary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/And\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @constructor\n * @abstract\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n */\nconst And = function(conditions) {\n  const params = ['And'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(And, LogicalNary);\n\nexport default And;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/And.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Bbox\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Bbox = function(geometryName, extent, opt_srsName) {\n\n  Filter.call(this, 'BBOX');\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName;\n\n  /**\n   * @public\n   * @type {ol.Extent}\n   */\n  this.extent = extent;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Bbox, Filter);\n\nexport default Bbox;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Bbox.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Spatial\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Represents a spatial operator to test whether a geometry-valued property\n * relates to a given geometry.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n */\nconst Spatial = function(tagName, geometryName, geometry, opt_srsName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName || 'the_geom';\n\n  /**\n   * @public\n   * @type {ol.geom.Geometry}\n   */\n  this.geometry = geometry;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Spatial, Filter);\n\nexport default Spatial;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Spatial.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Contains\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Contains = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Contains', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Contains, Spatial);\nexport default Contains;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Contains.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Comparison\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Filter}\n */\nconst Comparison = function(tagName, propertyName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.propertyName = propertyName;\n};\n\ninherits(Comparison, Filter);\n\nexport default Comparison;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Comparison.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/During\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<During>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst During = function(propertyName, begin, end) {\n  Comparison.call(this, 'During', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.begin = begin;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.end = end;\n};\n\ninherits(During, Comparison);\nexport default During;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/During.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/ComparisonBinary\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property binary comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n */\nconst ComparisonBinary = function(tagName, propertyName, expression, opt_matchCase) {\n\n  Comparison.call(this, tagName, propertyName);\n\n  /**\n   * @public\n   * @type {!(string|number)}\n   */\n  this.expression = expression;\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(ComparisonBinary, Comparison);\nexport default ComparisonBinary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/ComparisonBinary.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/EqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst EqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(EqualTo, ComparisonBinary);\nexport default EqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/EqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThan', propertyName, expression);\n};\n\ninherits(GreaterThan, ComparisonBinary);\nexport default GreaterThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/GreaterThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst GreaterThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThanOrEqualTo', propertyName, expression);\n};\n\ninherits(GreaterThanOrEqualTo, ComparisonBinary);\nexport default GreaterThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/GreaterThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Intersects\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Intersects = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Intersects', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Intersects, Spatial);\nexport default Intersects;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Intersects.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsBetween\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsBetween>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsBetween = function(propertyName, lowerBoundary, upperBoundary) {\n  Comparison.call(this, 'PropertyIsBetween', propertyName);\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.lowerBoundary = lowerBoundary;\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.upperBoundary = upperBoundary;\n};\n\ninherits(IsBetween, Comparison);\nexport default IsBetween;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsBetween.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsLike\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLike>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsLike = function(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  Comparison.call(this, 'PropertyIsLike', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.pattern = pattern;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.wildCard = (opt_wildCard !== undefined) ? opt_wildCard : '*';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.singleChar = (opt_singleChar !== undefined) ? opt_singleChar : '.';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.escapeChar = (opt_escapeChar !== undefined) ? opt_escapeChar : '!';\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(IsLike, Comparison);\nexport default IsLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsLike.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/IsNull\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNull>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nconst IsNull = function(propertyName) {\n  Comparison.call(this, 'PropertyIsNull', propertyName);\n};\n\ninherits(IsNull, Comparison);\nexport default IsNull;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/IsNull.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThan', propertyName, expression);\n};\n\ninherits(LessThan, ComparisonBinary);\nexport default LessThan;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThan.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/LessThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst LessThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThanOrEqualTo', propertyName, expression);\n};\n\ninherits(LessThanOrEqualTo, ComparisonBinary);\nexport default LessThanOrEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/LessThanOrEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Not\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @constructor\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nconst Not = function(condition) {\n\n  Filter.call(this, 'Not');\n\n  /**\n   * @public\n   * @type {!ol.format.filter.Filter}\n   */\n  this.condition = condition;\n};\n\ninherits(Not, Filter);\nexport default Not;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Not.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/NotEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nconst NotEqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsNotEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(NotEqualTo, ComparisonBinary);\nexport default NotEqualTo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/NotEqualTo.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Or\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two ore more filter conditions.\n *\n * @constructor\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n * @api\n */\nconst Or = function(conditions) {\n  const params = ['Or'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(Or, LogicalNary);\nexport default Or;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Or.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter/Within\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nconst Within = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Within', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Within, Spatial);\nexport default Within;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter/Within.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/filter\n */\nimport _ol_format_filter_And_ from '../format/filter/And.js';\nimport _ol_format_filter_Bbox_ from '../format/filter/Bbox.js';\nimport _ol_format_filter_Contains_ from '../format/filter/Contains.js';\nimport _ol_format_filter_During_ from '../format/filter/During.js';\nimport _ol_format_filter_EqualTo_ from '../format/filter/EqualTo.js';\nimport _ol_format_filter_GreaterThan_ from '../format/filter/GreaterThan.js';\nimport _ol_format_filter_GreaterThanOrEqualTo_ from '../format/filter/GreaterThanOrEqualTo.js';\nimport _ol_format_filter_Intersects_ from '../format/filter/Intersects.js';\nimport _ol_format_filter_IsBetween_ from '../format/filter/IsBetween.js';\nimport _ol_format_filter_IsLike_ from '../format/filter/IsLike.js';\nimport _ol_format_filter_IsNull_ from '../format/filter/IsNull.js';\nimport _ol_format_filter_LessThan_ from '../format/filter/LessThan.js';\nimport _ol_format_filter_LessThanOrEqualTo_ from '../format/filter/LessThanOrEqualTo.js';\nimport _ol_format_filter_Not_ from '../format/filter/Not.js';\nimport _ol_format_filter_NotEqualTo_ from '../format/filter/NotEqualTo.js';\nimport _ol_format_filter_Or_ from '../format/filter/Or.js';\nimport _ol_format_filter_Within_ from '../format/filter/Within.js';\nconst _ol_format_filter_ = {};\n\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.And} `<And>` operator.\n * @api\n */\n_ol_format_filter_.and = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_And_, params));\n};\n\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.Or} `<Or>` operator.\n * @api\n */\n_ol_format_filter_.or = function(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_Or_, params));\n};\n\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @returns {!ol.format.filter.Not} `<Not>` operator.\n * @api\n */\n_ol_format_filter_.not = function(condition) {\n  return new _ol_format_filter_Not_(condition);\n};\n\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Bbox} `<BBOX>` operator.\n * @api\n */\n_ol_format_filter_.bbox = function(geometryName, extent, opt_srsName) {\n  return new _ol_format_filter_Bbox_(geometryName, extent, opt_srsName);\n};\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Contains} `<Contains>` operator.\n * @api\n */\n_ol_format_filter_.contains = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Contains_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Intersects} `<Intersects>` operator.\n * @api\n */\n_ol_format_filter_.intersects = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Intersects_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Within} `<Within>` operator.\n * @api\n */\n_ol_format_filter_.within = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Within_(geometryName, geometry, opt_srsName);\n};\n\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.equalTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_EqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.notEqualTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_NotEqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\n_ol_format_filter_.lessThan = function(propertyName, expression) {\n  return new _ol_format_filter_LessThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.lessThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_LessThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\n_ol_format_filter_.greaterThan = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.greaterThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @returns {!ol.format.filter.IsNull} `<PropertyIsNull>` operator.\n * @api\n */\n_ol_format_filter_.isNull = function(propertyName) {\n  return new _ol_format_filter_IsNull_(propertyName);\n};\n\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @returns {!ol.format.filter.IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\n_ol_format_filter_.between = function(propertyName, lowerBoundary, upperBoundary) {\n  return new _ol_format_filter_IsBetween_(propertyName, lowerBoundary, upperBoundary);\n};\n\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.IsLike} `<PropertyIsLike>` operator.\n * @api\n */\n_ol_format_filter_.like = function(propertyName, pattern,\n  opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  return new _ol_format_filter_IsLike_(propertyName, pattern,\n    opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase);\n};\n\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @returns {!ol.format.filter.During} `<During>` operator.\n * @api\n */\n_ol_format_filter_.during = function(propertyName, begin, end) {\n  return new _ol_format_filter_During_(propertyName, begin, end);\n};\nexport default _ol_format_filter_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/filter.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.EventHelper\n */\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * Provides methods to manage the listening/unlistening of OpenLayers events\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoEventHelper\n * @ngInject\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<number|string, Array.<ol.EventsKey>>}\n   * @private\n   */\n  this.listenerKeys_ = {};\n\n};\n\n\n/**\n * Utility method to add a listener key bound to a unique id. The key has\n * to come from `ol.events`.\n * @param {number|string} uid Unique id.\n * @param {ol.EventsKey} key Key.\n * @export\n */\nexports.prototype.addListenerKey = function(uid, key) {\n  if (!this.listenerKeys_[uid]) {\n    this.initListenerKey_(uid);\n  }\n  this.listenerKeys_[uid].push(/** @type {ol.EventsKey} */ (key));\n};\n\n\n/**\n * Clear all listener keys from the given unique id.\n * @param {number|string} uid Unique id.\n * @export\n */\nexports.prototype.clearListenerKey = function(uid) {\n  this.initListenerKey_(uid);\n};\n\n\n/**\n * Utility method that does 2 things:\n * - initialize the listener keys of a given uid with an array (if that key\n *   has not array set yet)\n * - unlisten any events if the array already exists for the given uid and\n *   empty the array.\n * @param {number|string} uid Unique id.\n * @private\n */\nexports.prototype.initListenerKey_ = function(uid) {\n  if (!this.listenerKeys_[uid]) {\n    this.listenerKeys_[uid] = [];\n  } else {\n    if (this.listenerKeys_[uid].length) {\n      this.listenerKeys_[uid].forEach(olEvents.unlistenByKey);\n      this.listenerKeys_[uid].length = 0;\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoEventHelper', []);\nexports.module.service('ngeoEventHelper', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/EventHelper.js","/**\n * @module ngeo.filter.Condition\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  AND: '&&',\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT: '!',\n  /**\n   * @type {string}\n   * @export\n   */\n  OR: '||'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/filter/Condition.js","/**\n * @module ngeo.map.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n * @ngInject\n */\nexports.directive_ = function($window) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Atttributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      // Get the 'window resize' attributes, which are optionnal. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/component.js","/**\n * @module gmf.theme.Manager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *    let module = angular.module('app');\n *    module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {boolean} gmfTreeManagerModeFlush Flush mode active?\n * @param {gmf.layertree.TreeManager} gmfTreeManager the tree manager.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @struct\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($rootScope, gmfThemes, gmfTreeManagerModeFlush,\n  gmfTreeManager, ngeoStateManager) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$rootScope_ = $rootScope;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modeFlush = gmfTreeManagerModeFlush;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.themeName_ = '';\n};\n\n\n/**\n * Set the current theme name (mode 'flush' only) and add its children. Add\n * only groups that are not already in the tree.\n * @param {!gmfThemes.GmfTheme} theme A theme object.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.prototype.addTheme = function(theme, opt_silent) {\n  if (this.modeFlush) {\n    this.ngeoStateManager_.updateState({\n      'theme': theme.name\n    });\n    this.setThemeName(theme.name);\n    this.gmfTreeManager_.setFirstLevelGroups(theme.children);\n  } else {\n    this.gmfTreeManager_.addFirstLevelGroups(theme.children, false, opt_silent);\n  }\n};\n\n\n/**\n * @return {string} The theme name. Will be empty on 'not flush' mode.\n * @export\n */\nexports.prototype.getThemeName = function() {\n  return this.themeName_;\n};\n\n\n/**\n * @return {boolean} true if the theme is loading.\n * @export\n */\nexports.prototype.isLoading = function() {\n  return !this.gmfThemes_.loaded;\n};\n\n/**\n * @param {string} name The new theme name.\n * @param {boolean=} opt_silent Don't emit a theme change event, default is false.\n */\nexports.prototype.setThemeName = function(name, opt_silent) {\n  this.themeName_ = name;\n  if (!opt_silent) {\n    this.$rootScope_.$emit(exports.EventType.THEME_NAME_SET, name);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @enum {string}\n */\nexports.EventType = {\n  /**\n   * Triggered when the theme name change.\n   */\n  THEME_NAME_SET: 'gmf-thememanager-theme_name_set'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemeManager', [\n  gmfLayertreeTreeManager.module.name,\n  ngeoStatemanagerService.module.name,\n]);\n\n/**\n * The default value for `modeFlush` that `gmf.layertree.TreeManager` is initialized with.\n */\nexports.module.value('gmfTreeManagerModeFlush', true);\n\nexports.module.service('gmfThemeManager', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Manager.js","/**\n * @module ngeo.misc.debounce\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDebounce', []);\n\n\n/**\n * Provides a debounce service. That service is a function\n * used to debounce calls to a user-provided function.\n *\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.miscDebounce} The debounce function.\n *\n * @ngdoc service\n * @ngname ngeoDebounce\n * @ngInject\n */\nexports.factory_ = function($timeout) {\n  return (\n    // FIXME: eslint can't detect that the function returns a function\n    /**\n     * @param {function(?)} func The function to debounce.\n     * @param {number} wait The wait time in ms.\n     * @param {boolean} invokeApply Whether the call to `func` is wrapped\n     *    into an `$apply` call.\n     * return {function()} The wrapper function.\n     */\n    function(func, wait, invokeApply) {\n      /**\n       * @type {?angular.$q.Promise}\n       */\n      let timeout = null;\n      return (\n        function(...args) {\n          const context = this;\n          const later = function() {\n            timeout = null;\n            func.apply(context, args);\n          };\n          if (timeout !== null) {\n            $timeout.cancel(timeout);\n          }\n          timeout = $timeout(later, wait, invokeApply);\n        });\n    });\n};\n\nexports.factory('ngeoDebounce', exports.factory_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/debounce.js","/**\n * @module ngeo.draw.features\n */\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFeatures', []);\n\nexports.value('ngeoFeatures', new olCollection());\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/features.js","/**\n * @module ngeo.map.FeatureOverlay\n */\nimport ngeoBase from 'ngeo/index.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach(function(feature) {\n      this.addFeature(feature);\n    }, this);\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlay.js","/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport {inherits} from '../index.js';\nimport {extend, includes} from '../array.js';\nimport GML2 from '../format/GML2.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {assign} from '../obj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link ol.format.GML2} to read features.\n *\n * @constructor\n * @extends {ol.format.XMLFeature}\n * @param {olx.format.WMSGetFeatureInfoOptions=} opt_options Options.\n * @api\n */\nconst WMSGetFeatureInfo = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n\n  /**\n   * @private\n   * @type {ol.format.GML2}\n   */\n  this.gmlFormat_ = new GML2();\n\n\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.layers_ = options.layers ? options.layers : null;\n\n  XMLFeature.call(this);\n};\n\ninherits(WMSGetFeatureInfo, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.featureIdentifier_ = '_feature';\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nWMSGetFeatureInfo.layerIdentifier_ = '_layer';\n\n\n/**\n * @return {Array.<string>} layers\n */\nWMSGetFeatureInfo.prototype.getLayers = function() {\n  return this.layers_;\n};\n\n\n/**\n * @param {Array.<string>} layers Layers to parse.\n */\nWMSGetFeatureInfo.prototype.setLayers = function(layers) {\n  this.layers_ = layers;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature>} Features.\n * @private\n */\nWMSGetFeatureInfo.prototype.readFeatures_ = function(node, objectStack) {\n  node.setAttribute('namespaceURI', this.featureNS_);\n  const localName = node.localName;\n  /** @type {Array.<ol.Feature>} */\n  let features = [];\n  if (node.childNodes.length === 0) {\n    return features;\n  }\n  if (localName == 'msGMLOutput') {\n    for (let i = 0, ii = node.childNodes.length; i < ii; i++) {\n      const layer = node.childNodes[i];\n      if (layer.nodeType !== Node.ELEMENT_NODE) {\n        continue;\n      }\n      const context = objectStack[0];\n\n      const toRemove = WMSGetFeatureInfo.layerIdentifier_;\n      const layerName = layer.localName.replace(toRemove, '');\n\n      if (this.layers_ && !includes(this.layers_, layerName)) {\n        continue;\n      }\n\n      const featureType = layerName +\n          WMSGetFeatureInfo.featureIdentifier_;\n\n      context['featureType'] = featureType;\n      context['featureNS'] = this.featureNS_;\n\n      const parsers = {};\n      parsers[featureType] = _ol_xml_.makeArrayPusher(\n        this.gmlFormat_.readFeatureElement, this.gmlFormat_);\n      const parsersNS = _ol_xml_.makeStructureNS(\n        [context['featureNS'], null], parsers);\n      layer.setAttribute('namespaceURI', this.featureNS_);\n      const layerFeatures = _ol_xml_.pushParseAndPop(\n        [], parsersNS, layer, objectStack, this.gmlFormat_);\n      if (layerFeatures) {\n        extend(features, layerFeatures);\n      }\n    }\n  }\n  if (localName == 'FeatureCollection') {\n    const gmlFeatures = _ol_xml_.pushParseAndPop([],\n      this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n      [{}], this.gmlFormat_);\n    if (gmlFeatures) {\n      features = gmlFeatures;\n    }\n  }\n  return features;\n};\n\n\n/**\n * Read all features from a WMSGetFeatureInfo response.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWMSGetFeatureInfo.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {};\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  return this.readFeatures_(node, [options]);\n};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeatureNode = function(feature, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeaturesNode = function(features, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeGeometryNode = function(geometry, opt_options) {};\nexport default WMSGetFeatureInfo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMSGetFeatureInfo.js\n// module id = 120\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module gmf.editing.Snapping\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olInteractionSnap from 'ol/interaction/Snap.js';\n\n/**\n * The snapping service of GMF. Responsible of collecting the treeCtrls that\n * support snapping and store them here. As soon as a treeCtrl state becomes\n * 'on', a WFS GetFeature request is issued to collect the features at the\n * map view location. A new request is sent every time the map is panned or\n * zoomed for each treeCtrl that are still 'on'.\n *\n * Features returned by these requests get bound to a `ol.interaction.Snap`,\n * which allows the snapping to occur on other places where vector\n * features are drawn or modified.\n *\n * @constructor\n * @param {angular.$http} $http Angular $http service.\n * @param {angular.$q} $q The Angular $q service.\n * @param {!angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSnapping\n */\nconst exports = function($http, $q, $rootScope, $timeout, gmfThemes,\n  gmfTreeManager) {\n\n  // === Injected services ===\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n\n  // === Properties ===\n\n  /**\n   * A cache containing all available snappable items, in which the listening\n   * of the state of the `treeCtrl` is registered and unregistered.\n   * @type {gmf.editing.Snapping.Cache}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * Reference to the promise taking care of calling all GetFeature requests\n   * of the currently active cache items after the map view changed. Used\n   * to cancel if the map view changes often within a short period of time.\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.mapViewChangePromise_ = null;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n};\n\n\n/**\n * In order for a `ol.interaction.Snap` to work properly, it has to be added\n * to the map after any draw interactions or other kinds of interactions that\n * ineracts with features on the map.\n *\n * This method can be called to make sure the Snap interactions are on top.\n *\n * @export\n */\nexports.prototype.ensureSnapInteractionsOnTop = function() {\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      googAsserts.assert(item.interaction);\n      map.removeInteraction(item.interaction);\n      map.addInteraction(item.interaction);\n    }\n  }\n};\n\n\n/**\n * Bind the snapping service to a map\n * @param {?ol.Map} map Map\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  const keys = this.listenerKeys_;\n\n  if (this.map_) {\n    this.treeCtrlsUnregister_();\n    this.unregisterAllTreeCtrl_();\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n  }\n\n  this.map_ = map;\n\n  if (map) {\n    this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(() => {\n      if (this.gmfTreeManager_.rootCtrl) {\n        return this.gmfTreeManager_.rootCtrl.children;\n      }\n    }, (value) => {\n      // Timeout required, because the collection event is fired before the\n      // leaf nodes are created and they are the ones we're looking for here.\n      this.timeout_(() => {\n        if (value) {\n          this.unregisterAllTreeCtrl_();\n          this.gmfTreeManager_.rootCtrl.traverseDepthFirst(this.registerTreeCtrl_.bind(this));\n        }\n      }, 0);\n    });\n\n    keys.push(\n      olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this),\n      olEvents.listen(map, 'moveend', this.handleMapMoveEnd_, this)\n    );\n  }\n};\n\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.ogcServers_ = null;\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n};\n\n\n/**\n * Registers a newly added Layertree controller 'leaf'. If it's snappable,\n * create and add a cache item with every configuration required to do the\n * snapping. It becomes active when its state is set to 'on'.\n *\n * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to register\n * @private\n */\nexports.prototype.registerTreeCtrl_ = function(treeCtrl) {\n\n  // Skip any Layertree controller that has a node that is not a leaf\n  let node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (node.children) {\n    return;\n  }\n\n  // If treeCtrl is snappable and supports WFS, listen to its state change.\n  // When it becomes visible, it's added to the list of snappable tree ctrls.\n  node = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const snappingConfig = gmfThemeThemes.getSnappingConfig(node);\n  if (snappingConfig) {\n    const wfsConfig = this.getWFSConfig_(treeCtrl);\n    if (wfsConfig) {\n      const uid = olBase.getUid(treeCtrl);\n\n      const stateWatcherUnregister = this.rootScope_.$watch(\n        () => treeCtrl.getState(),\n        this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n      );\n\n      // Todo: some of the properties here are hardcoded, but could come from\n      //       the node metadata at some point.\n      this.cache_[uid] = {\n        active: false,\n        featureNS: 'http://mapserver.gis.umn.edu/mapserver',\n        featurePrefix: 'feature',\n        features: new olCollection(),\n        geometryName: 'geom',\n        interaction: null,\n        maxFeatures: 50,\n        requestDeferred: null,\n        snappingConfig: snappingConfig,\n        treeCtrl: treeCtrl,\n        wfsConfig: wfsConfig,\n        stateWatcherUnregister: stateWatcherUnregister\n      };\n\n      // This extra call is to initialize the treeCtrl with its current state\n      this.handleTreeCtrlStateChange_(treeCtrl, treeCtrl.getState());\n    }\n  }\n};\n\n\n/**\n * Unregisters all removed layertree controllers 'leaf'. Remove the according\n * cache item and deactivate it as well. Unregister events.\n *\n * @private\n */\nexports.prototype.unregisterAllTreeCtrl_ = function() {\n  for (const uid in this.cache_) {\n    const item = this.cache_[+uid];\n    if (item) {\n      item.stateWatcherUnregister();\n      this.deactivateItem_(item);\n      delete this.cache_[+uid];\n    }\n  }\n};\n\n\n/**\n * Get the configuration required to do WFS requests (for snapping purpose)\n * from a Layertree controller that has a leaf node.\n *\n * The following requirements must be met in order for a treeCtrl to be\n * considered supporting WFS:\n *\n * 1) ogcServers objects are loaded\n * 2) its node `type` property is equal to `WMS`\n * 3) in its node `childLayers` property, the `queryable` property is set\n *    to `true`\n * 4) if its node `mixed` property is:\n *   a) true: then the node must have an `ogcServer` property set\n *   b) false: then the first parent node must have an `ogcServer` property set\n * 5) the ogcServer defined in 3) has the `wfsSupport` property set to `true`.\n *\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @return {?gmf.editing.Snapping.WFSConfig} The configuration object.\n * @private\n */\nexports.prototype.getWFSConfig_ = function(treeCtrl) {\n\n  // (1)\n  if (this.ogcServers_ === null) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n\n  // (2)\n  if (gmfLayer.type !== gmfThemeThemes.NodeType.WMS) {\n    return null;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  // (3)\n  const featureTypes = [];\n  for (let i = 0, ii = gmfLayerWMS.childLayers.length; i < ii; i++) {\n    if (gmfLayerWMS.childLayers[i].queryable) {\n      featureTypes.push(gmfLayerWMS.childLayers[i].name);\n    }\n  }\n  if (!featureTypes.length) {\n    return null;\n  }\n\n  // (4)\n  let ogcServerName;\n  const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  if (gmfGroup.mixed) {\n    ogcServerName = gmfLayerWMS.ogcServer;\n  } else {\n    const firstTreeCtrl = ngeoLayertreeController.getFirstParentTree(treeCtrl);\n    const firstNode = /** @type {gmfThemes.GmfGroup} */ (firstTreeCtrl.node);\n    ogcServerName = firstNode.ogcServer;\n  }\n  if (!ogcServerName) {\n    return null;\n  }\n\n  // (5)\n  const ogcServer = this.ogcServers_[ogcServerName];\n  if (!ogcServer.wfsSupport) {\n    return null;\n  }\n\n  // At this point, every requirements have been met.\n  // Create and return the configuration.\n  const urlWfs = ogcServer.urlWfs;\n  googAsserts.assert(urlWfs, 'urlWfs should be defined.');\n\n  return {\n    featureTypes: featureTypes.join(','),\n    url: urlWfs\n  };\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @param {string|undefined} newVal New state value\n * @private\n */\nexports.prototype.handleTreeCtrlStateChange_ = function(treeCtrl, newVal) {\n\n  const uid = olBase.getUid(treeCtrl);\n  const item = this.cache_[uid];\n\n  // Note: a snappable treeCtrl can only be a leaf, therefore the only possible\n  //       states are: 'on' and 'off'.\n  if (newVal === 'on') {\n    this.activateItem_(item);\n  } else {\n    this.deactivateItem_(item);\n  }\n};\n\n\n/**\n * Activate a cache item by adding a Snap interaction to the map and launch\n * the initial request to get the features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.activateItem_ = function(item) {\n\n  // No need to do anything if item is already active\n  if (item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = new olInteractionSnap({\n    edge: item.snappingConfig.edge,\n    features: item.features,\n    pixelTolerance: item.snappingConfig.tolerance,\n    vertex: item.snappingConfig.vertex\n  });\n\n  map.addInteraction(interaction);\n\n  item.interaction = interaction;\n  item.active = true;\n\n  // Init features\n  this.loadItemFeatures_(item);\n};\n\n\n/**\n * Deactivate a cache item by removing the snap interaction and clearing any\n * existing features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.deactivateItem_ = function(item) {\n\n  // No need to do anything if item is already inactive\n  if (!item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = item.interaction;\n  map.removeInteraction(interaction);\n\n  item.interaction = null;\n  item.features.clear();\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n    item.requestDeferred = null;\n  }\n\n  item.active = false;\n};\n\n\n/**\n * @private\n */\nexports.prototype.loadAllItems_ = function() {\n  this.mapViewChangePromise_ = null;\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      this.loadItemFeatures_(item);\n    }\n  }\n};\n\n\n/**\n * For a specific cache item, issue a new WFS GetFeatures request. The returned\n * features set in the item collection of features (they replace any existing\n * ones first).\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.loadItemFeatures_ = function(item) {\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const view = map.getView();\n  const size = map.getSize();\n  googAsserts.assert(size);\n\n  const extent = view.calculateExtent(size);\n  const projCode = view.getProjection().getCode();\n  const featureTypes = item.wfsConfig.featureTypes.split(',');\n\n  const getFeatureOptions = {\n    srsName: projCode,\n    featureNS: item.featureNS,\n    featurePrefix: item.featurePrefix,\n    featureTypes: featureTypes,\n    outputFormat: 'GML3',\n    bbox: extent,\n    geometryName: item.geometryName,\n    maxFeatures: item.maxFeatures\n  };\n\n  const wfsFormat = new olFormatWFS();\n  const xmlSerializer = new XMLSerializer();\n  const featureRequestXml = wfsFormat.writeGetFeature(getFeatureOptions);\n  const featureRequest = xmlSerializer.serializeToString(featureRequestXml);\n  const url = item.wfsConfig.url;\n\n  item.requestDeferred = this.q_.defer();\n\n  this.http_.post(url, featureRequest, {timeout: item.requestDeferred.promise})\n    .then((response) => {\n      // (1) Unset requestDeferred\n      item.requestDeferred = null;\n\n      // (2) Clear any previous features in the item\n      item.features.clear();\n\n      // (3) Read features from request response and add them to the item\n      const readFeatures = new olFormatWFS().readFeatures(response.data);\n      if (readFeatures) {\n        item.features.extend(readFeatures);\n      }\n    });\n\n};\n\n\n/**\n * Called when the map view changes. Load all active cache items after a small\n * delay. Cancel any currently delayed call, if required.\n * @private\n */\nexports.prototype.handleMapMoveEnd_ = function() {\n  if (this.mapViewChangePromise_) {\n    this.timeout_.cancel(this.mapViewChangePromise_);\n  }\n  this.mapViewChangePromise_ = this.timeout_(\n    this.loadAllItems_.bind(this),\n    400\n  );\n};\n\n\n/**\n * @typedef {Object<number, gmf.editing.Snapping.CacheItem>}\n */\nexports.Cache;\n\n\n/**\n * @typedef {{\n *     active: (boolean),\n *     featureNS: (string),\n *     featurePrefix: (string),\n *     features: (ol.Collection.<ol.Feature>),\n *     geometryName: (string),\n *     interaction: (?ol.interaction.Snap),\n *     maxFeatures: (number),\n *     requestDeferred: (?angular.$q.Deferred),\n *     snappingConfig: (gmfThemes.GmfSnappingConfig),\n *     stateWatcherUnregister: (Function),\n *     treeCtrl: (ngeo.layertree.Controller),\n *     wfsConfig: (gmf.editing.Snapping.WFSConfig)\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     featureTypes: (string),\n *     url: (string)\n * }}\n */\nexports.WFSConfig;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSnapping', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n]);\nexports.module.service('gmfSnapping', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/editing/Snapping.js","/**\n * @module gmf.map.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport ngeoMapComponent from 'ngeo/map/component.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapComponent', [\n  gmfPermalinkPermalink.module.name,\n  gmfEditingSnapping.module.name,\n  ngeoMapComponent.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\n\n/**\n * A \"map\" directive for a GeoMapFish application.\n *\n * Example:\n *\n *      <gmf-map gmf-map-map=\"mainCtrl.map\"></gmf-map>\n *\n * @htmlAttribute {ol.Map} gmf-map-map The map.\n * @htmlAttribute {boolean|undefined} gmf-map-manage-resize Whether to update\n *     the size of the map on browser window resize.\n * @htmlAttribute {boolean|undefined} gmf-map-resize-transition The duration\n *     (milliseconds) of the animation that may occur on the div containing\n *     the map. Used to smoothly resize the map while the animation is in\n *     progress.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMap\n */\nexports.directive_ = function() {\n  return {\n    scope: {\n      'map': '<gmfMapMap',\n      'manageResize': '<gmfMapManageResize',\n      'resizeTransition': '<gmfMapResizeTransition'\n    },\n    controller: 'GmfMapController as ctrl',\n    bindToController: true,\n    templateUrl: `${gmfBase.baseModuleTemplateUrl}/map/component.html`\n  };\n};\n\nexports.directive('gmfMap', exports.directive_);\n\n\n/**\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMapController\n */\nexports.Controller_ = function(ngeoFeatureOverlayMgr, gmfPermalink, gmfSnapping) {\n\n  // Scope properties\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.manageResize;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n\n  // Injected properties\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.ngeoFeatureOverlayMgr_.init(this.map);\n  this.gmfPermalink_.setMap(this.map);\n  this.gmfSnapping_.setMap(this.map);\n};\n\n\nexports.controller('GmfMapController', exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/map/component.js","/**\n * @module ngeo.Popover\n */\nimport * as olBase from 'ol/index.js';\nimport olOverlay from 'ol/Overlay.js';\n\n/**\n * @classdesc\n * An openlayers overlay that uses bootstrap popover to produce a popup\n * for maps.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {olx.OverlayOptions=} opt_options Overlay options.\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  let originalEl;\n  if (options.element) {\n    originalEl = options.element;\n    delete options.element;\n  } else {\n    originalEl = $('<div />')[0];\n  }\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.closeEl_ = $('<button>', {\n    'class': 'close',\n    'html': '&times;'\n  });\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.contentEl_ = $('<div/>')\n    .append(this.closeEl_)\n    .append(originalEl);\n\n  options.element = $('<div />')[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const element = this.getElement();\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    $(element).popover('destroy');\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    const contentEl = this.contentEl_;\n    // wait for the overlay to be rendered in the map before poping over\n    window.setTimeout(() => {\n      $(element)\n        .popover({\n          'content': contentEl,\n          'html': true,\n          'placement': 'top',\n          'template': [\n            '<div class=\"popover ngeo-popover\" role=\"tooltip\">',\n            '  <div class=\"arrow\"></div>',\n            '  <h3 class=\"popover-title\"></h3>',\n            '  <div class=\"popover-content\"></div>',\n            '</div>'\n          ].join('')\n        })\n        .popover('show');\n    }, 0);\n\n    this.closeEl_.one('click', () => {\n      const map = this.getMap();\n      if (map) {\n        map.removeOverlay(this);\n      }\n    });\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Popover.js","/**\n * @module ngeo.olcs.constants\n */\nconst exports = {};\n\n/**\n * @enum {string}\n * @export\n */\nexports.Permalink3dParam = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ENABLED: '3d_enabled',\n  /**\n   * @type {string}\n   * @export\n   */\n  LON: '3d_lon',\n  /**\n   * @type {string}\n   * @export\n   */\n  LAT: '3d_lat',\n  /**\n   * @type {string}\n   * @export\n   */\n  ELEVATION: '3d_elevation',\n  /**\n   * @type {string}\n   * @export\n   */\n  HEADING: '3d_heading',\n  /**\n   * @type {string}\n   * @export\n   */\n  PITCH: '3d_pitch',\n  /**\n   * @type {string}\n   * @export\n   */\n  PREFIX: '3d_'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/olcs/constants.js","/**\n * @module ngeo.format.FeatureHash\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoFormatFeatureHashStyleType from 'ngeo/format/FeatureHashStyleType.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatFeature from 'ol/format/Feature.js';\nimport olFormatTextFeature from 'ol/format/TextFeature.js';\nimport olGeomGeometryLayout from 'ol/geom/GeometryLayout.js';\nimport olGeomGeometryType from 'ol/geom/GeometryType.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @classdesc\n * Provide an OpenLayers format for encoding and decoding features for use\n * in permalinks.\n *\n * The code is based on Stéphane Brunner's URLCompressed format.\n *\n * TODOs:\n *\n * - The OpenLayers-URLCompressed format has options where the user\n *   can define attribute and style transformers. This is currently\n *   not supported by this format.\n * - The OpenLayers-URLCompressed format has a \"simplify\" option.\n *   This format does not have it.\n * - ol.style.Icon styles are not supported.\n * - Transformation of coordinates during encoding and decoding is\n *   not supported.\n *\n * @see https://github.com/sbrunner/OpenLayers-URLCompressed\n * @constructor\n * @struct\n * @extends {ol.format.TextFeature}\n * @param {ngeox.format.FeatureHashOptions=} opt_options Options.\n */\nconst exports = function(opt_options) {\n\n  olFormatTextFeature.call(this);\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.accuracy_ = options.accuracy !== undefined ?\n    options.accuracy : exports.ACCURACY_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.encodeStyles_ = options.encodeStyles !== undefined ?\n    options.encodeStyles : true;\n\n  /**\n   * @type {function(ol.Feature):Object.<string, (string|number)>}\n   * @private\n   */\n  this.propertiesFunction_ = options.properties !== undefined ?\n    options.properties : exports.defaultPropertiesFunction_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.setStyle_ = options.setStyle !== undefined ? options.setStyle : true;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevX_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevY_ = 0;\n\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  exports.LegacyProperties_ = (options.propertiesType !== undefined) &&  options.propertiesType;\n\n};\n\nolBase.inherits(exports, olFormatTextFeature);\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.format.FeatureHashStyleType>}\n * @private\n */\nexports.StyleTypes_ = {\n  'LineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'Point': ngeoFormatFeatureHashStyleType.POINT,\n  'Polygon': ngeoFormatFeatureHashStyleType.POLYGON,\n  'MultiLineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'MultiPoint': ngeoFormatFeatureHashStyleType.POINT,\n  'MultiPolygon': ngeoFormatFeatureHashStyleType.POLYGON\n};\n\n/**\n * @type {Object.<string, string>}\n * @private\n */\nexports.LegacyProperties_ = {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeGeometry;\n\n\n/**\n * Characters used to encode the coordinates. The characters \"~\", \"'\", \"(\"\n * and \")\" are not part of this character set, and used as separators (for\n * example to separate the coordinates from the feature properties).\n * @const\n * @private\n */\nexports.CHAR64_ =\n    '.-_!*ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghjkmnpqrstuvwxyz';\n\n\n/**\n * @const\n * @private\n */\nexports.ACCURACY_ = 0.1;\n\n\n/**\n * Get features's properties.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, (string|number)>} The feature properties to\n * serialize.\n * @private\n */\nexports.defaultPropertiesFunction_ = function(feature) {\n  return feature.getProperties();\n};\n\n\n/**\n * Sign then encode a number.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeSignedNumber_ = function(num) {\n  let signedNum = num << 1;\n  if (num < 0) {\n    signedNum = ~(signedNum);\n  }\n  return exports.encodeNumber_(signedNum);\n};\n\n\n/**\n * Transform a number into a logical sequence of characters.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeNumber_ = function(num) {\n  let encodedNumber = '';\n  while (num >= 0x20) {\n    encodedNumber += exports.CHAR64_.charAt(\n      0x20 | (num & 0x1f));\n    num >>= 5;\n  }\n  encodedNumber += exports.CHAR64_.charAt(num);\n  return encodedNumber;\n};\n\n\n/**\n * For a type of geometry, transforms an array of {@link ol.style.Style} into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {Array.<ol.style.Style>} styles Styles.\n * @param {ol.geom.GeometryType} geometryType Geometry type.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyles_ = function(styles, geometryType, encodedStyles) {\n  const styleType = exports.StyleTypes_[geometryType];\n  googAsserts.assert(styleType !== undefined);\n  for (let i = 0; i < styles.length; ++i) {\n    const style = styles[i];\n    const fillStyle = style.getFill();\n    const imageStyle = style.getImage();\n    const strokeStyle = style.getStroke();\n    const textStyle = style.getText();\n    if (styleType == ngeoFormatFeatureHashStyleType.POLYGON) {\n      if (fillStyle !== null) {\n        exports.encodeStylePolygon_(\n          fillStyle, strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.LINE_STRING) {\n      if (strokeStyle !== null) {\n        exports.encodeStyleLine_(strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.POINT) {\n      if (imageStyle !== null) {\n        exports.encodeStylePoint_(imageStyle, encodedStyles);\n      }\n    }\n    if (textStyle !== null) {\n      exports.encodeStyleText_(textStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleLine_ = function(strokeStyle, encodedStyles) {\n  exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n};\n\n\n/**\n * Transform an {@link ol.style.Circle} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Image} imageStyle Image style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePoint_ = function(imageStyle, encodedStyles) {\n  if (imageStyle instanceof olStyleCircle) {\n    const radius = imageStyle.getRadius();\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`pointRadius*${radius}`));\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      exports.encodeStyleFill_(fillStyle, encodedStyles);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and an {@link ol.style.Stroke} into\n * a logical sequence of characters and put the result into the given\n * encoded styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePolygon_ = function(fillStyle, strokeStyle, encodedStyles) {\n  exports.encodeStyleFill_(fillStyle, encodedStyles);\n  if (strokeStyle !== null) {\n    exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and optionally its properties into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @param {string=} opt_propertyName Property name.\n * @private\n */\nexports.encodeStyleFill_ = function(fillStyle, encodedStyles, opt_propertyName) {\n  const propertyName = opt_propertyName !== undefined ?\n    opt_propertyName : 'fillColor';\n  const fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    const fillColorRgba = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColorRgba), 'fill color must be an array');\n    const fillColorHex = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(\n      encodeURIComponent(`${propertyName}*${fillColorHex}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleStroke_ = function(strokeStyle, encodedStyles) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    const strokeColorHex = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeColor*${strokeColorHex}`));\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeWidth*${strokeWidth}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Text} into a logical sequence of characters and\n * put the result into the given encoded styles's array.\n * @param {ol.style.Text} textStyle Text style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleText_ = function(textStyle, encodedStyles) {\n  const fontStyle = textStyle.getFont();\n  if (fontStyle !== undefined) {\n    const font = fontStyle.split(' ');\n    if (font.length >= 3) {\n      if (encodedStyles.length > 0) {\n        encodedStyles.push('\\'');\n      }\n      encodedStyles.push(encodeURIComponent(`fontSize*${font[1]}`));\n    }\n  }\n  const fillStyle = textStyle.getFill();\n  if (fillStyle !== null) {\n    exports.encodeStyleFill_(\n      fillStyle, encodedStyles, 'fontColor');\n  }\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.LineString}.\n * @param {string} text Text.\n * @return {ol.geom.LineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'l(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const lineString = new olGeomLineString(null);\n  lineString.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiLineString}.\n * @param {string} text Text.\n * @return {ol.geom.MultiLineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'L(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const lineStrings = text.split('\\'');\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(lineStrings[i], flatCoordinates);\n    ends[i] = flatCoordinates.length;\n  }\n  const multiLineString = new olGeomMultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return multiLineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Point}.\n * @param {string} text Text.\n * @return {ol.geom.Point} Point.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'p(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  googAsserts.assert(flatCoordinates.length === 2);\n  const point = new olGeomPoint(null);\n  point.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return point;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPoint}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPoint} MultiPoint.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'P(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const multiPoint = new olGeomMultiPoint(null);\n  multiPoint.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return multiPoint;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Polygon}.\n * @param {string} text Text.\n * @return {ol.geom.Polygon} Polygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'a(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const rings = text.split('\\'');\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(rings[i], flatCoordinates);\n    let end = flatCoordinates.length;\n    if (i === 0) {\n      flatCoordinates[end++] = flatCoordinates[0];\n      flatCoordinates[end++] = flatCoordinates[1];\n    } else {\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1]];\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1] + 1];\n    }\n    ends[i] = end;\n  }\n  const polygon = new olGeomPolygon(null);\n  polygon.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return polygon;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPolygon}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'A(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const endss = [];\n  const polygons = text.split(')(');\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const rings = polygons[i].split('\\'');\n    const ends = endss[i] = [];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      flatCoordinates = this.decodeCoordinates_(rings[j], flatCoordinates);\n      let end = flatCoordinates.length;\n      if (j === 0) {\n        flatCoordinates[end++] = flatCoordinates[0];\n        flatCoordinates[end++] = flatCoordinates[1];\n      } else {\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1]];\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1] + 1];\n      }\n      ends[j] = end;\n    }\n  }\n  const multipolygon = new olGeomMultiPolygon(null);\n  multipolygon.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, endss);\n  return multipolygon;\n};\n\n\n/**\n * DEPRECATED - Use the `ngeo.misc.FeatureHelper` instead in combination with the\n * `setStyle: false` option.\n *\n * Read a logical sequence of characters and apply the decoded style on the\n * given feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleInFeature_ = function(text, feature) {\n  if (text == '') {\n    return;\n  }\n  const properties = exports.getStyleProperties_(text, feature);\n  const fillColor = properties['fillColor'];\n  const fontSize = properties['fontSize'];\n  const fontColor = properties['fontColor'];\n  const pointRadius = properties['pointRadius'];\n  const strokeColor = properties['strokeColor'];\n  const strokeWidth = properties['strokeWidth'];\n\n  let fillStyle = null;\n  if (fillColor !== undefined) {\n    fillStyle = new olStyleFill({\n      color: /** @type {Array<number>|string} */ (fillColor)\n    });\n  }\n  let strokeStyle = null;\n  if (strokeColor !== undefined && strokeWidth !== undefined) {\n    strokeStyle = new olStyleStroke({\n      color: /** @type {Array<number>|string} */ (strokeColor),\n      width: /** @type {number} */ (strokeWidth)\n    });\n  }\n  let imageStyle = null;\n  if (pointRadius !== undefined) {\n    imageStyle = new olStyleCircle({\n      radius: /** @type {number} */ (pointRadius),\n      fill: fillStyle,\n      stroke: strokeStyle\n    });\n    fillStyle = strokeStyle = null;\n  }\n  let textStyle = null;\n  if (fontSize !== undefined && fontColor !== undefined) {\n    textStyle = new olStyleText({\n      font: `${fontSize} sans-serif`,\n      fill: new olStyleFill({\n        color: /** @type {Array<number>|string} */ (fontColor)\n      })\n    });\n  }\n  const style = new olStyleStyle({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle\n  });\n  feature.setStyle(style);\n};\n\n\n/**\n * Read a logical sequence of characters and apply the decoded result as\n * style properties for the feature. Legacy keys are converted to the new ones\n * for compatibility.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleProperties_ = function(text, feature) {\n\n  const properties = exports.getStyleProperties_(text, feature);\n  const geometry = feature.getGeometry();\n\n  // Deal with legacy properties\n  if (geometry instanceof olGeomPoint) {\n    if (properties['isLabel'] ||\n        properties[ngeoFormatFeatureProperties.IS_TEXT]) {\n      delete properties['strokeColor'];\n      delete properties['fillColor'];\n    } else {\n      delete properties['fontColor'];\n      delete properties['fontSize'];\n    }\n  } else {\n    delete properties['fontColor'];\n\n    if (geometry instanceof olGeomLineString) {\n      delete properties['fillColor'];\n      delete properties['fillOpacity'];\n    }\n  }\n\n  // Convert font size from px to pt\n  if (properties['fontSize']) {\n    let fontSize = parseFloat(properties['fontSize']);\n    if (properties['fontSize'].indexOf('px') !== -1) {\n      fontSize = Math.round(fontSize / 1.333333);\n    }\n    properties['fontSize'] = fontSize;\n  }\n\n  // Convert legacy properties\n  const clone = {};\n  for (const key in properties) {\n    const value = properties[key];\n    if (exports.LegacyProperties_[key]) {\n      clone[exports.LegacyProperties_[key]] = value;\n    } else {\n      clone[key] = value;\n    }\n  }\n\n  feature.setProperties(clone);\n};\n\n\n/**\n * Cast values in the correct type depending on the property.\n * @param {string} key Key.\n * @param {string} value Value.\n * @return {number|boolean|string} The casted value corresponding to the key.\n * @private\n */\nexports.castValue_ = function(key, value) {\n  const numProperties = [\n    ngeoFormatFeatureProperties.ANGLE,\n    ngeoFormatFeatureProperties.OPACITY,\n    ngeoFormatFeatureProperties.SIZE,\n    ngeoFormatFeatureProperties.STROKE,\n    'pointRadius',\n    'strokeWidth'\n  ];\n  const boolProperties = [\n    ngeoFormatFeatureProperties.IS_CIRCLE,\n    ngeoFormatFeatureProperties.IS_RECTANGLE,\n    ngeoFormatFeatureProperties.IS_TEXT,\n    ngeoFormatFeatureProperties.SHOW_MEASURE,\n    ngeoFormatFeatureProperties.SHOW_LABEL,\n    'isCircle',\n    'isRectangle',\n    'isLabel',\n    'showMeasure',\n    'showLabel'\n  ];\n\n  if (olArray.includes(numProperties, key)) {\n    return +value;\n  } else if (olArray.includes(boolProperties, key)) {\n    return (value === 'true') ? true : false;\n  } else {\n    return value;\n  }\n};\n\n\n/**\n * From a logical sequence of characters, create and return an object of\n * style properties for a feature. The values are cast in the correct type\n * depending on the property. Some properties are also deleted when they don't\n * match the geometry of the feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, boolean|number|string>} The style properties for\n *     the feature.\n * @private\n */\nexports.getStyleProperties_ = function(text, feature) {\n  const parts = text.split('\\'');\n  const properties = {};\n\n  for (let i = 0; i < parts.length; ++i) {\n    const part = decodeURIComponent(parts[i]);\n    const keyVal = part.split('*');\n    googAsserts.assert(keyVal.length === 2);\n    const key = keyVal[0];\n    const val = keyVal[1];\n\n    properties[key] = exports.castValue_(key, val);\n  }\n\n  return properties;\n};\n\n\n/**\n * Encode a {@link ol.geom.LineString} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomLineString);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `l(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode a {@link ol.geom.MultiLineString} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiLineString);\n  const ends = geometry.getEnds();\n  const lineStringCount = ends.length;\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  let offset = 0;\n  const textArray = ['L('];\n  for (let i = 0; i < lineStringCount; ++i) {\n    const end = ends[i];\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = end;\n  }\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode a {@link ol.geom.Point} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `p(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoint} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `P(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Helper to encode an {@link ol.geom.Polygon} geometry.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {Array.<string>} textArray Text array.\n * @return {number} The new offset.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.encodeRings_ = function(flatCoordinates, stride, offset, ends, textArray) {\n  const linearRingCount = ends.length;\n  for (let i = 0; i < linearRingCount; ++i) {\n    // skip the \"closing\" point\n    const end = ends[i] - stride;\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = ends[i];\n  }\n  return offset;\n};\n\n\n/**\n * Encode an {@link ol.geom.Polygon} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const ends = geometry.getEnds();\n  const offset = 0;\n  const textArray = ['a('];\n  exports.encodeRings_.call(this,\n    flatCoordinates, stride, offset, ends, textArray);\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoligon} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const endss = geometry.getEndss();\n  const polygonCount = endss.length;\n  let offset = 0;\n  const textArray = ['A'];\n  for (let i = 0; i < polygonCount; ++i) {\n    const ends = endss[i];\n    textArray.push('(');\n    offset = exports.encodeRings_.call(this,\n      flatCoordinates, stride, offset, ends, textArray);\n    textArray.push(')');\n  }\n  return textArray.join('');\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(string):ol.geom.Geometry>}\n */\nexports.GEOMETRY_READERS_ = {\n  'P': exports.readMultiPointGeometry_,\n  'L': exports.readMultiLineStringGeometry_,\n  'A': exports.readMultiPolygonGeometry_,\n  'l': exports.readLineStringGeometry_,\n  'p': exports.readPointGeometry_,\n  'a': exports.readPolygonGeometry_\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(ol.geom.Geometry):string>}\n */\nexports.GEOMETRY_WRITERS_ = {\n  'MultiLineString': exports.writeMultiLineStringGeometry_,\n  'MultiPoint': exports.writeMultiPointGeometry_,\n  'MultiPolygon': exports.writeMultiPolygonGeometry_,\n  'LineString': exports.writeLineStringGeometry_,\n  'Point': exports.writePointGeometry_,\n  'Polygon': exports.writePolygonGeometry_\n};\n\n\n/**\n * Read a logical sequence of characters and return (or complet then return)\n * an array of numbers. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * corresponding to a geometry's coordinates.\n * @param {string} text Text.\n * @param {Array.<number>=} opt_flatCoordinates Flat coordinates array.\n * @return {Array.<number>} Flat coordinates.\n * @private\n */\nexports.prototype.decodeCoordinates_ = function(text, opt_flatCoordinates) {\n  const len = text.length;\n  let index = 0;\n  const flatCoordinates = opt_flatCoordinates !== undefined ?\n    opt_flatCoordinates : [];\n  let i = flatCoordinates.length;\n  while (index < len) {\n    let b;\n    let shift = 0;\n    let result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dx = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevX_ += dx;\n    shift = 0;\n    result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dy = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevY_ += dy;\n    flatCoordinates[i++] = this.prevX_ * this.accuracy_;\n    flatCoordinates[i++] = this.prevY_ * this.accuracy_;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * Encode an array of number (corresponding to some coordinates) into a\n * logical sequence of characters. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @return {string} String.\n * @private\n */\nexports.prototype.encodeCoordinates_ = function(flatCoordinates, stride, offset, end) {\n  let encodedCoordinates = '';\n  for (let i = offset; i < end; i += stride) {\n    let x = flatCoordinates[i];\n    let y = flatCoordinates[i + 1];\n    x = Math.floor(x / this.accuracy_);\n    y = Math.floor(y / this.accuracy_);\n    const dx = x - this.prevX_;\n    const dy = y - this.prevY_;\n    this.prevX_ = x;\n    this.prevY_ = y;\n    encodedCoordinates += exports.encodeSignedNumber_(dx) +\n        exports.encodeSignedNumber_(dy);\n  }\n  return encodedCoordinates;\n};\n\n\n/**\n * Read a feature from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @protected\n * @override\n */\nexports.prototype.readFeatureFromText = function(text, opt_options) {\n  googAsserts.assert(text.length > 2);\n  googAsserts.assert(text[1] === '(');\n  googAsserts.assert(text[text.length - 1] === ')');\n  let splitIndex = text.indexOf('~');\n  const geometryText = splitIndex >= 0 ?\n    `${text.substring(0, splitIndex)})` : text;\n  const geometry = this.readGeometryFromText(geometryText, opt_options);\n  const feature = new olFeature(geometry);\n  if (splitIndex >= 0) {\n    const attributesAndStylesText = text.substring(\n      splitIndex + 1, text.length - 1);\n    splitIndex = attributesAndStylesText.indexOf('~');\n    const attributesText = splitIndex >= 0 ?\n      attributesAndStylesText.substring(0, splitIndex) :\n      attributesAndStylesText;\n    if (attributesText != '') {\n      const parts = attributesText.split('\\'');\n      for (let i = 0; i < parts.length; ++i) {\n        const part = decodeURIComponent(parts[i]);\n        const keyVal = part.split('*');\n        googAsserts.assert(keyVal.length === 2);\n        let key = keyVal[0];\n        const value = keyVal[1];\n        if (!this.setStyle_ && exports.LegacyProperties_[key]) {\n          key = exports.LegacyProperties_[key];\n        }\n        feature.set(key, exports.castValue_(key, value));\n      }\n    }\n    if (splitIndex >= 0) {\n      const stylesText = attributesAndStylesText.substring(splitIndex + 1);\n      if (this.setStyle_) {\n        exports.setStyleInFeature_(stylesText, feature);\n      } else {\n        exports.setStyleProperties_(stylesText, feature);\n      }\n    }\n  }\n  return feature;\n};\n\n\n/**\n * Read multiple features from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @protected\n * @override\n */\nexports.prototype.readFeaturesFromText = function(text, opt_options) {\n  googAsserts.assert(text[0] === 'F');\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  text = text.substring(1);\n  while (text.length > 0) {\n    const index = text.indexOf(')');\n    googAsserts.assert(index >= 0);\n    const feature = this.readFeatureFromText(\n      text.substring(0, index + 1), opt_options);\n    features.push(feature);\n    text = text.substring(index + 1);\n  }\n  return features;\n};\n\n\n/**\n * Read a geometry from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @protected\n * @override\n */\nexports.prototype.readGeometryFromText = function(text, opt_options) {\n  const geometryReader = exports.GEOMETRY_READERS_[text[0]];\n  googAsserts.assert(geometryReader !== undefined);\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryReader.call(this, text);\n};\n\n\n/**\n * Encode a feature into a logical sequence of characters.\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded feature.\n * @protected\n * @override\n */\nexports.prototype.writeFeatureText = function(feature, opt_options) {\n  const /** @type {Array.<string>} */ encodedParts = [];\n\n  // encode geometry\n\n  let encodedGeometry = '';\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    encodedGeometry = this.writeGeometryText(geometry, opt_options);\n  }\n\n  if (encodedGeometry.length > 0) {\n    // remove the final bracket\n    googAsserts.assert(encodedGeometry[encodedGeometry.length - 1] === ')');\n    encodedGeometry = encodedGeometry.substring(0, encodedGeometry.length - 1);\n    encodedParts.push(encodedGeometry);\n  }\n\n  // encode properties\n\n  const /** @type {Array.<string>} */ encodedProperties = [];\n  const propFunction = this.propertiesFunction_(feature);\n  for (const key in propFunction) {\n    const value = propFunction[key];\n    if (value !== undefined && value !== null && key !== feature.getGeometryName()) {\n      if (encodedProperties.length !== 0) {\n        encodedProperties.push('\\'');\n      }\n      const encoded = encodeURIComponent(\n        `${key.replace(/[()'*]/g, '_')}*${\n          value.toString().replace(/[()'*]/g, '_')}`);\n      encodedProperties.push(encoded);\n    }\n  }\n\n  if (encodedProperties.length > 0) {\n    encodedParts.push('~');\n    Array.prototype.push.apply(encodedParts, encodedProperties);\n  }\n\n  // encode styles\n\n  if (this.encodeStyles_) {\n    const styleFunction = feature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      let styles = styleFunction.call(feature, 0);\n      if (styles !== null) {\n        const encodedStyles = [];\n        styles = Array.isArray(styles) ? styles : [styles];\n        exports.encodeStyles_(\n          styles, geometry.getType(), encodedStyles);\n        if (encodedStyles.length > 0) {\n          encodedParts.push('~');\n          Array.prototype.push.apply(encodedParts, encodedStyles);\n        }\n      }\n    }\n  }\n\n  // append the closing bracket and return the encoded feature\n\n  encodedParts.push(')');\n  return encodedParts.join('');\n};\n\n\n/**\n * Encode an array of features into a logical sequence of characters.\n * @param {Array.<ol.Feature>} features Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded features.\n * @protected\n * @override\n */\nexports.prototype.writeFeaturesText = function(features, opt_options) {\n  const textArray = [];\n  if (features.length > 0) {\n    textArray.push('F');\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      textArray.push(this.writeFeatureText(features[i], opt_options));\n    }\n  }\n  return textArray.join('');\n};\n\n\n/**\n * Encode a geometry into a logical sequence of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded geometry.\n * @protected\n * @override\n */\nexports.prototype.writeGeometryText = function(geometry, opt_options) {\n  const geometryWriter = exports.GEOMETRY_WRITERS_[\n    geometry.getType()];\n  googAsserts.assert(geometryWriter !== undefined);\n  const transformedGeometry = /** @type {ol.geom.Geometry} */\n      (olFormatFeature.transformWithOptions(geometry, true, opt_options));\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  return geometryWriter.call(this, transformedGeometry);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHash.js","/**\n * @module ngeo.format.FeatureHashStyleType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureHashStyleType.js","/**\n * @module ngeo.statemanager.module\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoStatemanagerModule', [\n  ngeoStatemanagerLocation.module.name,\n  ngeoStatemanagerService.module.name\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/module.js","/**\n * @module ol/interaction/Snap\n */\nimport {getUid, inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport _ol_coordinate_ from '../coordinate.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport {getValues} from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link ol.source.Vector} or {@link ol.Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     var snap = new ol.interaction.Snap({\n *       source: source\n *     });\n *\n * @constructor\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.SnapOptions=} opt_options Options.\n * @api\n */\nconst Snap = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleEvent: Snap.handleEvent_,\n    handleDownEvent: TRUE,\n    handleUpEvent: Snap.handleUpEvent_\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.edge_ = options.edge !== undefined ? options.edge : true;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.featuresListenerKeys_ = [];\n\n  /**\n   * @type {Object.<number, ol.EventsKey>}\n   * @private\n   */\n  this.featureChangeListenerKeys_ = {};\n\n  /**\n   * Extents are preserved so indexed segment can be quickly removed\n   * when its feature geometry changes\n   * @type {Object.<number, ol.Extent>}\n   * @private\n   */\n  this.indexedFeaturesExtents_ = {};\n\n  /**\n   * If a feature geometry changes while a pointer drag|move event occurs, the\n   * feature doesn't get updated right away.  It will be at the next 'pointerup'\n   * event fired.\n   * @type {Object.<number, ol.Feature>}\n   * @private\n   */\n  this.pendingFeatures_ = {};\n\n  /**\n   * Used for distance sorting in sortByDistance_\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.pixelCoordinate_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {function(ol.SnapSegmentDataType, ol.SnapSegmentDataType): number}\n   * @private\n   */\n  this.sortByDistance_ = Snap.sortByDistance.bind(this);\n\n\n  /**\n  * Segment RTree for each layer\n  * @type {ol.structs.RBush.<ol.SnapSegmentDataType>}\n  * @private\n  */\n  this.rBush_ = new RBush();\n\n\n  /**\n  * @const\n  * @private\n  * @type {Object.<string, function(ol.Feature, ol.geom.Geometry)>}\n  */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_,\n    'Circle': this.writeCircleGeometry_\n  };\n};\n\ninherits(Snap, PointerInteraction);\n\n\n/**\n * Add a feature to the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature.\n * @param {boolean=} opt_listen Whether to listen to the feature change or not\n *     Defaults to `true`.\n * @api\n */\nSnap.prototype.addFeature = function(feature, opt_listen) {\n  const listen = opt_listen !== undefined ? opt_listen : true;\n  const feature_uid = getUid(feature);\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n    if (segmentWriter) {\n      this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n      segmentWriter.call(this, feature, geometry);\n    }\n  }\n\n  if (listen) {\n    this.featureChangeListenerKeys_[feature_uid] = _ol_events_.listen(\n      feature,\n      EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureAdd_ = function(feature) {\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureRemove_ = function(feature) {\n  this.removeFeature(feature);\n};\n\n\n/**\n * @return {ol.Collection.<ol.Feature>|Array.<ol.Feature>} Features.\n * @private\n */\nSnap.prototype.getFeatures_ = function() {\n  let features;\n  if (this.features_) {\n    features = this.features_;\n  } else if (this.source_) {\n    features = this.source_.getFeatures();\n  }\n  return /** @type {!Array.<ol.Feature>|!ol.Collection.<ol.Feature>} */ (features);\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureAdd_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.addFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.source.Vector.Event|ol.Collection.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureRemove_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSource.Event) {\n    feature = evt.feature;\n  } else if (evt instanceof Collection.Event) {\n    feature = evt.element;\n  }\n  this.removeFeature(/** @type {ol.Feature} */ (feature));\n};\n\n\n/**\n * @param {ol.events.Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureChange_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.target);\n  if (this.handlingDownUpSequence) {\n    const uid = getUid(feature);\n    if (!(uid in this.pendingFeatures_)) {\n      this.pendingFeatures_[uid] = feature;\n    }\n  } else {\n    this.updateFeature_(feature);\n  }\n};\n\n\n/**\n * Remove a feature from the collection of features that we may snap to.\n * @param {ol.Feature} feature Feature\n * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n *     or not. Defaults to `true`.\n * @api\n */\nSnap.prototype.removeFeature = function(feature, opt_unlisten) {\n  const unlisten = opt_unlisten !== undefined ? opt_unlisten : true;\n  const feature_uid = getUid(feature);\n  const extent = this.indexedFeaturesExtents_[feature_uid];\n  if (extent) {\n    const rBush = this.rBush_;\n    const nodesToRemove = [];\n    rBush.forEachInExtent(extent, function(node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      rBush.remove(nodesToRemove[i]);\n    }\n  }\n\n  if (unlisten) {\n    _ol_events_.unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n    delete this.featureChangeListenerKeys_[feature_uid];\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.setMap = function(map) {\n  const currentMap = this.getMap();\n  const keys = this.featuresListenerKeys_;\n  const features = this.getFeatures_();\n\n  if (currentMap) {\n    keys.forEach(_ol_events_.unlistenByKey);\n    keys.length = 0;\n    features.forEach(this.forEachFeatureRemove_.bind(this));\n  }\n  PointerInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    if (this.features_) {\n      keys.push(\n        _ol_events_.listen(this.features_, CollectionEventType.ADD,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.features_, CollectionEventType.REMOVE,\n          this.handleFeatureRemove_, this)\n      );\n    } else if (this.source_) {\n      keys.push(\n        _ol_events_.listen(this.source_, VectorEventType.ADDFEATURE,\n          this.handleFeatureAdd_, this),\n        _ol_events_.listen(this.source_, VectorEventType.REMOVEFEATURE,\n          this.handleFeatureRemove_, this)\n      );\n    }\n    features.forEach(this.forEachFeatureAdd_.bind(this));\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.Coordinate} pixelCoordinate Coordinate\n * @param {ol.PluggableMap} map Map.\n * @return {ol.SnapResultType} Snap result\n */\nSnap.prototype.snapTo = function(pixel, pixelCoordinate, map) {\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = boundingExtent([lowerLeft, upperRight]);\n\n  let segments = this.rBush_.getInExtent(box);\n\n  // If snapping on vertices only, don't consider circles\n  if (this.vertex_ && !this.edge_) {\n    segments = segments.filter(function(segment) {\n      return segment.feature.getGeometry().getType() !==\n          GeometryType.CIRCLE;\n    });\n  }\n\n  let snappedToVertex = false;\n  let snapped = false;\n  let vertex = null;\n  let vertexPixel = null;\n  let dist, pixel1, pixel2, squaredDist1, squaredDist2;\n  if (segments.length > 0) {\n    this.pixelCoordinate_ = pixelCoordinate;\n    segments.sort(this.sortByDistance_);\n    const closestSegment = segments[0].segment;\n    const isCircle = segments[0].feature.getGeometry().getType() ===\n        GeometryType.CIRCLE;\n    if (this.vertex_ && !this.edge_) {\n      pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      squaredDist1 = _ol_coordinate_.squaredDistance(pixel, pixel1);\n      squaredDist2 = _ol_coordinate_.squaredDistance(pixel, pixel2);\n      dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      snappedToVertex = dist <= this.pixelTolerance_;\n      if (snappedToVertex) {\n        snapped = true;\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n      }\n    } else if (this.edge_) {\n      if (isCircle) {\n        vertex = _ol_coordinate_.closestOnCircle(pixelCoordinate,\n          /** @type {ol.geom.Circle} */ (segments[0].feature.getGeometry()));\n      } else {\n        vertex = (_ol_coordinate_.closestOnSegment(pixelCoordinate,\n          closestSegment));\n      }\n      vertexPixel = map.getPixelFromCoordinate(vertex);\n      if (_ol_coordinate_.distance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        snapped = true;\n        if (this.vertex_ && !isCircle) {\n          pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          squaredDist1 = _ol_coordinate_.squaredDistance(vertexPixel, pixel1);\n          squaredDist2 = _ol_coordinate_.squaredDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          snappedToVertex = dist <= this.pixelTolerance_;\n          if (snappedToVertex) {\n            vertex = squaredDist1 > squaredDist2 ?\n              closestSegment[1] : closestSegment[0];\n            vertexPixel = map.getPixelFromCoordinate(vertex);\n          }\n        }\n      }\n    }\n    if (snapped) {\n      vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n    }\n  }\n  return /** @type {ol.SnapResultType} */ ({\n    snapped: snapped,\n    vertex: vertex,\n    vertexPixel: vertexPixel\n  });\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @private\n */\nSnap.prototype.updateFeature_ = function(feature) {\n  this.removeFeature(feature, false);\n  this.addFeature(feature, false);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Circle} geometry Geometry.\n * @private\n */\nSnap.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const polygon = fromCircle(geometry);\n  const coordinates = polygon.getCoordinates()[0];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.GeometryCollection} geometry Geometry.\n * @private\n */\nSnap.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0; i < geometries.length; ++i) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n    if (segmentWriter) {\n      segmentWriter.call(this, feature, geometries[i]);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.LineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiLineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  const lines = geometry.getCoordinates();\n  for (let j = 0, jj = lines.length; j < jj; ++j) {\n    const coordinates = lines[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPoint} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  const points = geometry.getCoordinates();\n  for (let i = 0, ii = points.length; i < ii; ++i) {\n    const coordinates = points[i];\n    const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n      feature: feature,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.MultiPolygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  const polygons = geometry.getCoordinates();\n  for (let k = 0, kk = polygons.length; k < kk; ++k) {\n    const rings = polygons[k];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Point} geometry Geometry.\n * @private\n */\nSnap.prototype.writePointGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n    feature: feature,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  for (let j = 0, jj = rings.length; j < jj; ++j) {\n    const coordinates = rings[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {ol.SnapSegmentDataType} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * Handle all pointer events events.\n * @param {ol.MapBrowserEvent} evt A move event.\n * @return {boolean} Pass the event to other interactions.\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleEvent_ = function(evt) {\n  const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n  if (result.snapped) {\n    evt.coordinate = result.vertex.slice(0, 2);\n    evt.pixel = result.vertexPixel;\n  }\n  return PointerInteraction.handleEvent.call(this, evt);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ol.interaction.Snap}\n * @private\n */\nSnap.handleUpEvent_ = function(evt) {\n  const featuresToUpdate = getValues(this.pendingFeatures_);\n  if (featuresToUpdate.length) {\n    featuresToUpdate.forEach(this.updateFeature_.bind(this));\n    this.pendingFeatures_ = {};\n  }\n  return false;\n};\n\n\n/**\n * Sort segments by distance, helper function\n * @param {ol.SnapSegmentDataType} a The first segment data.\n * @param {ol.SnapSegmentDataType} b The second segment data.\n * @return {number} The difference in distance.\n * @this {ol.interaction.Snap}\n */\nSnap.sortByDistance = function(a, b) {\n  return _ol_coordinate_.squaredDistanceToSegment(\n    this.pixelCoordinate_, a.segment) -\n      _ol_coordinate_.squaredDistanceToSegment(\n        this.pixelCoordinate_, b.segment);\n};\nexport default Snap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/interaction/Snap.js\n// module id = 129\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.proj.EPSG21781\n */\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport * as olProjProj4 from 'ol/proj/proj4.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjSomerc from 'ngeo/proj/somerc.js';\n\nimport proj4 from 'proj4';\n\nconst epsg21781def = [\n  '+proj=somerc',\n  '+lat_0=46.95240555555556',\n  '+lon_0=7.439583333333333',\n  '+k_0=1',\n  '+x_0=600000',\n  '+y_0=200000',\n  '+ellps=bessel',\n  '+towgs84=674.374,15.056,405.346,0,0,0,0',\n  '+units=m',\n  '+no_defs'\n].join(' ');\nconst epsg21781extent = [420000, 30000, 900000, 350000];\n\nproj4.defs('EPSG:21781', epsg21781def);\nolProjProj4.register(proj4);\nolProj.get('EPSG:21781').setExtent(epsg21781extent);\n\nconst exports = 'EPSG:21781';\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/proj/EPSG21781.js","/**\n * @module ngeo.proj.somerc\n */\nconst exports = {};\nimport * as olProj from 'ol/proj.js';\nimport * as olProjProj4 from 'ol/proj/proj4.js';\nimport proj4 from 'proj4';\nimport somerc from 'proj4/projections/somerc.js';\n\nproj4.Proj.projections.add(somerc);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/proj/somerc.js","module.exports = {\"_from\":\"proj4@2.4.4\",\"_id\":\"proj4@2.4.4\",\"_inBundle\":false,\"_integrity\":\"sha512-yo6qTpBQXnxhcPopKJeVwwOBRzUpEa3vzSFlr38f5mF4Jnfb6NOL/ePIomefWiZmPgkUblHpcwnWVMB8FS3GKw==\",\"_location\":\"/proj4\",\"_phantomChildren\":{},\"_requested\":{\"type\":\"version\",\"registry\":true,\"raw\":\"proj4@2.4.4\",\"name\":\"proj4\",\"escapedName\":\"proj4\",\"rawSpec\":\"2.4.4\",\"saveSpec\":null,\"fetchSpec\":\"2.4.4\"},\"_requiredBy\":[\"#DEV:/\"],\"_resolved\":\"https://registry.npmjs.org/proj4/-/proj4-2.4.4.tgz\",\"_shasum\":\"c03d825e380f6850a4a7af5d20d365f6b72c4042\",\"_spec\":\"proj4@2.4.4\",\"_where\":\"/home/travis/build/camptocamp/ngeo\",\"author\":\"\",\"bugs\":{\"url\":\"https://github.com/proj4js/proj4js/issues\"},\"bundleDependencies\":false,\"contributors\":[{\"name\":\"Mike Adair\",\"email\":\"madair@dmsolutions.ca\"},{\"name\":\"Richard Greenwood\",\"email\":\"rich@greenwoodmap.com\"},{\"name\":\"Calvin Metcalf\",\"email\":\"calvin.metcalf@gmail.com\"},{\"name\":\"Richard Marsden\",\"url\":\"http://www.winwaed.com\"},{\"name\":\"T. Mittan\"},{\"name\":\"D. Steinwand\"},{\"name\":\"S. Nelson\"}],\"dependencies\":{\"mgrs\":\"1.0.0\",\"wkt-parser\":\"^1.2.0\"},\"deprecated\":false,\"description\":\"Proj4js is a JavaScript library to transform point coordinates from one coordinate system to another, including datum transformations.\",\"devDependencies\":{\"chai\":\"~1.8.1\",\"curl\":\"git://github.com/cujojs/curl.git\",\"grunt\":\"^1.0.1\",\"grunt-cli\":\"~0.1.13\",\"grunt-contrib-connect\":\"~0.6.0\",\"grunt-contrib-jshint\":\"~1.1.0\",\"grunt-contrib-uglify\":\"~0.11.1\",\"grunt-mocha-phantomjs\":\"~0.4.0\",\"grunt-rollup\":\"^1.0.1\",\"istanbul\":\"~0.2.4\",\"mocha\":\"~1.17.1\",\"rollup\":\"^0.41.4\",\"rollup-plugin-json\":\"^2.0.1\",\"rollup-plugin-node-resolve\":\"^2.0.0\",\"tin\":\"~0.4.0\"},\"directories\":{\"test\":\"test\",\"doc\":\"docs\"},\"homepage\":\"https://github.com/proj4js/proj4js#readme\",\"license\":\"MIT\",\"main\":\"dist/proj4-src.js\",\"module\":\"lib/index.js\",\"name\":\"proj4\",\"repository\":{\"type\":\"git\",\"url\":\"git://github.com/proj4js/proj4js.git\"},\"scripts\":{\"build\":\"grunt\",\"build:tmerc\":\"grunt build:tmerc\",\"test\":\"npm run build && istanbul test _mocha test/test.js\"},\"version\":\"2.4.4\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/package.json\n// module id = 146\n// module chunks = 0 1 2 3 4 5 6 7 9 10 11 12 13 15 16 17 18 19 20","/**\n * @module ol/format/XSD\n */\nimport _ol_xml_ from '../xml.js';\nimport _ol_string_ from '../string.js';\nconst XSD = {};\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBoolean = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readBooleanString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nXSD.readBooleanString = function(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nXSD.readDateTime = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimal = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readDecimalString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nXSD.readDecimalString = function(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeInteger = function(node) {\n  const s = _ol_xml_.getAllTextContent(node, false);\n  return XSD.readNonNegativeIntegerString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nXSD.readNonNegativeIntegerString = function(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nXSD.readString = function(node) {\n  return _ol_xml_.getAllTextContent(node, false).trim();\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nXSD.writeBooleanTextNode = function(node, bool) {\n  XSD.writeStringTextNode(node, (bool) ? '1' : '0');\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nXSD.writeCDATASection = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createCDATASection(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nXSD.writeDateTimeTextNode = function(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string = date.getUTCFullYear() + '-' +\n      _ol_string_.padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      _ol_string_.padNumber(date.getUTCDate(), 2) + 'T' +\n      _ol_string_.padNumber(date.getUTCHours(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCMinutes(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nXSD.writeDecimalTextNode = function(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nXSD.writeNonNegativeIntegerTextNode = function(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nXSD.writeStringTextNode = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\nexport default XSD;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XSD.js\n// module id = 17\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interpolate_ from '../geom/flat/interpolate.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {ol.geom.LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getsMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getsClosestPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return _ol_geom_flat_interpolate_.lineStringsCoordinateAtM(this.flatCoordinates, 0,\n    this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<ol.Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinatess(\n    this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<ol.geom.LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const layout = this.layout;\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = [];\n  let offset = 0;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  const midpoints = [];\n  const flatCoordinates = this.flatCoordinates;\n  let offset = 0;\n  const ends = this.ends_;\n  const stride = this.stride;\n  let i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const midpoint = _ol_geom_flat_interpolate_.lineString(\n      flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeuckers(\n    this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.lineStrings(\n    this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = _ol_geom_flat_deflate_.coordinatess(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const ends = [];\n  let i, ii;\n  for (i = 0, ii = lineStrings.length; i < ii; ++i) {\n    const lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiLineString.js\n// module id = 18\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {ol.geom.Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  const multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, j;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const squaredDistance = squaredDx(\n      x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<ol.Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  const n = !this.flatCoordinates ?\n    0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<ol.geom.Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const layout = this.layout;\n  const stride = this.stride;\n  /** @type {Array.<ol.geom.Point>} */\n  const points = [];\n  let i, ii;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  let i, ii, x, y;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    x = flatCoordinates[i];\n    y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPoint.js\n// module id = 20\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_center_ from '../geom/flat/center.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_contains_ from '../geom/flat/contains.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interiorpoint_ from '../geom/flat/interiorpoint.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_orient_ from '../geom/flat/orient.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  let ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    const offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  const multiPolygon = new MultiPolygon(null);\n\n  const len = this.endss_.length;\n  const newEndss = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getssMaxSquaredDelta(\n      this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getssClosestPoint(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return _ol_geom_flat_contains_.linearRingssContainsXY(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<ol.Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    _ol_geom_flat_orient_.orientLinearRingss(\n      flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return _ol_geom_flat_inflate_.coordinatesss(\n    flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    const flatCenters = _ol_geom_flat_center_.linearRingss(\n      this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = _ol_geom_flat_interiorpoint_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link ol.geom.MultiPoint multipoint}.\n * @return {ol.geom.MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  const interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n    this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (_ol_geom_flat_orient_.linearRingssAreOriented(\n      flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          _ol_geom_flat_orient_.orientLinearRingss(\n            this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.quantizess(\n    this.flatCoordinates, 0, this.endss_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEndss);\n  const simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  let offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    const prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  const ends = this.endss_[index].slice();\n  const end = ends[ends.length - 1];\n  if (offset !== 0) {\n    let i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<ol.geom.Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const endss = this.endss_;\n  const polygons = [];\n  let offset = 0;\n  let i, ii, j, jj;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n      layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.linearRingss(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = _ol_geom_flat_deflate_.coordinatesss(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const endss = [];\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    const offset = flatCoordinates.length;\n    const ends = polygon.getEnds();\n    for (let j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\n\nexport default MultiPolygon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/geom/MultiPolygon.js\n// module id = 21\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","/**\n * @module gmf.theme.Themes\n */\nimport googAsserts from 'goog/asserts.js';\nimport gmfBase from 'gmf/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * The Themes service. This service interacts\n * with c2cgeoportal's \"themes\" web service and exposes functions that return\n * objects in the tree returned by the \"themes\" web service.\n *\n * @constructor\n * @struct\n * @extends {ol.events.EventTarget}\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$q} $q Angular q service\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmfx.ThemesOptions} gmfThemesOptions Themes options.\n * @ngInject\n * @ngdoc service\n * @ngname gmfThemes\n */\nconst exports = function($http, $injector, $q, ngeoLayerHelper, gettextCatalog, gmfThemesOptions) {\n\n  olEventsEventTarget.call(this);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.addBlankBackgroundLayer_ = true;\n  if (gmfThemesOptions.addBlankBackgroundLayer !== undefined) {\n    this.addBlankBackgroundLayer_ = gmfThemesOptions.addBlankBackgroundLayer;\n  }\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.treeUrl_ = undefined;\n  if ($injector.has('gmfTreeUrl')) {\n    this.treeUrl_ = $injector.get('gmfTreeUrl');\n  }\n\n  this.cacheVersion_ = '0';\n  if ($injector.has('cacheVersion')) {\n    this.cacheVersion_ = $injector.get('cacheVersion');\n  }\n\n  /**\n   * @type {?ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = null;\n  if ($injector.has('ngeoLocation')) {\n    this.ngeoLocation_ = $injector.get('ngeoLocation');\n  }\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog = gettextCatalog;\n\n  /**\n   * @type {angular.$q.Deferred}\n   * @private\n   */\n  this.deferred_ = $q.defer();\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promise_ = this.deferred_.promise;\n\n  /**\n   * @type {boolean}\n   */\n  this.loaded = false;\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.bgLayerPromise_ = null;\n};\n\nolBase.inherits(exports, olEventsEventTarget);\n\n\n/**\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The layer name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByLayerNodeName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const childNodes = [];\n      exports.getFlatNodes(group, childNodes);\n      if (exports.findObjectByName(childNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n/**\n * Find a layer group object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The group name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const internalNodes = [];\n      exports.getFlatInternalNodes(group, internalNodes);\n      if (exports.findObjectByName(internalNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Find an object by its name. Return null if not found.\n * @param {Array.<T>} objects Array of objects with a 'name' attribute.\n * @param {string} objectName The object name.\n * @return {T} The object or null.\n * @template T\n */\nexports.findObjectByName = function(objects, objectName) {\n  return olArray.find(objects, object => object['name'] === objectName);\n};\n\n\n/**\n * Find a theme object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} themeName The theme name.\n * @return {gmfThemes.GmfTheme} The theme object or null.\n */\nexports.findThemeByName = function(themes, themeName) {\n  return exports.findObjectByName(themes, themeName);\n};\n\n\n/**\n * Fill the given \"nodes\" array with all internal nodes (non-leaf nones) in\n * the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatInternalNodes = function(node, nodes) {\n  const children = node.children;\n  if (children !== undefined) {\n    nodes.push(node);\n    for (let i = 0; i < children.length; i++) {\n      exports.getFlatInternalNodes(children[i], nodes);\n    }\n  }\n};\n\n\n/**\n * Fill the given \"nodes\" array with all leaf nodes in the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatNodes = function(node, nodes) {\n  let i;\n  const children = node.children;\n  if (children !== undefined) {\n    for (i = 0; i < children.length; i++) {\n      exports.getFlatNodes(children[i], nodes);\n    }\n  } else {\n    nodes.push(node);\n  }\n};\n\n\n/**\n * Get background layers.\n * @param {!Object.<string, string>} appDimensions Dimensions.\n * @return {!angular.$q.Promise.<!Array.<!ol.layer.Base>>} Promise.\n */\nexports.prototype.getBgLayers = function(appDimensions) {\n  const gettextCatalog = this.gettextCatalog;\n  if (this.bgLayerPromise_) {\n    return this.bgLayerPromise_;\n  }\n  const $q = this.$q_;\n  const layerHelper = this.layerHelper_;\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item A group or a leaf.\n   * @param {Array.<number>} array Array of ids;\n   */\n  const getIds = function(item, array) {\n    array.push(olBase.getUid(item));\n    const children = item.children || [];\n    children.forEach((child) => {\n      getIds(child, array);\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item The item.\n   * @param {ol.layer.Base} layer The layer.\n   * @return {ol.layer.Base} the provided layer.\n   */\n  const callback = function(item, layer) {\n    layer.set('label', item.name);\n    layer.set('metadata', item.metadata);\n    layer.set('dimensions', item.dimensions);\n    const ids = [];\n    getIds(item, ids);\n    layer.set('querySourceIds', ids);\n    return layer;\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} gmfLayer The item.\n   * @return {angular.$q.Promise.<ol.layer.Base>|ol.layer.Base} the created layer.\n   */\n  const layerLayerCreationFn = function(ogcServers, gmfLayer) {\n    if (gmfLayer.type === 'WMTS') {\n      const gmfLayerWMTS = /** @type gmfThemes.GmfLayerWMTS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMTS.url, 'Layer URL is required');\n      return layerHelper.createWMTSLayerFromCapabilitites(\n        gmfLayerWMTS.url,\n        gmfLayerWMTS.layer || '',\n        gmfLayer.dimensions\n      ).then(callback.bind(null, gmfLayer)).then(null, (response) => {\n        let message = `Unable to build layer \"${gmfLayerWMTS.layer}\" from WMTSCapabilities: ${gmfLayerWMTS.url}\\n`;\n        message += `OpenLayers error is \"${response['message']}`;\n        console.error(message);\n        // Continue even if some layers have failed loading.\n        return $q.resolve(undefined);\n      });\n    } else if (gmfLayer.type === 'WMS') {\n      const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMS.ogcServer, 'An OGC server is required');\n      const server = ogcServers[gmfLayerWMS.ogcServer];\n      googAsserts.assert(server, 'The OGC server was not found');\n      googAsserts.assert(server.url, 'The server URL is required');\n      googAsserts.assert(server.imageType, 'The server image type is required');\n      return callback(gmfLayer, layerHelper.createBasicWMSLayer(\n        server.url,\n        gmfLayerWMS.layers || '',\n        server.imageType,\n        server.type,\n        undefined, // time\n        gmfLayer.dimensions,\n        server.credential ? 'use-credentials' : 'anonymous'\n      ));\n    }\n    googAsserts.fail(`Unsupported type: ${gmfLayer.type}`);\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup} item The item.\n   * @return {angular.$q.Promise.<ol.layer.Group>} the created layer.\n   */\n  const layerGroupCreationFn = function(ogcServers, item) {\n    // We assume no child is a layer group.\n    const orderedChildren = item.children.map(x => x).reverse(); // the order of insertion in OL3 is the contrary of the theme\n    const promises = orderedChildren.map(layerLayerCreationFn.bind(null, ogcServers));\n    return $q.all(promises).then((layers) => {\n      let collection;\n      if (layers) {\n        layers = layers.filter(l => l);\n        collection = new olCollection(layers);\n      }\n      const group = layerHelper.createBasicGroup(collection);\n      callback(item, group);\n      return group;\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n   *     response.\n   * @return {angular.$q.Promise.<Array.<ol.layer.Base>>} Promise.\n   */\n  const promiseSuccessFn = function(data) {\n    const promises = data.background_layers.map((item) => {\n      const itemType = item.type;\n      if (itemType === 'WMTS' || itemType === 'WMS') {\n        return layerLayerCreationFn(data.ogcServers, item);\n      } else if (item.children) {\n        // group of layers\n        return layerGroupCreationFn(data.ogcServers, item);\n      } else {\n        return undefined;\n      }\n    }, this);\n    return $q.all(promises);\n  }.bind(this);\n\n  this.bgLayerPromise_ = this.promise_.then(promiseSuccessFn).then((values) => {\n    const layers = [];\n\n    // (1) add a blank layer\n    if (this.addBlankBackgroundLayer_) {\n      // For i18n string collection\n      gettextCatalog.getString('blank');\n      layers.push(new olLayerTile({\n        'label': 'blank',\n        'metadata': {'thumbnail': ''}\n      }));\n    }\n\n    // (2) add layers that were returned\n    values.forEach((layer) => {\n      if (layer) {\n        layers.push(layer);\n      }\n    });\n    return layers;\n  });\n\n  return this.bgLayerPromise_;\n};\n\n\n/**\n * Get a theme object by its name.\n * @param {string} themeName Theme name.\n * @return {angular.$q.Promise.<gmfThemes.GmfTheme>} Promise.\n * @export\n */\nexports.prototype.getThemeObject = function(themeName) {\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfTheme?} The theme object for themeName, or null\n       *     if not found.\n       */\n    data => exports.findThemeByName(data.themes, themeName));\n};\n\n\n/**\n * Get an array of theme objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfTheme>>} Promise.\n * @export\n */\nexports.prototype.getThemesObject = function() {\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfTheme>} The themes object.\n       */\n    data => data.themes);\n};\n\n\n/**\n * Get an array of background layer objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfLayer>>} Promise.\n */\nexports.prototype.getBackgroundLayersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfLayer>} The background layers object.\n       */\n    data => data.background_layers\n  );\n};\n\n\n/**\n * Get the `ogcServers` object.\n * @return {angular.$q.Promise.<!gmfThemes.GmfOgcServers>} Promise.\n * @export\n */\nexports.prototype.getOgcServersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfOgcServers} The `ogcServers` object.\n       */\n    data => data.ogcServers);\n};\n\n\n/**\n * Returns a promise to check if one of the layers in the themes is editable.\n * @return {angular.$q.Promise.<boolean>} Promise.\n */\nexports.prototype.hasEditableLayers = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(this.hasEditableLayers_.bind(this));\n};\n\n\n/**\n * Returns if one of the layers in the themes is editable.\n * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service response.\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasEditableLayers_ = function(data) {\n  return data.themes.some((theme) => {\n    const hasEditableLayers = theme.children.some(this.hasNodeEditableLayers_.bind(this));\n    return hasEditableLayers;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Theme node\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasNodeEditableLayers_ = function(node) {\n  if (node.editable) {\n    return true;\n  }\n\n  let hasEditableLayers = false;\n  const children = node.children;\n  if (children && children.length) {\n    hasEditableLayers = children.some(this.hasNodeEditableLayers_.bind(this));\n  }\n  return hasEditableLayers;\n};\n\n\n/**\n * Get the snapping configuration object from a Layertree controller\n * @param {gmfThemes.GmfLayer} node Layer node from the theme.\n * @return {?gmfThemes.GmfSnappingConfig} Snapping configuration, if found.\n * @export\n */\nexports.getSnappingConfig = function(node) {\n  const config = (node.metadata && node.metadata.snappingConfig !== undefined) ?\n    node.metadata.snappingConfig : null;\n  return config;\n};\n\n\n/**\n * Get the maximal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a maxResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the max resolution or undefined if any.\n */\nexports.getNodeMaxResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let maxResolution = gmfLayer.maxResolutionHint;\n  if (maxResolution === undefined && metadata !== undefined) {\n    maxResolution = metadata.maxResolution;\n  }\n  return maxResolution;\n};\n\n\n/**\n * Get the minimal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the min resolution or undefined if any.\n */\nexports.getNodeMinResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let minResolution = gmfLayer.minResolutionHint;\n  if (minResolution === undefined && metadata !== undefined) {\n    minResolution = metadata.minResolution;\n  }\n  return minResolution;\n};\n\n\n/**\n * @param {number=} opt_roleId The role id to send in the request.\n * Load themes from the \"themes\" service.\n * @export\n */\nexports.prototype.loadThemes = function(opt_roleId) {\n\n  googAsserts.assert(this.treeUrl_, 'gmfTreeUrl should be defined.');\n\n  if (this.loaded) {\n    // reload the themes\n    this.deferred_ = this.$q_.defer();\n    this.promise_ = this.deferred_.promise;\n    this.bgLayerPromise_ = null;\n    this.loaded = false;\n  }\n\n  this.$http_.get(this.treeUrl_, {\n    params: opt_roleId !== undefined ? {\n      'role': opt_roleId,\n      'cache_version': this.cacheVersion_\n    } : {\n      'cache_version': this.cacheVersion_\n    },\n    cache: false,\n    withCredentials: true\n  }).then((response) => {\n    if (response.data.errors.length != 0) {\n      const message = `The themes contain some errors:\\n${\n        response.data.errors.join('\\n')}`;\n      console.error(message);\n      if (this.ngeoLocation_ !== null && this.ngeoLocation_.hasParam('debug')) {\n        window.alert(message);\n      }\n    }\n    this.deferred_.resolve(response.data);\n    this.dispatchEvent('change');\n    this.loaded = true;\n  }, (response) => {\n    this.deferred_.reject(response);\n  });\n};\n\n\n/**\n * @enum {string}\n */\nexports.NodeType = {\n  MIXED_GROUP: 'MixedGroup',\n  NOT_MIXED_GROUP: 'NotMixedGroup',\n  WMTS: 'WMTS',\n  WMS: 'WMS'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemes', [\n  ngeoMapLayerHelper.module.name,\n]);\nexports.module.value('gmfThemesOptions', {});\nexports.module.service('gmfThemes', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/theme/Themes.js","/**\n * @module ngeo.layertree.Controller\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport * as olBase from 'ol/index.js';\nimport olEvents from 'ol/events.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\n\n/**\n * The controller for the \"tree node\" directive.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.Attributes} $attrs Attributes.\n * @constructor\n * @ngInject\n * @export\n * @struct\n * @ngdoc controller\n * @ngname NgeoLayertreeController\n */\nconst exports = function($scope, $rootScope, $attrs) {\n\n  const isRoot = $attrs['ngeoLayertreeNotroot'] === undefined;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isRoot = isRoot;\n\n  const nodeExpr = $attrs['ngeoLayertree'];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.properties = {};\n\n  /**\n   * @type {!string}\n   * @private\n   */\n  this.state_ = 'off';\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.node;\n\n  if (isRoot) {\n    $scope.$watch(nodeExpr, (newVal, oldVal) => {\n      this.node = newVal;\n    });\n  } else {\n    this.node = /** @type {!Object} */ ($scope.$eval(nodeExpr));\n    googAsserts.assert(this.node !== undefined);\n  }\n\n  const mapExpr = $attrs['ngeoLayertreeMap'];\n  const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assert(map !== undefined);\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.parent = $scope.$parent['layertreeCtrl'];\n\n  /**\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.children = [];\n\n  if (this.parent) {\n    this.parent.children.push(this);\n  }\n\n  $scope.$on('$destroy', () => {\n    if (this.parent) {\n      const index = this.parent.children.indexOf(this);\n      googAsserts.assert(index >= 0);\n      this.parent.children.splice(index, 1);\n    }\n  });\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.uid = olBase.getUid(this);\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.depth = isRoot ? 0 : this.parent.depth + 1;\n\n  // We set 'uid' and 'depth' in the scope as well to access the parent values\n  // in the inherited scopes. This is intended to be used in the javascript not\n  // in the templates.\n  $scope['uid'] = this.uid;\n  $scope['depth'] = this.depth;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = map;\n\n  let nodelayerExpr = $attrs['ngeoLayertreeNodelayer'];\n  if (nodelayerExpr === undefined) {\n    const nodelayerexprExpr = $attrs['ngeoLayertreeNodelayerexpr'];\n    const newNodelayerExpr = $scope.$eval(nodelayerexprExpr);\n    googAsserts.assertString(newNodelayerExpr);\n    nodelayerExpr = newNodelayerExpr;\n  }\n  googAsserts.assert(nodelayerExpr !== undefined);\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nodelayerExpr = nodelayerExpr;\n\n  /**\n   * @type {?ol.layer.Layer|ol.layer.Group}\n   * @export\n   */\n  this.layer = null;\n  if (!isRoot) {\n    const layer = $scope.$eval(nodelayerExpr, {'treeCtrl': this}) || null;\n    if (layer) {\n      googAsserts.assert(\n        layer instanceof olLayerLayer || layer instanceof olLayerGroup\n      );\n      this.layer = layer;\n    }\n  }\n\n  /**\n   * @type {?ngeo.datasource.DataSource}\n   * @private\n   */\n  this.dataSource_ = null;\n\n  if (this.layer) {\n    ngeoMiscDecorate.layerLoading(this.layer, $scope);\n    ngeoMiscDecorate.layer(this.layer);\n\n    olEvents.listen(this.layer, 'change:opacity', () => {\n      this.rootScope_.$broadcast('ngeo-layertree-opacity', this);\n    });\n  }\n\n  let listenersExpr = $attrs['ngeoLayertreeListeners'];\n  if (listenersExpr === undefined) {\n    const listenersexprExpr = $attrs['ngeoLayertreeListenersexpr'];\n    listenersExpr = $scope.$eval(listenersexprExpr);\n  }\n\n  if (listenersExpr !== undefined) {\n    googAsserts.assertString(listenersExpr);\n  }\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.listenersExpr = listenersExpr;\n\n  // Eval function to bind functions to this tree's events.\n  if (listenersExpr) {\n    $scope.$eval(listenersExpr, {'treeScope': $scope, 'treeCtrl': this});\n  }\n\n  $scope['layertreeCtrl'] = this;\n};\n\n\n/**\n * Return the current state.\n * @return {string} 'on', 'off', 'indeterminate'.\n * @export\n */\nexports.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * Set the state of this treeCtrl. Update its children with its value and then\n * ask its parent to refresh its state.\n * @param {string} state 'on' or 'off'.\n * @param {boolean=} opt_broadcast Broadcast.\n * @export\n */\nexports.prototype.setState = function(state, opt_broadcast) {\n  if (state === this.state_) {\n    return;\n  }\n  this.setStateInternal_(state);\n\n  // Ask to its parent to update it's state.\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n\n  const firstParents = this.isRoot ? this.children : [exports.getFirstParentTree(this)];\n\n  if (opt_broadcast === undefined || opt_broadcast) {\n    firstParents.forEach((firstParent) => {\n      this.rootScope_.$broadcast('ngeo-layertree-state', this, firstParent);\n    });\n  }\n};\n\n\n/**\n * @param {string} state 'on' or 'off'.\n */\nexports.prototype.setStateInternal_ = function(state) {\n  // Set the state\n  this.state_ = state === 'on' ? 'on' : 'off';\n  // Asks to each child to set its state;\n  this.children.forEach(function(child) {\n    child.setStateInternal_(this.state_);\n  }, this);\n};\n\n\n/**\n * Refresh the state of this treeCtrl based on it's children value. The call its\n * parent to do the same.\n * @public\n */\nexports.prototype.refreshState = function() {\n  const newState = this.getCalculateState();\n  if (this.state_ === newState) {\n    return;\n  }\n  this.state_ = newState;\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n};\n\n\n/**\n * Return the current state, calculate on all its children recursively.\n * @return {string} 'on', 'off' or 'indeterminate'.\n * @export\n */\nexports.prototype.getCalculateState = function() {\n  if (this.node.children === undefined) {\n    return this.state_;\n  }\n  let childState;\n  let previousChildState;\n  this.children.some((child) => {\n    childState = child.getCalculateState();\n    if (previousChildState) {\n      if (previousChildState !== childState) {\n        return childState = 'indeterminate';\n      }\n    }\n    previousChildState = childState;\n  });\n  return childState;\n};\n\n\n/**\n * @param {boolean|undefined} val Value.\n * @return {boolean|undefined} Value.\n * @export\n */\nexports.prototype.getSetActive = function(val) {\n  const layer = this.layer;\n  const map = this.map;\n  if (!layer) {\n    return;\n  }\n  if (val !== undefined) {\n    if (!val) {\n      map.removeLayer(layer);\n    } else {\n      map.addLayer(layer);\n    }\n  } else {\n    return map.getLayers().getArray().indexOf(layer) >= 0;\n  }\n};\n\n\n/**\n * @return {?ngeo.datasource.DataSource} dataSource The data source bound to\n *     this layer tree controller.\n * @export\n */\nexports.prototype.getDataSource = function() {\n  return this.dataSource_;\n};\n\n\n/**\n * @param {?ngeo.datasource.DataSource} dataSource Data source or null.\n * @export\n */\nexports.prototype.setDataSource = function(dataSource) {\n  this.dataSource_ = dataSource;\n};\n\n\n/**\n * Get the \"top level\" layertree (one of the first level child under the root\n * layertree). Can return itself.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} the top level layertree.\n * @public\n */\nexports.getFirstParentTree = function(treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisitorDecision = {\n  STOP: 'STOP',\n  SKIP: 'SKIP',\n  DESCEND: 'DESCEND'\n};\n\n\n/**\n * @typedef {\n *   function(ngeo.layertree.Controller): (!ngeo.layertree.Controller.VisitorDecision|undefined)\n * }\n */\nexports.Visitor;\n\n\n/**\n * Recursive method to traverse the layertree controller graph.\n * @param {ngeo.layertree.Controller.Visitor} visitor A visitor called for each node.\n * @return {boolean} whether to stop traversing.\n * @export\n */\nexports.prototype.traverseDepthFirst = function(visitor) {\n  // First visit the current controller\n  const decision = visitor(this) || exports.VisitorDecision.DESCEND;\n\n  switch (decision) {\n    case exports.VisitorDecision.STOP:\n      return true; // stop traversing\n    case exports.VisitorDecision.SKIP:\n      return false; // continue traversing but skip current branch\n    case exports.VisitorDecision.DESCEND:\n      for (let i = 0; i < this.children.length; ++i) {\n        const child = this.children[i];\n        const stop = child.traverseDepthFirst(visitor);\n        if (stop) {\n          return true; // stop traversing\n        }\n      }\n      return false; // continue traversing\n    default:\n      googAsserts.fail('Unhandled case');\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayertreeController', []);\nexports.module.controller('ngeoLayertreeController', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/layertree/Controller.js","/**\n * @module gmf.raster.RasterService\n */\nimport gmfBase from 'gmf/index.js';\n\n/**\n * The Raster service.\n * Uses the c2cgeoportal's raster to obtain different kinds of\n * information at a specific coordinate.\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular http service.\n * @param {string} gmfRasterUrl URL to a the c2cgeoportal raster service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfRaster\n */\nconst exports = function($http, gmfRasterUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = gmfRasterUrl;\n};\n\n\n/**\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {Object=} opt_params Optional parameters for the request.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getRaster = function(coordinate, opt_params) {\n\n  const params = opt_params || {};\n  params[exports.Param.X] = coordinate[0];\n  params[exports.Param.Y] = coordinate[1];\n\n  return this.$http_.get(this.url_, {\n    params\n  }).then(this.handleGetRaster_.bind(this));\n};\n\n\n/**\n * @param {angular.$http.Response} resp Ajax response.\n * @return {Object.<string, number>} The response object.\n * @private\n */\nexports.prototype.handleGetRaster_ = function(resp) {\n  return resp.data;\n};\n\n\n/**\n * @enum {string}\n */\nexports.Param = {\n  X: 'lon',\n  Y: 'lat'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfRaster', []);\nexports.module.service('gmfRaster', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/raster/RasterService.js","/**\n * @module ol/format/XMLFeature\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @constructor\n * @abstract\n * @extends {ol.format.Feature}\n */\nconst XMLFeature = function() {\n\n  /**\n   * @type {XMLSerializer}\n   * @private\n   */\n  this.xmlSerializer_ = new XMLSerializer();\n\n  FeatureFormat.call(this);\n};\n\ninherits(XMLFeature, FeatureFormat);\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.getType = function() {\n  return FormatType.XML;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeature = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromDocument = function(\n  doc, opt_options) {\n  const features = this.readFeaturesFromDocument(doc, opt_options);\n  if (features.length > 0) {\n    return features[0];\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeatures = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeaturesFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeaturesFromDocument(doc, opt_options);\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromDocument = function(\n  doc, opt_options) {\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  let n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(features, this.readFeaturesFromNode(n, opt_options));\n    }\n  }\n  return features;\n};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromNode = function(node, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readGeometry = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readGeometryFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readGeometryFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromDocument = function(doc, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readProjection = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readProjectionFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readProjectionFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readProjectionFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromDocument = function(doc) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @param {Node} node Node.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromNode = function(node) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeature = function(feature, opt_options) {\n  const node = this.writeFeatureNode(feature, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @protected\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeatureNode = function(feature, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeatures = function(features, opt_options) {\n  const node = this.writeFeaturesNode(features, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeaturesNode = function(features, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  const node = this.writeGeometryNode(geometry, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeGeometryNode = function(geometry, opt_options) {\n  return null; // not implemented\n};\nexport default XMLFeature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XMLFeature.js\n// module id = 29\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.statemanager.Service\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\n/**\n * Provides a service for managing the application state.\n * The application state is written to both the URL and the local storage.\n * @constructor\n * @struct\n * @param {!ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @param {!Array.<!RegExp>} ngeoUsedKeyRegexp regexp used to identify the used keys.\n * @ngInject\n */\nconst exports = function(ngeoLocation, ngeoUsedKeyRegexp) {\n\n  /**\n   * Object representing the application's initial state.\n   * @type {!Object.<string, string>}\n   */\n  this.initialState = {};\n\n  /**\n   * @type {!ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = ngeoLocation;\n\n\n  /**\n   * @type {!Array.<!RegExp>}\n   */\n  this.usedKeyRegexp = ngeoUsedKeyRegexp;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.useLocalStorage_;\n\n  this.setUseLocalStorage(false);\n\n  // Populate initialState with the application's initial state. The initial\n  // state is read from the location URL, or from the local storage if there\n  // is no state in the location URL.\n\n  const paramKeys = ngeoLocation.getParamKeys().filter(key => key != 'debug' && key != 'no_redirect');\n\n  if (paramKeys.length === 0) {\n    if (this.useLocalStorage_) {\n      for (const key in window.localStorage) {\n        googAsserts.assert(key);\n\n        this.usedKeyRegexp.some((keyRegexp) => {\n          if (key.match(keyRegexp)) {\n            const value = window.localStorage[key];\n            if (value !== undefined || value !== null) {\n              this.initialState[key] = value;\n            } else {\n              this.initialState[key] = '';\n            }\n            return true;\n          }\n        });\n      }\n    }\n  } else {\n    paramKeys.forEach((key) => {\n      this.usedKeyRegexp.some((keyRegexp) => {\n        if (key.match(keyRegexp)) {\n          const value = this.ngeoLocation.getParam(key);\n          if (value !== undefined) {\n            this.initialState[key] = value;\n            return true;\n          }\n        }\n      });\n    });\n  }\n};\n\n\n/**\n * @param {boolean} value Use localStorage\n * @return {boolean} localStorage will be used.\n */\nexports.prototype.setUseLocalStorage = function(value) {\n  this.useLocalStorage_ = value;\n\n  // check if localStorage is supported\n  if (this.useLocalStorage_) {\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n  }\n  return this.useLocalStorage_;\n};\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialValue = function(key) {\n  return this.initialState[key];\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialStringValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value;\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {number|undefined} State value.\n */\nexports.prototype.getInitialNumberValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return parseFloat(value);\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {boolean|undefined} State value.\n */\nexports.prototype.getInitialBooleanValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value === 'true';\n};\n\n\n/**\n * Update the application state with the values in `object`.\n * @param {!Object.<string, string>} object Object.\n */\nexports.prototype.updateState = function(object) {\n  this.ngeoLocation.updateParams(object);\n  if (this.useLocalStorage_) {\n    for (const key in object) {\n      googAsserts.assert(key);\n      const value = object[key];\n      googAsserts.assert(value !== undefined);\n      window.localStorage[key] = value;\n    }\n  }\n};\n\n\n/**\n * Delete a parameter\n * @param {string} key Key.\n */\nexports.prototype.deleteParam = function(key) {\n  this.ngeoLocation.deleteParam(key);\n  if (this.useLocalStorage_) {\n    delete window.localStorage[key];\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoStateManager', [\n  ngeoStatemanagerLocation.module.name\n]);\nexports.module.service('ngeoStateManager', exports);\nexports.module.value('ngeoUsedKeyRegexp', [new RegExp('.*')]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Service.js","/**\n * @module ngeo.datasource.OGC\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport olFormatGML2 from 'ol/format/GML2.js';\nimport olFormatGML3 from 'ol/format/GML3.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo.js';\n\n/**\n * @implements {ngeox.datasource.OGC}\n */\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source contains information of a single source of data that can\n   * show or fetch the data using an OGC server. Serveral OGC service types are\n   * supported by this data source: WMS, WMTS and even WFS.\n   *\n   * You can use the information stored within an OGC data source to do all\n   * sorts of things:\n   * - issue WMS/WFS queries\n   * - apply filter rules on it\n   * - create `ol.layer.Layer` objects using the WMS, WMTS or event WFS\n   *   information\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === DYNAMIC properties (i.e. that can change / be watched) ===\n\n    /**\n     * The dimensions configuration for the data source.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensionsConfig_ = options.dimensionsConfig || null;\n\n    /**\n     * The filter condition to apply to the filter rules (if any).\n     * @type {string}\n     * @private\n     */\n    this.filterCondition_ = options.filterCondition || ngeoFilterCondition.AND;\n\n    /**\n     * A list of filter rules to apply to this data source using the filter\n     * condition.\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @private\n     */\n    this.filterRules_ = options.filterRules || null;\n\n    /**\n     * Whether the data source is filtrable or not. When `null`, that means\n     * that we do not know if the data source if filtrable or not, yet. In\n     * that case, the value of the property needs to be determined from an\n     * external way.\n     * @type {?boolean}\n     * @private\n     */\n    this.filtrable_ = options.filtrable || null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the geometry from this data source can be copied to other data\n     * sources or not. Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.copyable_ = options.copyable === true;\n\n    /**\n     * A reference to the dimensions object.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensions_ = options.dimensions || null;\n\n    /**\n     * The name of the geometry attribute.\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = options.geometryName ||\n      exports.DEFAULT_GEOMETRY_NAME_;\n\n    /**\n     * The type of images to fetch by queries by the (WMS) or (WMTS) .\n     * @type {string}\n     * @private\n     */\n    this.ogcImageType_ = options.ogcImageType || 'image/png';\n\n    /**\n     * A list of layer definitions that are used by (WMS) and (WFS) queries.\n     * These are **not** used by the (WMTS) queries (the wmtsLayers is used\n     * by WMTS queries).\n     * @type {?Array.<!ngeox.datasource.OGCLayer>}\n     * @private\n     */\n    this.ogcLayers_ = options.ogcLayers || null;\n\n    /**\n     * The type of OGC server making the requests.\n     * @type {string}\n     * @private\n     */\n    this.ogcServerType_ = options.ogcServerType ||\n      exports.ServerType.MAPSERVER;\n\n    /**\n     * The type data source. Can be: 'WMS' or 'WMTS'.\n     * @type {string}\n     * @private\n     */\n    this.ogcType_ = options.ogcType || exports.Type.WMS;\n\n    /**\n     * Whether the geometry from this data source can be used to snap the\n     * geometry of features from other data sources that are being edited.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.snappable_ = options.snappable === true;\n\n    /**\n     * Determines whether external features can be snapped to the edges of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToEdges_ = options.snappingToEdges !== false;\n\n    /**\n     * Determines whether external features can be snapped to the vertice of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToVertice_ = options.snappingToVertice !== false;\n\n    /**\n     * The tolerance in pixels the snapping should occur. Defaults to `10`.\n     * @type {number}\n     * @private\n     */\n    this.snappingTolerance_ = options.snappingTolerance !== undefined ?\n      options.snappingTolerance : 10;\n\n    /**\n     * The name of the time attribute.\n     * @type {string|undefined}\n     * @private\n     */\n    this.timeAttributeName_ = options.timeAttributeName;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeLowerValue_ = options.timeLowerValue;\n\n    /**\n     * @type {?ngeox.TimeProperty}\n     * @private\n     */\n    this.timeProperty_ = options.timeProperty !== undefined ?\n      options.timeProperty : null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeUpperValue_ = options.timeUpperValue;\n\n    /**\n     * The feature namespace to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeatureNS_ = options.wfsFeatureNS ||\n      exports.WFSFeatureNS[this.ogcServerType_];\n\n    /**\n     * The feature prefix to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeaturePrefix_ = options.wfsFeaturePrefix ||\n      exports.WFSFeaturePrefix.FEATURE;\n\n    /**\n     * The OutputFormat to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsOutputFormat_ = options.wfsOutputFormat ||\n      exports.WFSOutputFormat.GML3;\n\n    /**\n     * The url to use for (WFS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wfsUrl_ = options.wfsUrl;\n\n    /**\n     * The InfoFormat to use with WMS requests.\n     * @type {string}\n     * @private\n     */\n    this.wmsInfoFormat_ = options.wmsInfoFormat ||\n      exports.WMSInfoFormat.GML;\n\n    /**\n     * Whether the (WMS) images returned by this data source\n     * should be single tiles or not.\n     * @type {boolean}\n     * @private\n     */\n    this.wmsIsSingleTile_ = options.wmsIsSingleTile === true;\n\n    /**\n     * The url to use for (WMS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmsUrl_ = options.wmsUrl;\n\n    /**\n     * The layer name to use for the (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsLayer_ = options.wmtsLayer;\n\n    /**\n     * The url to use for (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsUrl_ = options.wmtsUrl;\n\n\n    // === Calculated properties ===\n\n    // Get queryable ogc layer names\n    const layers = [];\n    if (this.queryable && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable) {\n          layers.push(ogcLayer.name);\n        }\n      }\n    }\n\n    let wfsFormat = null;\n    if (this.supportsWFS && layers.length) {\n      let format = undefined;\n      if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML3) {\n        format = new olFormatGML3();\n      } else if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML2) {\n        format = new olFormatGML2();\n      }\n      googAsserts.assert(format);\n      wfsFormat = new olFormatWFS({\n        featureNS: this.wfsFeatureNS,\n        featureType: layers,\n        gmlFormat: format\n      });\n    }\n\n    /**\n     * @type {?ol.format.WFS}\n     * @private\n     */\n    this.wfsFormat_ = wfsFormat;\n\n    let wmsFormat = null;\n    if (this.supportsWMS && layers.length) {\n      if (this.wmsInfoFormat === exports.WMSInfoFormat.GML) {\n        wmsFormat = new olFormatWMSGetFeatureInfo({\n          layers\n        });\n      }\n      // Todo, support more formats for WMS\n    }\n\n    /**\n     * @type {?ol.format.WMSGetFeatureInfo}\n     * @private\n     */\n    this.wmsFormat_ = wmsFormat;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {?ngeox.Dimensions} Dimensions configuration for this data source\n   * @export\n   */\n  get dimensionsConfig() {\n    return this.dimensionsConfig_;\n  }\n\n  /**\n   * @param {?ngeox.Dimensions} dimensionsConfig Dimensions configuration\n   * @export\n   */\n  set dimensionsConfig(dimensionsConfig) {\n    this.dimensionsConfig_ = dimensionsConfig;\n  }\n\n  /**\n   * @return {string} Filter condition\n   * @export\n   */\n  get filterCondition() {\n    return this.filterCondition_;\n  }\n\n  /**\n   * @param {string} filterCondition Filter condition\n   * @export\n   */\n  set filterCondition(filterCondition) {\n    this.filterCondition_ = filterCondition;\n  }\n\n  /**\n   * @return {?Array.<!ngeo.rule.Rule>} Filter rules\n   * @export\n   */\n  get filterRules() {\n    return this.filterRules_;\n  }\n\n  /**\n   * @param {?Array.<!ngeo.rule.Rule>} filterRules Filter rules\n   * @export\n   */\n  set filterRules(filterRules) {\n    this.filterRules_ = filterRules;\n  }\n\n  /**\n   * @return {number|undefined} Time lower value\n   * @export\n   */\n  get timeLowerValue() {\n    return this.timeLowerValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time lower value\n   * @export\n   */\n  set timeLowerValue(time) {\n    this.timeLowerValue_ = time;\n  }\n\n  /**\n   * @return {?ngeox.TimeRange} Time range value\n   * @export\n   */\n  get timeRangeValue() {\n    let range = null;\n    const lower = this.timeLowerValue;\n    const upper = this.timeUpperValue;\n    if (lower !== undefined) {\n      range = {\n        end: upper,\n        start: lower\n      };\n    }\n    return range;\n  }\n\n  /**\n   * @param {?ngeox.TimeRange} range Time range value\n   * @export\n   */\n  set timeRangeValue(range) {\n    if (range) {\n      this.timeUpperValue = range.end;\n      this.timeLowerValue = range.start;\n    } else {\n      this.timeUpperValue = undefined;\n      this.timeLowerValue = undefined;\n    }\n  }\n\n  /**\n   * @return {number|undefined} Time upper value\n   * @export\n   */\n  get timeUpperValue() {\n    return this.timeUpperValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time upper value\n   * @export\n   */\n  set timeUpperValue(time) {\n    this.timeUpperValue_ = time;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @inheritDoc\n   */\n  getAttributes() {\n    return super.attributes;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setAttributes(attributes) {\n    super.setAttributes(attributes);\n    this.updateGeometryNameFromAttributes_();\n  }\n\n  /**\n   * @return {boolean} Copyable\n   * @export\n   */\n  get copyable() {\n    return this.copyable_;\n  }\n\n  /**\n   * @return {?boolean} Filtrable.\n   * @export\n   */\n  get filtrable() {\n    return this.filtrable_;\n  }\n\n  /**\n   * @param {?boolean} filtrable Filtrable.\n   * @export\n   */\n  set filtrable(filtrable) {\n    this.filtrable_ = filtrable;\n  }\n\n  /**\n   * @return {string} Geometry name\n   * @export\n   */\n  get geometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * @return {string} OGC image type\n   * @export\n   */\n  get ogcImageType() {\n    return this.ogcImageType_;\n  }\n\n  /**\n   * @return {?Array.<!ngeox.datasource.OGCLayer>} OGC layers\n   * @export\n   */\n  get ogcLayers() {\n    return this.ogcLayers_;\n  }\n\n  /**\n   * @return {string} OGC server type\n   * @export\n   */\n  get ogcServerType() {\n    return this.ogcServerType_;\n  }\n\n  /**\n   * @return {string} OGC type\n   * @export\n   */\n  get ogcType() {\n    return this.ogcType_;\n  }\n\n  /**\n   * @return {boolean} Snappable\n   * @export\n   */\n  get snappable() {\n    return this.snappable_;\n  }\n\n  /**\n   * @return {boolean} Snapping to edges\n   * @export\n   */\n  get snappingToEdges() {\n    return this.snappingToEdges_;\n  }\n\n  /**\n   * @return {boolean} Snapping to vertices\n   * @export\n   */\n  get snappingToVertice() {\n    return this.snappingToVertice_;\n  }\n\n  /**\n   * @return {number} Snapping tolerance\n   * @export\n   */\n  get snappingTolerance() {\n    return this.snappingTolerance_;\n  }\n\n  /**\n   * @return {string|undefined} Time attribute name\n   * @export\n   */\n  get timeAttributeName() {\n    return this.timeAttributeName_;\n  }\n\n  /**\n   * @return {?ngeox.TimeProperty} Time property\n   * @export\n   */\n  get timeProperty() {\n    return this.timeProperty_;\n  }\n\n  /**\n   * @return {string} WFS feature namespace\n   * @export\n   */\n  get wfsFeatureNS() {\n    return this.wfsFeatureNS_;\n  }\n\n  /**\n   * @return {string} WFS feature prefix\n   * @export\n   */\n  get wfsFeaturePrefix() {\n    return this.wfsFeaturePrefix_;\n  }\n\n  /**\n   * @return {string} WFS output format\n   * @export\n   */\n  get wfsOutputFormat() {\n    return this.wfsOutputFormat_;\n  }\n\n  /**\n   * @export\n   * @return {string|undefined} WFS url\n   */\n  get wfsUrl() {\n    return this.wfsUrl_;\n  }\n\n  /**\n   * @return {string} WMS info format\n   * @export\n   */\n  get wmsInfoFormat() {\n    return this.wmsInfoFormat_;\n  }\n\n  /**\n   * @return {boolean} WMS is single tile\n   * @export\n   */\n  get wmsIsSingleTile() {\n    return this.wmsIsSingleTile_;\n  }\n\n  /**\n   * @return {string|undefined} WMS url\n   * @export\n   * @override\n   */\n  get wmsUrl() {\n    return this.wmsUrl_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS layer\n   * @export\n   */\n  get wmtsLayer() {\n    return this.wmtsLayer_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS url\n   * @export\n   * @override\n   */\n  get wmtsUrl() {\n    return this.wmtsUrl_;\n  }\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {!ngeox.DimensionsActive} Active dimensions\n   * @export\n   */\n  get activeDimensions() {\n    const active = {};\n    const dimensions = this.dimensions_ || {};\n    const config = this.dimensionsConfig || {};\n\n    for (const key in config) {\n      if (config[key] === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          active[key] = dimensions[key];\n        }\n      } else {\n        active[key] = config[key];\n      }\n    }\n\n    return active;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WFS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  get combinableForWFS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WMS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  get combinableForWMS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * Whether the data source is queryable or not. For an OGC data source to be\n   * queryable, it requires the support of WFS or WMS and at least one ogc\n   * layer to be querable.\n   * @export\n   */\n  get queryable() {\n    let queryable = false;\n    const supportsOGCQueries = this.supportsWMS || this.supportsWFS;\n    if (supportsOGCQueries && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable === true) {\n          queryable = true;\n          break;\n        }\n      }\n    }\n    return queryable;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WFS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWFS() {\n    return this.wfsUrl !== undefined;\n  }\n\n  /**\n   * To be able to do advanced operations on a data source, such as editing\n   * or filtering, a data source must be bound to 1 set of attributes.\n   * These attributes are the ones defined by an ogcLayer.  This means that\n   * to be considered to support having attributes defined, you either need\n   * to define them directly when creating the data source, or if you let\n   * the querent service get them for you using a WFS DescribeFeatureType\n   * request, the data source must have only 1 ogcLayer set, which must\n   * be queryable.\n   * @return {boolean} Supports attributes.\n   * @export\n   */\n  get supportsAttributes() {\n    return this.attributes !== null || (\n      this.supportsWFS &&\n      this.ogcLayers !== null &&\n      this.ogcLayers.length === 1 &&\n      this.ogcLayers[0].queryable === true\n    );\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WMS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWMS() {\n    return this.wmsUrl !== undefined;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WTMS requests\n   *     or not.\n   * @export\n   */\n  get supportsWMTS() {\n    return this.wmtsUrl !== undefined;\n  }\n\n  /**\n   * @return {?ol.format.WFS} WFS format.\n   * @export\n   */\n  get wfsFormat() {\n    return this.wfsFormat_;\n  }\n\n  /**\n   * @return {?ol.format.WMSGetFeatureInfo} WMS format.\n   * @export\n   */\n  get wmsFormat() {\n    return this.wmsFormat_;\n  }\n\n  // ============================\n  // === Other public methods ===\n  // ============================\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWFS(dataSource) {\n    return this.combinableForWFS && dataSource.combinableForWFS &&\n      this.supportsWFS && dataSource.supportsWFS &&\n      this.queryable && dataSource.queryable &&\n      this.wfsUrl === dataSource.wfsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWMS(dataSource) {\n    return this.combinableForWMS && dataSource.combinableForWMS &&\n      this.supportsWMS && dataSource.supportsWMS &&\n      this.queryable && dataSource.queryable &&\n      this.wmsUrl === dataSource.wmsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * Check if there's at least one OGC layer in range of a given resolution.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {boolean} At least one OGC layer is in range.\n   * @export\n   */\n  isAnyOGCLayerInRange(res, queryableOnly = false) {\n    return !!(this.getInRangeOGCLayerNames(res, queryableOnly).length);\n  }\n\n  /**\n   * Returns a list of OGC layer names that are in range of a given resolution.\n   * If there's no OGC layers defined, an empty array is returned.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names that are in range.\n   * @export\n   */\n  getInRangeOGCLayerNames(res, queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        const maxRes = ogcLayer.maxResolution;\n        const minRes = ogcLayer.minResolution;\n        const inMinRange = minRes === undefined || res >= minRes;\n        const inMaxRange = maxRes === undefined || res <= maxRes;\n        const inRange = inMinRange && inMaxRange;\n\n        if (inRange && (!queryableOnly || ogcLayer.queryable)) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the list of OGC layer names.\n   * @param {boolean} queryableOnly Whether to additionnally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names.\n   * @export\n   */\n  getOGCLayerNames(queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (!queryableOnly || ogcLayer.queryable) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the filtrable OGC layer name. This methods asserts that\n   * the name exists and is filtrable.\n   * @return {string} OGC layer name.\n   * @export\n   */\n  getFiltrableOGCLayerName() {\n    googAsserts.assert(this.filtrable);\n    const layerNames = this.getOGCLayerNames();\n    googAsserts.assert(layerNames.length === 1);\n    return layerNames[0];\n  }\n\n  /**\n   * Loop in the attributes of the data source. Update the `geometryName`\n   * property on the first geometry attribute found. If none is found, then\n   * the default geometry name is set.\n   * @private\n   */\n  updateGeometryNameFromAttributes_() {\n    let geometryName = exports.DEFAULT_GEOMETRY_NAME_;\n\n    if (this.attributes) {\n      for (const attribute of this.attributes) {\n        if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n          geometryName = attribute.name;\n          break;\n        }\n      }\n    }\n\n    this.geometryName_ = geometryName;\n  }\n\n  /**\n   * @param {!ngeox.datasource.OGC} dataSource Remote data source to\n   *     compare with this one.\n   * @return {boolean} Whether the two data sources have the same active\n   *     dimensions. If both have no dimensions, they are considered to be\n   *     sharing the same dimensions.\n   * @export\n   * @override\n   */\n  haveTheSameActiveDimensions(dataSource) {\n    let share = true;\n\n    const myActive = this.activeDimensions;\n    const itsActive = dataSource.activeDimensions;\n\n    for (const key in myActive) {\n      if (myActive[key] !== itsActive[key]) {\n        share = false;\n        break;\n      }\n    }\n\n    if (share) {\n      for (const key in itsActive) {\n        if (itsActive[key] !== myActive[key]) {\n          share = false;\n          break;\n        }\n      }\n    }\n\n    return share;\n  }\n};\n\n\n/**\n * Guess the type of OGC service from a given url. Default returned value is\n * WMS.\n * @param {string} url Url\n * @return {string} Guessed OGC service type.\n */\nexports.guessServiceTypeByUrl = function(url) {\n  let type;\n\n  if (/(wmts)/i.test(url)) {\n    type = exports.Type.WMTS;\n  } else {\n    type = exports.Type.WMS;\n  }\n\n  return type;\n};\n\n\n/**\n * Default name of the geometry attribute.\n * @type {string}\n * @private\n */\nexports.DEFAULT_GEOMETRY_NAME_ = 'the_geom';\n\n\n/**\n * Available OGC server types.\n * @enum {string}\n */\nexports.ServerType = {\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGISSERVER: 'qgisserver'\n};\n\n\n/**\n * Available OGC types.\n * @enum {string}\n */\nexports.Type = {\n  WMS: 'WMS',\n  WMTS: 'WMTS'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @const {Object.<string, string>}\n */\nexports.WFSFeatureNS = {\n  'geoserver': 'http://www.opengis.net/gml/3.2',\n  'mapserver': 'http://mapserver.gis.umn.edu/mapserver',\n  'qgisserver': 'http://www.qgis.org/gml'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @enum {string}\n */\nexports.WFSFeaturePrefix = {\n  FEATURE: 'feature'\n};\n\n\n/**\n * Available OutputFormat for WFS requests.\n * @enum {string}\n */\nexports.WFSOutputFormat = {\n  GML2: 'GML2',\n  GML3: 'GML3'\n};\n\n\n/**\n * Available InfoFormat for WMS requests.\n * @enum {string}\n */\nexports.WMSInfoFormat = {\n  GML: 'application/vnd.ogc.gml'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGC.js","/**\n * @module ngeo.format.AttributeType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   */\n  BOOLEAN: 'boolean',\n  /**\n   * @type {string}\n   */\n  DATE: 'date',\n  /**\n   * @type {string}\n   */\n  DATETIME: 'datetime',\n  /**\n   * @type {string}\n   */\n  TIME: 'time',\n  /**\n   * @type {string}\n   */\n  GEOMETRY: 'geometry',\n  /**\n   * @type {string}\n   */\n  NUMBER: 'number',\n  /**\n   * @type {string}\n   */\n  SELECT: 'select',\n  /**\n   * @type {string}\n   */\n  TEXT: 'text'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/AttributeType.js","/**\n * @module gmfapp.elevation\n */\nconst exports = {};\n\nimport './elevation.css';\nimport './common_dependencies.js';\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfMapComponent from 'gmf/map/component.js';\n\nimport gmfRasterModule from 'gmf/raster/module.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\n\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olSourceOSM from 'ol/source/OSM.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('gmfapp', [\n  gmfMapComponent.name,\n  gmfRasterModule.name,\n]);\n\n\nexports.module.value(\n  'gmfRasterUrl',\n  'https://geomapfish-demo.camptocamp.net/2.2/wsgi/raster');\n\nexports.constant('defaultTheme', 'Demo');\nexports.constant('angularLocaleScript', '../build/angular-locale_{{locale}}.js');\n\n\n/**\n * @constructor\n * @ngInject\n */\nexports.MainController = function() {\n  /**\n   * @type {Array.<string>}\n   * @export\n   */\n  this.elevationLayers = ['aster', 'srtm'];\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.selectedElevationLayer = this.elevationLayers[0];\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ],\n    view: new olView({\n      projection: 'EPSG:21781',\n      resolutions: [200, 100, 50, 20, 10, 5, 2.5, 2, 1, 0.5],\n      center: [600000, 200000],\n      zoom: 3\n    })\n  });\n};\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/examples/elevation.js","/**\n * @module gmf.raster.module\n */\nimport gmfRasterComponent from 'gmf/raster/component.js';\nimport gmfRasterRasterService from 'gmf/raster/RasterService.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfRasterModule', [\n  gmfRasterComponent.name,\n  gmfRasterRasterService.module.name,\n]);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/raster/module.js","/**\n * @module gmf.raster.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfRasterRasterService from 'gmf/raster/RasterService.js';\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport olEvents from 'ol/events.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfRasterComponent', [\n  gmfRasterRasterService.module.name,\n  ngeoMiscDebounce.name,\n]);\n\n\n/**\n * Provide a directive that set a value each 500ms with the elevation under the\n * mouse cursor position on the map. The value must come from the elevation\n * service of a c2cgeoportal server. The server's URL must be defined as\n * config value of the application.\n *\n * Example:\n *\n *      <span gmf-elevation\n *            gmf-elevation-active=\"elevationActive\"\n *            gmf-elevation-elevation=\"elevationValue\"\n *            gmf-elevation-layer=\"mainCtrl.elevationLayer\"\n *            gmf-elevation-map=\"::mainCtrl.map\">\n *            {{elevationValue | number:2}}m\n *      </span>\n *\n *\n * @htmlAttribute {boolean} gmf-elevation-active A boolean to set active or\n *     deactive the component.\n * @htmlAttribute {number} gmf-elevation-elevation The value to set with the\n *     elevation value.\n * @htmlAttribute {string} gmf-elevation-layer Elevation layer to use.\n * @htmlAttribute {ol.Map} gmf-elevation-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname gmfElevation\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    controller: 'GmfElevationController as ctrl',\n    bindToController: true,\n    scope: {\n      'active': '<gmfElevationActive',\n      'elevation': '=gmfElevationElevation',\n      'loading': '=?gmfElevationLoading',\n      'layer': '<gmfElevationLayer',\n      'map': '=gmfElevationMap'\n    },\n    link: (scope, element, attr) => {\n      const ctrl = scope['ctrl'];\n\n      // Watch active or not.\n      scope.$watch(() => ctrl.active, function(active) {\n        this.toggleActive_(active);\n      }.bind(ctrl));\n\n      // Watch current layer.\n      scope.$watch(() => ctrl.layer, function(layer) {\n        this.layer = layer;\n        this.elevation = null;\n      }.bind(ctrl));\n    }\n  };\n};\n\n\nexports.directive('gmfElevation', exports.component_);\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {ngeox.miscDebounce} ngeoDebounce Ngeo debounce factory\n * @param {gmf.raster.RasterService} gmfRaster Gmf Raster service\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfElevationController\n */\nexports.Controller_ = function($scope, ngeoDebounce, gmfRaster) {\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {gmf.raster.RasterService}\n   * @private\n   */\n  this.gmfRaster_ = gmfRaster;\n\n  /**\n   * @type {boolean}\n   */\n  this.active;\n\n  /**\n   * @type {!number|undefined}\n   * @export\n   */\n  this.elevation;\n\n  /**\n   * @type {string}\n   */\n  this.layer;\n\n  /**\n   * @type {ol.Map}\n   */\n  this.map;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.inViewport_ = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.loading = false;\n};\n\n/**\n * Active or deactive the request of the raster each 500 ms on pointermove.\n * @param {boolean} active true to make requests.\n * @private\n */\nexports.Controller_.prototype.toggleActive_ = function(active) {\n  this.elevation = undefined;\n  if (active) {\n    googAsserts.assert(this.listenerKeys_.length === 0);\n\n    // Moving the mouse clears previously displayed elevation\n    this.listenerKeys_.push(olEvents.listen(this.map, 'pointermove',\n      function(e) {\n        this.scope_.$apply(() => {\n          this.inViewport_ = true;\n          this.elevation = undefined;\n          this.loading = false;\n        });\n      }, this));\n\n    // Launch the elevation service request when the user stops moving the\n    // mouse for less short delay\n    this.listenerKeys_.push(olEvents.listen(this.map, 'pointermove',\n      this.ngeoDebounce_(this.pointerStop_.bind(this), 500, true)\n    ));\n\n    this.listenerKeys_.push(olEvents.listen(this.map.getViewport(), 'mouseout', () => {\n      this.scope_.$apply(() => {\n        this.elevation = undefined;\n        this.inViewport_ = false;\n        this.loading = false;\n      });\n    }));\n  } else {\n    this.elevation = undefined;\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_.length = 0;\n  }\n};\n\n\n/**\n * Request data from a raster from a MapBrowserPointerEvent's coordinates.\n * Called when the user stopped moving the mouse for 500ms.\n * @param {ol.MapBrowserPointerEvent} e An ol map browser pointer event.\n * @private\n */\nexports.Controller_.prototype.pointerStop_ = function(e) {\n  if (this.inViewport_) {\n    this.loading = true;\n    const params = {\n      'layers': this.layer\n    };\n    this.gmfRaster_.getRaster(e.coordinate, params).then(\n      this.getRasterSuccess_.bind(this),\n      this.getRasterError_.bind(this)\n    );\n  }\n};\n\n\n/**\n * @param {Object.<string, number>} resp Response of the get Raster service.\n * @private\n */\nexports.Controller_.prototype.getRasterSuccess_ = function(resp) {\n  googAsserts.assert(this.layer, 'A layer should be selected');\n  this.elevation = resp[this.layer];\n  this.loading = false;\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.getRasterError_ = function() {\n  console.error('Error on getting the raster.');\n  this.elevation = undefined;\n  this.loading = false;\n};\n\n\nexports.controller('GmfElevationController', exports.Controller_);\n\n\n/**\n * Provides a component which encapsulates the elevation component (see above)\n * in a button with dropdown menu to be included in a application directly.\n *\n * Example:\n *  <gmf-elevationwidget\n *      gmf-elevationwidget-map=\"::mainCtrl.map\"\n *      gmf-elevationwidget-layers=\"::mainCtrl.elevationLayers\"\n *      gmf-elevationwidget-active=\"mainCtrl.showInfobar\">\n *  </gmf-elevationwidget>\n *\n * @htmlAttribute {ol.Map} gmf-elevationwidget-map The map.\n * @htmlAttribute {Array.<string>} gmf-elevationwidget-layers The list of\n *     layers.\n * @htmlAttribute {boolean} gmf-elevationwidget-active Whether to activate the\n *     elevation component.\n *\n * @ngdoc component\n * @ngname gmfElevationwidget\n */\nexports.widgetComponent_ = {\n  controller: 'gmfElevationwidgetController as ctrl',\n  bindings: {\n    'map': '<gmfElevationwidgetMap',\n    'layers': '<gmfElevationwidgetLayers',\n    'active': '<gmfElevationwidgetActive'\n  },\n  templateUrl: () => `${gmfBase.baseModuleTemplateUrl}/raster/widgetComponent.html`\n};\nexports.component('gmfElevationwidget', exports.widgetComponent_);\n\n\n/**\n * @constructor\n * @private\n * @ngdoc controller\n */\nexports.WidgetController_ = function() {\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {!Array.<string>}\n   * @export\n   */\n  this.layers;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.selectedElevationLayer;\n};\n\n\nexports.WidgetController_.prototype.$onInit = function() {\n  this.selectedElevationLayer = this.layers[0];\n};\n\n\nexports.controller('gmfElevationwidgetController',\n  exports.WidgetController_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/raster/component.js","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes ol.format.GML2 and\n * ol.format.GML3.\n *\n * @constructor\n * @abstract\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n */\nconst GMLBase = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  /**\n   * @protected\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType = options.featureType;\n\n  /**\n   * @protected\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS = options.featureNS;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.srsName = options.srsName;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.schemaLocation = '';\n\n  /**\n   * @type {Object.<string, Object.<string, Object>>}\n   */\n  this.FEATURE_COLLECTION_PARSERS = {};\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS] = {\n    'featureMember': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal),\n    'featureMembers': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFeaturesInternal)\n  };\n\n  XMLFeature.call(this);\n};\n\ninherits(GMLBase, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nGMLBase.GMLNS = 'http://www.opengis.net/gml';\n\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc. The non-breaking\n * space (0xa0) is explicitly included as IE doesn't include it in its\n * definition of `\\s`.\n *\n * Information from `goog.string.isEmptyOrWhitespace`: https://github.com/google/closure-library/blob/e877b1e/closure/goog/string/string.js#L156-L160\n *\n * @const\n * @type {RegExp}\n * @private\n */\nGMLBase.ONLY_WHITESPACE_RE_ = /^[\\s\\xa0]*$/;\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature> | undefined} Features.\n */\nGMLBase.prototype.readFeaturesInternal = function(node, objectStack) {\n  const localName = node.localName;\n  let features = null;\n  if (localName == 'FeatureCollection') {\n    if (node.namespaceURI === 'http://www.opengis.net/wfs') {\n      features = _ol_xml_.pushParseAndPop([],\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    } else {\n      features = _ol_xml_.pushParseAndPop(null,\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    }\n  } else if (localName == 'featureMembers' || localName == 'featureMember') {\n    const context = objectStack[0];\n    let featureType = context['featureType'];\n    let featureNS = context['featureNS'];\n    let i, ii;\n    const prefix = 'p';\n    const defaultPrefix = 'p0';\n    if (!featureType && node.childNodes) {\n      featureType = [], featureNS = {};\n      for (i = 0, ii = node.childNodes.length; i < ii; ++i) {\n        const child = node.childNodes[i];\n        if (child.nodeType === 1) {\n          const ft = child.nodeName.split(':').pop();\n          if (featureType.indexOf(ft) === -1) {\n            let key = '';\n            let count = 0;\n            const uri = child.namespaceURI;\n            for (const candidate in featureNS) {\n              if (featureNS[candidate] === uri) {\n                key = candidate;\n                break;\n              }\n              ++count;\n            }\n            if (!key) {\n              key = prefix + count;\n              featureNS[key] = uri;\n            }\n            featureType.push(key + ':' + ft);\n          }\n        }\n      }\n      if (localName != 'featureMember') {\n        // recheck featureType for each featureMember\n        context['featureType'] = featureType;\n        context['featureNS'] = featureNS;\n      }\n    }\n    if (typeof featureNS === 'string') {\n      const ns = featureNS;\n      featureNS = {};\n      featureNS[defaultPrefix] = ns;\n    }\n    const parsersNS = {};\n    const featureTypes = Array.isArray(featureType) ? featureType : [featureType];\n    for (const p in featureNS) {\n      const parsers = {};\n      for (i = 0, ii = featureTypes.length; i < ii; ++i) {\n        const featurePrefix = featureTypes[i].indexOf(':') === -1 ?\n          defaultPrefix : featureTypes[i].split(':')[0];\n        if (featurePrefix === p) {\n          parsers[featureTypes[i].split(':').pop()] =\n              (localName == 'featureMembers') ?\n                _ol_xml_.makeArrayPusher(this.readFeatureElement, this) :\n                _ol_xml_.makeReplacer(this.readFeatureElement, this);\n        }\n      }\n      parsersNS[featureNS[p]] = parsers;\n    }\n    if (localName == 'featureMember') {\n      features = _ol_xml_.pushParseAndPop(undefined, parsersNS, node, objectStack);\n    } else {\n      features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack);\n    }\n  }\n  if (features === null) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Geometry|undefined} Geometry.\n */\nGMLBase.prototype.readGeometryElement = function(node, objectStack) {\n  const context = /** @type {Object} */ (objectStack[0]);\n  context['srsName'] = node.firstElementChild.getAttribute('srsName');\n  context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\n  /** @type {ol.geom.Geometry} */\n  const geometry = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_PARSERS_, node, objectStack, this);\n  if (geometry) {\n    return (\n      /** @type {ol.geom.Geometry} */ transformWithOptions(geometry, false, context)\n    );\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature} Feature.\n */\nGMLBase.prototype.readFeatureElement = function(node, objectStack) {\n  let n;\n  const fid = node.getAttribute('fid') ||\n      _ol_xml_.getAttributeNS(node, GMLBase.GMLNS, 'id');\n  const values = {};\n  let geometryName;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    // Assume attribute elements have one child node and that the child\n    // is a text or CDATA node (to be treated as text).\n    // Otherwise assume it is a geometry node.\n    if (n.childNodes.length === 0 ||\n        (n.childNodes.length === 1 &&\n        (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\n      let value = _ol_xml_.getAllTextContent(n, false);\n      if (GMLBase.ONLY_WHITESPACE_RE_.test(value)) {\n        value = undefined;\n      }\n      values[localName] = value;\n    } else {\n      // boundedBy is an extent and must not be considered as a geometry\n      if (localName !== 'boundedBy') {\n        geometryName = localName;\n      }\n      values[localName] = this.readGeometryElement(n, objectStack);\n    }\n  }\n  const feature = new Feature(values);\n  if (geometryName) {\n    feature.setGeometryName(geometryName);\n  }\n  if (fid) {\n    feature.setId(fid);\n  }\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Point|undefined} Point.\n */\nGMLBase.prototype.readPoint = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return point;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPoint|undefined} MultiPoint.\n */\nGMLBase.prototype.readMultiPoint = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOINT_PARSERS_, node, objectStack, this);\n  if (coordinates) {\n    return new MultiPoint(coordinates);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGMLBase.prototype.readMultiLineString = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTILINESTRING_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGMLBase.prototype.readMultiPolygon = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTIPOLYGON_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.pointMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POINTMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.lineStringMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.LINESTRINGMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.polygonMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POLYGONMEMBER_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGMLBase.prototype.readLineString = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} LinearRing flat coordinates.\n */\nGMLBase.prototype.readFlatLinearRing_ = function(node, objectStack) {\n  const ring = _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n  if (ring) {\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LinearRing|undefined} LinearRing.\n */\nGMLBase.prototype.readLinearRing = function(node, objectStack) {\n  const flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const ring = new LinearRing(null);\n    ring.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGMLBase.prototype.readPolygon = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nGMLBase.prototype.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOINT_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_),\n    'pointMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_),\n    'lineStringMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_),\n    'polygonMembers': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POINTMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readFlatCoordinatesFromNode_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readPolygon)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @protected\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readFlatLinearRing_)\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readGeometryFromNode = function(node, opt_options) {\n  const geometry = this.readGeometryElement(node,\n    [this.getReadOptions(node, opt_options ? opt_options : {})]);\n  return geometry ? geometry : null;\n};\n\n\n/**\n * Read all features from a GML FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nGMLBase.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {\n    featureType: this.featureType,\n    featureNS: this.featureNS\n  };\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  const features = this.readFeaturesInternal(node, [options]);\n  return features || [];\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readProjectionFromNode = function(node) {\n  return getProjection(this.srsName ? this.srsName :\n    node.firstElementChild.getAttribute('srsName'));\n};\nexport default GMLBase;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GMLBase.js\n// module id = 46\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.map.LayerHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Provides help functions that helps you to create and manage layers.\n * @param {angular.$q} $q Angular promises/deferred service.\n * @param {angular.$http} $http Angular http service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLayerHelper\n * @ngInject\n */\nconst exports = function($q, $http) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n};\n\n\n/**\n * @const\n */\nexports.GROUP_KEY = 'groupName';\n\n\n/**\n * @const\n */\nexports.REFRESH_PARAM = 'random';\n\n\n/**\n * Create and return a basic WMS layer with only a source URL and a comma\n * separated layers names (see {@link ol.source.ImageWMS}).\n *\n * @param {string} sourceURL The source URL.\n * @param {string} sourceLayersName A comma separated names string.\n * @param {string} sourceFormat Image format, for example 'image/png'.\n * @param {string=} opt_serverType Type of the server (\"mapserver\",\n *     \"geoserver\", \"qgisserver\", …).\n * @param {string=} opt_time time parameter for layer queryable by time/periode\n * @param {Object.<string, string>=} opt_params WMS parameters.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayer = function(sourceURL,\n  sourceLayersName, sourceFormat, opt_serverType, opt_time, opt_params, opt_crossOrigin) {\n\n  const params = {\n    'FORMAT': sourceFormat,\n    'LAYERS': sourceLayersName\n  };\n  let olServerType;\n  if (opt_time) {\n    params['TIME'] = opt_time;\n  }\n  if (opt_serverType) {\n    params['SERVERTYPE'] = opt_serverType;\n    // OpenLayers expects 'qgis' insteads of 'qgisserver'\n    olServerType = opt_serverType.replace('qgisserver', 'qgis');\n  }\n  const source = new olSourceImageWMS({\n    url: sourceURL,\n    params: params,\n    serverType: olServerType,\n    crossOrigin: opt_crossOrigin\n  });\n  if (opt_params) {\n    source.updateParams(opt_params);\n  }\n\n  return new olLayerImage({source});\n};\n\n\n/**\n * Create and return a basic WMS layer using an OGC data source.\n *\n * @param {ngeo.datasource.OGC} dataSource OGC data source.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayerFromDataSource = function(\n  dataSource, opt_crossOrigin\n) {\n  const url = dataSource.wmsUrl;\n  googAsserts.assert(url);\n\n  const layerNames = dataSource.getOGCLayerNames().join(',');\n  const serverType = dataSource.ogcServerType;\n  const imageType = dataSource.ogcImageType;\n\n  // (1) Layer creation\n  const layer = this.createBasicWMSLayer(\n    url,\n    layerNames,\n    imageType,\n    serverType,\n    undefined,\n    undefined,\n    opt_crossOrigin\n  );\n\n  // (2) Manage visibility\n  layer.setVisible(dataSource.visible);\n\n  // (3) Reference to the data source\n  layer.set('querySourceIds', [dataSource.id]);\n\n  return layer;\n};\n\n\n/**\n * Create and return a promise that provides a WMTS layer with source on\n * success, no layer else.\n * The WMTS layer source will be configured by the capabilities that are\n * loaded from the given capabilitiesUrl.\n * The style object described in the capabilities for this layer will be added\n * as key 'capabilitiesStyles' as param of the new layer.\n * @param {string} capabilitiesURL The getCapabilities url.\n * @param {string} layerName The name of the layer.\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {angular.$q.Promise.<ol.layer.Tile>} A Promise with a layer (with source) on success,\n *     no layer else.\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilitites = function(capabilitiesURL, layerName, opt_dimensions) {\n  const parser = new olFormatWMTSCapabilities();\n  const layer = new olLayerTile({\n    preload: Infinity\n  });\n  const $q = this.$q_;\n\n  return this.$http_.get(capabilitiesURL, {cache: true}).then((response) => {\n    let result;\n    if (response.data) {\n      result = parser.read(response.data);\n    }\n    if (result) {\n      const options = olSourceWMTS.optionsFromCapabilities(result, {\n        crossOrigin: 'anonymous',\n        layer: layerName\n      });\n      googAsserts.assert(options);\n      const source = new olSourceWMTS(/** @type {olx.source.WMTSOptions} */ (options));\n      if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n        source.updateDimensions(opt_dimensions);\n      }\n      layer.setSource(source);\n\n      // Add styles from capabilities as param of the layer\n      const layers = result['Contents']['Layer'];\n      const l = olArray.find(layers, (elt, index, array) => elt['Identifier'] == layerName);\n      layer.set('capabilitiesStyles', l['Style']);\n\n      return $q.resolve(layer);\n    }\n    return $q.reject(`Failed to get WMTS capabilities from ${capabilitiesURL}`);\n  });\n};\n\n\n/**\n * Create and return a WMTS layer using a formatted capabilities response\n * and a capability layer.\n *\n * @param {!Object} capabilities The complete capabilities object of the service\n * @param {!Object} layerCap The layer capability object\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {!ol.layer.Tile} WMTS layer\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilititesObj = function(\n  capabilities, layerCap, opt_dimensions\n) {\n\n  const options = olSourceWMTS.optionsFromCapabilities(capabilities, {\n    crossOrigin: 'anonymous',\n    layer: layerCap['Identifier']\n  });\n\n  googAsserts.assert(options);\n  const source = new olSourceWMTS(\n    /** @type {olx.source.WMTSOptions} */ (options));\n\n  if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n    source.updateDimensions(opt_dimensions);\n  }\n\n  return new olLayerTile({\n    'capabilitiesStyles': layerCap['Style'],\n    preload: Infinity,\n    source: source\n  });\n};\n\n\n/**\n * Create and return an ol.layer.Group. You can pass a collection of layers to\n * directly add them in the returned group.\n * @param {ol.Collection.<ol.layer.Base>=} opt_layers The layer to add to the\n * returned Group.\n * @return {ol.layer.Group} Layer group.\n * @export\n */\nexports.prototype.createBasicGroup = function(opt_layers) {\n  const group = new olLayerGroup();\n  if (opt_layers) {\n    group.setLayers(opt_layers);\n  }\n  return group;\n};\n\n\n/**\n * Retrieve (or create if it doesn't exist) and return a group of layer from\n * the base array of layers of a map. The given name is used as unique\n * identifier. If the group is created, it will be automatically added to\n * the map.\n * @param {ol.Map} map A map.\n * @param {string} groupName The name of the group.\n * @return {ol.layer.Group} The group corresponding to the given name.\n * @export\n */\nexports.prototype.getGroupFromMap = function(map, groupName) {\n  const groups = map.getLayerGroup().getLayers();\n  let group;\n  groups.getArray().some((existingGroup) => {\n    if (existingGroup.get(exports.GROUP_KEY) === groupName) {\n      group = /** @type {ol.layer.Group} */ (existingGroup);\n      return true;\n    } else {\n      return false;\n    }\n  });\n  if (!group) {\n    group = this.createBasicGroup();\n    group.set(exports.GROUP_KEY, groupName);\n    map.addLayer(group);\n  }\n  return group;\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @export\n */\nexports.prototype.getFlatLayers = function(layer) {\n  return this.getFlatLayers_(layer, []);\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @param {Array.<ol.layer.Base>} array An array to add layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @private\n */\nexports.prototype.getFlatLayers_ = function(layer, array) {\n  if (layer instanceof olLayerGroup) {\n    const sublayers = layer.getLayers();\n    sublayers.forEach(function(l) {\n      this.getFlatLayers_(l, array);\n    }, this);\n  } else {\n    if (array.indexOf(layer) < 0) {\n      array.push(layer);\n    }\n  }\n  return array;\n};\n\n\n/**\n * Get a layer that has a `layerName` property equal to a given layer name from\n * an array of layers. If one of the layers in the array is a group, then the\n * layers contained in that group are searched as well.\n * @param {string} layerName The name of the layer we're looking for.\n * @param {Array.<ol.layer.Base>} layers Layers.\n * @return {?ol.layer.Base} Layer.\n * @export\n */\nexports.prototype.getLayerByName = function(layerName, layers) {\n  let found = null;\n  layers.some(function(layer) {\n    if (layer instanceof olLayerGroup) {\n      const sublayers = layer.getLayers().getArray();\n      found = this.getLayerByName(layerName, sublayers);\n    } else if (layer.get('layerNodeName') === layerName) {\n      found = layer;\n    }\n    return !!found;\n  }, this);\n\n  return found;\n};\n\n\n/**\n * Get the WMTS legend URL for the given layer.\n * @param {ol.layer.Tile} layer Tile layer as returned by the\n * ngeo layerHelper service.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMTSLegendURL = function(layer) {\n  // FIXME case of multiple styles ?  case of multiple legendUrl ?\n  let url;\n  const styles = layer.get('capabilitiesStyles');\n  if (styles !== undefined) {\n    const legendURL = styles[0]['legendURL'];\n    if (legendURL !== undefined) {\n      url = legendURL[0]['href'];\n    }\n  }\n  return url;\n};\n\n\n/**\n * Get the WMS legend URL for the given node.\n * @param {string|undefined} url The base url of the wms service.\n * @param {string} layerName The name of a wms layer.\n * @param {number=} opt_scale A scale.\n * @param {string=} opt_legendRule rule parameters to add to the returned URL.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMSLegendURL = function(url,\n  layerName, opt_scale, opt_legendRule) {\n  if (!url) {\n    return undefined;\n  }\n  const queryString = {\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'SERVICE': 'WMS',\n    'VERSION': '1.1.1',\n    'REQUEST': 'GetLegendGraphic',\n    'LAYER': layerName\n  };\n  if (opt_scale !== undefined) {\n    queryString['SCALE'] = opt_scale;\n  }\n  if (opt_legendRule !== undefined) {\n    queryString['RULE'] = opt_legendRule;\n  }\n  return olUri.appendParams(url, queryString);\n};\n\n\n/**\n * Returns if this layer is visible at the current resolution.\n * @param {ol.layer.Base} layer Layer.\n * @param {ol.Map} map Map.\n * @return {boolean} Is the layer currently visible?\n */\nexports.prototype.isLayerVisible = function(layer, map) {\n  if (!layer.getVisible()) {\n    return false;\n  }\n\n  const currentResolution = map.getView().getResolution();\n  return currentResolution > layer.getMinResolution() &&\n      currentResolution < layer.getMaxResolution();\n};\n\n\n/**\n * Force a WMS layer to refresh using a random value.\n * @param {ol.layer.Image|ol.layer.Tile} layer Layer to refresh.\n */\nexports.prototype.refreshWMSLayer = function(layer) {\n  const source_ = layer.getSource();\n  googAsserts.assert(\n    source_ instanceof olSourceImageWMS ||\n    source_ instanceof olSourceTileWMS\n  );\n  const source = /** @type {ol.source.ImageWMS|ol.source.TileWMS} */ (source_);\n  const params = source.getParams();\n  params[exports.REFRESH_PARAM] = Math.random();\n  source.updateParams(params);\n};\n\n\n/**\n * Update the LAYERS parameter of the source of the given WMS layer.\n * @param {ol.layer.Image} layer The WMS layer.\n * @param {string} names The names that will be used to set\n * the LAYERS parameter.\n * @param {string=} opt_time The start\n * and optionally the end datetime (for time range selection) selected by user\n * in a ISO-8601 string datetime or time interval format\n * @export\n */\nexports.prototype.updateWMSLayerState = function(layer, names, opt_time) {\n  // Don't send layer without parameters, hide layer instead;\n  if (names.length <= 0) {\n    layer.setVisible(false);\n  } else {\n    layer.setVisible(true);\n    const source = /** @type {ol.source.ImageWMS} */ (layer.getSource());\n    if (opt_time) {\n      source.updateParams({'LAYERS': names, 'TIME': opt_time});\n    } else {\n      source.updateParams({'LAYERS': names});\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Image} layer The WMS layer.\n * @return {Array.<number>|undefined} List of query source ids, a.k.a.\n *     the data source ids this layer is composed of.\n * @export\n */\nexports.prototype.getQuerySourceIds = function(layer) {\n  return /** @type {Array.<number>|undefined} */ (\n    layer.get('querySourceIds'));\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayerHelper', []);\nexports.module.service('ngeoLayerHelper', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/LayerHelper.js","/**\n * @module gmf.layertree.TreeManager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *     let module = angular.module('app');\n *     module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @struct\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.$injector} $injector Angular injector service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($timeout, $injector, gettextCatalog, ngeoLayerHelper,\n  ngeoNotification, gmfThemes, ngeoStateManager) {\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {angular.$injector}\n   * @private\n   */\n  this.$injector_ = $injector;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.message.Notification}\n   * @private\n   */\n  this.ngeoNotification_ = ngeoNotification;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * The root node and its children used to generate the layertree (with the\n   * same ordre).\n   * @type {gmfThemes.GmfRootNode}\n   * @public\n   */\n  this.root = /** @type {gmfThemes.GmfRootNode} */ ({\n    children: []\n  });\n\n  /**\n   * The controller of the (unique) root layer tree.\n   * The array of top level layer trees is avaible through `rootCtrl.children`.\n   * The order doesn't match with the ordre of the displayed layertree.\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.rootCtrl = null;\n\n  /**\n   * Number of groups to add to the layertree during one single Angular\n   * digest loop.\n   * @type {number}\n   * @public\n   */\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  /**\n   * @type {Array.<gmfThemes.GmfGroup>}\n   * @private\n   */\n  this.groupsToAddInThisDigestLoop_ = [];\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promiseForGroupsToAddInThisDigestLoop_ = null;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n  olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n};\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * The themes could have been changed so it also call a refresh of the\n * layertree.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n\n  if (this.rootCtrl && this.rootCtrl.children) {\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      this.refreshFirstLevelGroups_(themes);\n    });\n  }\n};\n\n/**\n * Set some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme group.\n * @return {boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.setFirstLevelGroups = function(firstLevelGroups) {\n  this.root.children.length = 0;\n  this.ngeoStateManager_.deleteParam(gmfBase.PermalinkParam.TREE_GROUPS);\n  return this.addFirstLevelGroups(firstLevelGroups);\n};\n\n/**\n * Add some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme\n *     group.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called.\n * @return{boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.addFirstLevelGroups = function(firstLevelGroups,\n  opt_add, opt_silent) {\n  const groupNotAdded = [];\n\n  firstLevelGroups.slice().reverse().forEach((group) => {\n    if (!this.addFirstLevelGroup_(group)) {\n      groupNotAdded.push(group);\n    }\n  });\n  if (groupNotAdded.length > 0 && !opt_silent) {\n    this.notifyCantAddGroups_(groupNotAdded);\n  }\n\n  return groupNotAdded.length === 0;\n};\n\n\n/**\n * Update the application state with the list of first level groups in the tree\n * @param {Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n * @private\n */\nexports.prototype.updateTreeGroupsState_ = function(groups) {\n  const treeGroupsParam = {};\n  treeGroupsParam[gmfBase.PermalinkParam.TREE_GROUPS] = groups.map(node => node.name).join(',');\n  this.ngeoStateManager_.updateState(treeGroupsParam);\n  if (this.$injector_.has('gmfPermalink')) {\n    /** @type {gmf.permalink.Permalink} */(this.$injector_.get('gmfPermalink')).cleanParams(groups);\n  }\n};\n\n\n/**\n * Add a group as tree's children without consideration of this service 'mode'.\n * Add it only if it's not already in the tree.\n * @param {gmfThemes.GmfGroup} group The group to add.\n * @return {boolean} true if the group has been added.\n * @private\n */\nexports.prototype.addFirstLevelGroup_ = function(group) {\n  let alreadyAdded = false;\n  const groupID = group.id;\n  this.root.children.some((rootChild) => {\n    if (groupID === rootChild.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  this.groupsToAddInThisDigestLoop_.some((grp) => {\n    if (groupID === grp.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  if (alreadyAdded) {\n    return false;\n  }\n\n  // Add groups in the list of groups to add and be sure that the counter of\n  // groups to add is reset.\n  this.groupsToAddInThisDigestLoop_.push(group);\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  // Delete previous timeout promise if it exists to do this action only once.\n  if (this.promiseForGroupsToAddInThisDigestLoop_ !== null) {\n    this.$timeout_.cancel(this.promiseForGroupsToAddInThisDigestLoop_);\n  }\n\n  // Add the groups only when there is no more group to come during this digest\n  // loop. The purpose of this is to preserve a consistent order between the\n  // layertree (generated by a template) and the layers in the map.\n  this.promiseForGroupsToAddInThisDigestLoop_ = this.$timeout_(() => {\n    // Set the number of group to add.\n    this.numberOfGroupsToAddInThisDigestLoop = this.groupsToAddInThisDigestLoop_.length;\n    // Add each first-level-groups.\n    this.groupsToAddInThisDigestLoop_.forEach(function(grp) {\n      this.root.children.unshift(grp);\n    }, this);\n    //Update the permalink\n    this.updateTreeGroupsState_(this.root.children);\n    // Reset the groups and the promise state. Don't reset the\n    // numberOfGroupsToAddInThisDigestLoop, it must persist because the layers\n    // will be added into the map after that the layertree template is\n    // generated (so in the next angular loop).\n    this.groupsToAddInThisDigestLoop_.length = 0;\n    this.promiseForGroupsToAddInThisDigestLoop_ = null;\n  });\n\n  return true;\n};\n\n\n/**\n * Retrieve a group (first found) by its name and add in the tree. Do nothing\n * if any corresponding group is found.\n * @param {string} groupName Name of the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @export\n */\nexports.prototype.addGroupByName = function(groupName, opt_add) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByName(themes, groupName);\n    if (group) {\n      this.addFirstLevelGroups([group], opt_add, false);\n    }\n  });\n};\n\n\n/**\n * Retrieve a group by the name of a layer that is contained in this group\n * (first found). This group will be added in the tree. Do nothing if any\n * corresponding group is found.\n * @param {string} layerName Name of the layer inside the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called\n * @export\n */\nexports.prototype.addGroupByLayerName = function(layerName, opt_add, opt_silent) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByLayerNodeName(themes, layerName);\n    if (group) {\n      const groupAdded = this.addFirstLevelGroups([group], opt_add, opt_silent);\n      this.$timeout_(() => {\n        const treeCtrl = this.getTreeCtrlByNodeId(group.id);\n        if (!treeCtrl) {\n          console.warn('Tree controller not found, unable to add the group');\n          return;\n        }\n        let treeCtrlToActive;\n        treeCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.name === layerName) {\n            treeCtrlToActive = treeCtrl;\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n\n        // Deactive all layers in the group if it's not in the tree.\n        if (groupAdded)  {\n          treeCtrl.setState('off');\n        }\n\n        // Active it.\n        if (treeCtrlToActive) {\n          treeCtrlToActive.setState('on');\n        }\n      });\n    }\n  });\n};\n\n\n/**\n * Remove a group from this tree's children. The first group that is found (\n * based on its name) will be removed. If any is found, nothing will append.\n * @param {gmfThemes.GmfGroup} group The group to remove.\n * @export\n */\nexports.prototype.removeGroup = function(group) {\n  const children = this.root.children;\n  let index = 0, found = false;\n  children.some((child) => {\n    if (child.name === group.name) {\n      return found = true;\n    }\n    index++;\n  });\n  if (found) {\n    children.splice(index, 1);\n    this.updateTreeGroupsState_(children);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  while (this.root.children.length) {\n    this.removeGroup(this.root.children[0]);\n  }\n};\n\n\n/**\n * Clone a group node and recursively set all child node `isChecked` using\n * the given list of layer names.\n * @param {gmfThemes.GmfGroup} group The original group node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @return {gmfThemes.GmfGroup} Cloned node.\n * @private\n */\nexports.prototype.cloneGroupNode_ = function(group, names) {\n  const clone = /** @type {gmfThemes.GmfGroup} */ (olObj.assign({}, group));\n  this.toggleNodeCheck_(clone, names);\n  return clone;\n};\n\n\n/**\n * Set the child nodes metadata `isChecked` if its name is among the list of\n * given names. If a child node also has children, check those instead.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node The original node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @private\n */\nexports.prototype.toggleNodeCheck_ = function(node, names) {\n  if (!node.children) {\n    return;\n  }\n  node.children.forEach(function(childNode) {\n    if (childNode.children) {\n      this.toggleNodeCheck_(childNode, names);\n    } else if (childNode.metadata) {\n      childNode.metadata.isChecked = olArray.includes(names, childNode.name);\n    }\n  }, this);\n};\n\n\n/**\n * Display a notification that informs that the given groups are already in the\n * tree.\n * @param {Array.<gmfThemes.GmfGroup>} groups An array of groups that already in\n *   the tree.\n * @private\n */\nexports.prototype.notifyCantAddGroups_ = function(groups) {\n  const names = [];\n  const gettextCatalog = this.gettextCatalog_;\n  groups.forEach((group) => {\n    names.push(group.name);\n  });\n  const msg = (names.length < 2) ?\n    gettextCatalog.getString('group is already loaded.') :\n    gettextCatalog.getString('groups are already loaded.');\n  this.ngeoNotification_.notify({\n    msg: `${names.join(', ')} ${msg}`,\n    type: ngeoMessageMessage.Type.INFORMATION\n  });\n};\n\n\n/**\n * Get a treeCtrl based on it's node id.\n * @param {number} id the id of a GMFThemesGroup or a GMFThemesLeaf.\n * @return {ngeo.layertree.Controller?} treeCtrl The associated controller or null.\n * @public\n */\nexports.prototype.getTreeCtrlByNodeId = function(id) {\n  let correspondingTreeCtrl = null;\n  if (this.rootCtrl && this.rootCtrl.traverseDepthFirst) {\n    this.rootCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.id === id) {\n        correspondingTreeCtrl = treeCtrl;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  return correspondingTreeCtrl;\n};\n\n\n/**\n * Get the OGC server.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {gmfThemes.GmfOgcServer} The OGC server.\n */\nexports.prototype.getOgcServer = function(treeCtrl) {\n  if (treeCtrl.parent.node.mixed) {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n    googAsserts.assert(gmfLayerWMS.ogcServer);\n    return this.ogcServers_[gmfLayerWMS.ogcServer];\n  } else {\n    let firstLevelGroupCtrl = treeCtrl;\n    while (!firstLevelGroupCtrl.parent.isRoot) {\n      firstLevelGroupCtrl = firstLevelGroupCtrl.parent;\n    }\n    const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (firstLevelGroupCtrl.node);\n    googAsserts.assert(gmfGroup.ogcServer);\n    return this.ogcServers_[gmfGroup.ogcServer];\n  }\n};\n\n\n/**\n * Keep the state of each existing first-level-groups in the layertree then\n * remove it and recreate it with nodes that come from the new theme and\n * the corresponding saved state (when possible, otherwise, juste take the\n * corresponding new node).\n * FIXME: Currently doesn't save nor restore the opacity.\n * @param {Array.<gmfThemes.GmfTheme>} themes the array of themes to be based on.\n * @private\n */\nexports.prototype.refreshFirstLevelGroups_ = function(themes) {\n  const firstLevelGroupsFullState = {};\n\n  // Save state of each child\n  this.rootCtrl.children.map((treeCtrl) => {\n    const name = treeCtrl.node.name;\n    firstLevelGroupsFullState[name] = this.getFirstLevelGroupFullState_(treeCtrl);\n  });\n\n  // Get nodes and set their state\n  const nodesToRestore = [];\n  // Iterate on the root to keep the same order in the tree as before.\n  this.root.children.map((node) => {\n    const name = node.name;\n\n    // Find the right firstlevelgroup in the new theme.\n    const nodeToRestore = gmfThemeThemes.findGroupByName(themes, name);\n    if (nodeToRestore) {\n      // Restore state.\n      const fullState = firstLevelGroupsFullState[name];\n      if (fullState) {\n        this.setNodeMetadataFromFullState_(nodeToRestore, fullState);\n      }\n      nodesToRestore.push(nodeToRestore);\n    }\n  });\n\n  // Readd the firstlevelgroups.\n  this.setFirstLevelGroups(nodesToRestore);\n\n  // Wait that Angular has created the layetree, then update the permalink.\n  this.$timeout_(() => {\n    this.updateTreeGroupsState_(this.root.children);\n  });\n};\n\n\n/**\n * Return a gmfx.TreeManagerFullState that keeps the state of the given\n * treeCtrl including the state of its children.\n * @param {ngeo.layertree.Controller} treeCtrl the ngeo layertree controller to\n *     save.\n * @return {gmfx.TreeManagerFullState!} the fullState object.\n * @private\n */\nexports.prototype.getFirstLevelGroupFullState_ = function(treeCtrl) {\n  const children = {};\n  // Get the state of the treeCtrl children recursively.\n  treeCtrl.children.map((child) => {\n    children[child.node.name] = this.getFirstLevelGroupFullState_(child);\n  });\n\n  let isChecked, isExpanded, isLegendExpanded;\n  if (treeCtrl.children.length > 0) {\n    const nodeElement = $(`#gmf-layertree-layer-group-${treeCtrl.uid}`);\n    // Set isExpanded only in groups.\n    if (nodeElement) {\n      isExpanded = nodeElement.hasClass('in');\n    }\n  } else {\n    // Set state and isLegendExpanded only in leaves.\n    isChecked = treeCtrl.getState();\n    if (isChecked === 'on') {\n      isChecked = true;\n    } else if (isChecked === 'off') {\n      isChecked = false;\n    } else {\n      isChecked = undefined;\n    }\n    const legendElement = $(`#gmf-layertree-node-${treeCtrl.uid}-legend`);\n    if (legendElement) {\n      isLegendExpanded = legendElement.is(':visible');\n    }\n  }\n\n  return {\n    children,\n    isChecked,\n    isExpanded,\n    isLegendExpanded\n  };\n};\n\n\n/**\n * Set a node's metadata with the given fullState. Update also its children\n * recursively with the fullState children.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node to update.\n * @param {gmfx.TreeManagerFullState|undefined} fullState the fullState object\n *     to use.\n * @return {gmfThemes.GmfGroup|gmfThemes.GmfLayer} the node with modification.\n * @private\n */\nexports.prototype.setNodeMetadataFromFullState_ = function(node, fullState) {\n  if (!fullState) {\n    return node;\n  }\n\n  // Set the metadata of the node children recursively.\n  if (node.children) {\n    node.children.map((child) => {\n      this.setNodeMetadataFromFullState_(child, fullState.children[child.name]);\n    });\n  }\n\n  // Set the metadata with the fullState object informations.\n  const metadata = node.metadata;\n  metadata.isChecked = fullState.isChecked;\n  metadata.isExpanded = fullState.isExpanded;\n  metadata.isLegendExpanded = fullState.isLegendExpanded;\n\n  return node;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfTreeManager', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoStatemanagerService.module.name,\n]);\nexports.module.service('gmfTreeManager', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/layertree/TreeManager.js","/**\n * @module ol/format/XML\n */\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @constructor\n * @abstract\n * @struct\n */\nconst XML = function() {\n};\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Object} The parsed result.\n */\nXML.prototype.read = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @abstract\n * @param {Document} doc Document.\n * @return {Object} Object\n */\nXML.prototype.readFromDocument = function(doc) {};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @return {Object} Object\n */\nXML.prototype.readFromNode = function(node) {};\nexport default XML;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XML.js\n// module id = 50\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/format/GML2\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML2 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  this.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML2.schemaLocation_;\n\n};\n\ninherits(GML2, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML2.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML2.prototype.readFlatCoordinates_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = /** @type {ol.XmlNodeStackItem} */ (objectStack[0]);\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    if (proj) {\n      axisOrientation = proj.getAxisOrientation();\n    }\n  }\n  const coordsGroups = s.trim().split(/\\s+/);\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coordsGroups.length; i < ii; i++) {\n    const coords = coordsGroups[i].split(/,+/);\n    x = parseFloat(coords[0]);\n    y = parseFloat(coords[1]);\n    z = (coords.length === 3) ? parseFloat(coords[2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML2.prototype.readBox_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.BOX_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[1][3],\n    flatCoordinates[1][4]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeReplacer(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser_,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeArrayPusher(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Box': _ol_xml_.makeReplacer(GML2.prototype.readBox_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML2.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {string} namespaceURI XML namespace.\n * @returns {Node} coordinates node.\n * @private\n */\nGML2.prototype.createCoordinatesNode_ = function(namespaceURI) {\n  const coordinates = _ol_xml_.createElementNS(namespaceURI, 'coordinates');\n  coordinates.setAttribute('decimal', '.');\n  coordinates.setAttribute('cs', ',');\n  coordinates.setAttribute('ts', ' ');\n\n  return coordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCoordinates_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML2.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML2.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML2.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ',' + point[1] :\n    point[1] + ',' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ',' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  const point = geometry.getCoordinates();\n  const coord = this.getCoords_(point, srsName, hasZ);\n  XSD.writeStringTextNode(coordinates, coord);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML2.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  this.writeCoordinates_(coordinates, geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML2.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML2.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_),\n    'innerBoundaryIs': _ol_xml_.makeChildAppender(GML2.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML2.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML2.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\nexport default GML2;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML2.js\n// module id = 51\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.utils\n */\nconst exports = {};\nimport olEventsCondition from 'ol/events/condition.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n  }\n  return queryItem.join('&');\n};\n\n\n/**\n * Delete condition passed to the modify interaction\n * @param {ol.MapBrowserEvent} event Browser event.\n * @return {boolean} The result.\n */\nexports.deleteCondition = function(event) {\n  return olEventsCondition.noModifierKeys(event) && olEventsCondition.singleClick(event);\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","/**\n * @module ngeo.format.FeatureProperties\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ANGLE: 'a',\n  /**\n   * @type {string}\n   * @export\n   */\n  COLOR: 'c',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_CIRCLE: 'l',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_RECTANGLE: 'r',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_TEXT: 't',\n  /**\n   * @type {string}\n   * @export\n   */\n  NAME: 'n',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_LABEL: 'b',\n  /**\n   * @type {string}\n   * @export\n   */\n  OPACITY: 'o',\n  /**\n   * @type {number}\n   * @export\n   */\n  AZIMUT: 'z',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_MEASURE: 'm',\n  /**\n   * @type {string}\n   * @export\n   */\n  SIZE: 's',\n  /**\n   * @type {string}\n   * @export\n   */\n  STROKE: 'k'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/format/FeatureProperties.js","/**\n * @module ngeo.message.Message\n */\n/**\n * Abstract class for services that display messages.\n *\n * @constructor\n * @struct\n * @abstract\n */\nconst exports = function() {};\n\n\n/**\n * Show the message.\n *\n * @abstract\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.showMessage = function(message) {};\n\n\n/**\n * Show disclaimer message string or object or list of disclame message\n * strings or objects.\n *\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.show = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.showMessage, this);\n};\n\n\n/**\n * Display the given error message or list of error messages.\n *\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.error = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.ERROR));\n};\n\n\n/**\n * Display the given info message or list of info messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.info = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.INFORMATION));\n};\n\n\n/**\n * Display the given success message or list of success messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.success = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.SUCCESS));\n};\n\n\n/**\n * Display the given warning message or list of warning messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.warn = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.WARNING));\n};\n\n\n/**\n * Returns an array of message object from any given message string, list of\n * message strings, message object or list message objects. The type can be\n * overridden here as well OR defined (if the message(s) is/are string(s),\n * defaults to 'information').\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @param {string=} opt_type The type of message to override the messages with.\n * @return {Array.<ngeox.Message>} List of message objects.\n * @protected\n */\nexports.prototype.getMessageObjects = function(object, opt_type) {\n  const msgObjects = [];\n  let msgObject = null;\n  const defaultType = exports.Type.INFORMATION;\n\n  if (typeof object === 'string') {\n    msgObjects.push({\n      msg: object,\n      type: opt_type !== undefined ? opt_type : defaultType\n    });\n  } else if (Array.isArray(object)) {\n    object.forEach((msg) => {\n      if (typeof object === 'string') {\n        msgObject = {\n          msg: msg,\n          type: opt_type !== undefined ? opt_type : defaultType\n        };\n      } else {\n        msgObject = msg;\n        if (opt_type !== undefined) {\n          msgObject.type = opt_type;\n        }\n      }\n      msgObjects.push(msgObject);\n    }, this);\n  } else {\n    msgObject = object;\n    if (opt_type !== undefined) {\n      msgObject.type = opt_type;\n    }\n    if (msgObject.type === undefined) {\n      msgObject.type = defaultType;\n    }\n    msgObjects.push(msgObject);\n  }\n\n  return msgObjects;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Type = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR: 'error',\n  /**\n   * @type {string}\n   * @export\n   */\n  INFORMATION: 'information',\n  /**\n   * @type {string}\n   * @export\n   */\n  SUCCESS: 'success',\n  /**\n   * @type {string}\n   * @export\n   */\n  WARNING: 'warning'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Message.js","/**\n * @module ol/format/XLink\n */\nconst XLink = {};\n\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nXLink.readHref = function(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n};\nexport default XLink;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/XLink.js\n// module id = 60\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport _ol_ImageBase_ from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport _ol_events_ from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nconst _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/Image.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport _ol_Image_ from '../Image.js';\nimport {assert} from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport ImageSource from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nconst ImageWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : ImageSource.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\nImageWMS.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const extent = getForViewAndSize(coordinate, resolution, 0,\n    ImageWMS.GETFEATUREINFO_IMAGE_SIZE_);\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n    extent, ImageWMS.GETFEATUREINFO_IMAGE_SIZE_,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  const center = getCenter(extent);\n  const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  const viewExtent = getForViewAndSize(center, imageResolution, 0,\n    [viewWidth, viewHeight]);\n  const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  const requestExtent = getForViewAndSize(center, imageResolution, 0,\n    [requestWidth, requestHeight]);\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  const params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(\n  imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/ImageWMS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WFS\n */\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport GML2 from '../format/GML2.js';\nimport GML3 from '../format/GML3.js';\nimport GMLBase from '../format/GMLBase.js';\nimport _ol_format_filter_ from '../format/filter.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option if you want to read a WFS that contains GML2 (WFS 1.0.0).\n * Also see {@link ol.format.GMLBase} which is used by this format.\n *\n * @constructor\n * @param {olx.format.WFSOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n * @api\n */\nconst WFS = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType_ = options.featureType;\n\n  /**\n   * @private\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS_ = options.featureNS;\n\n  /**\n   * @private\n   * @type {ol.format.GMLBase}\n   */\n  this.gmlFormat_ = options.gmlFormat ?\n    options.gmlFormat : new GML3();\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.schemaLocation_ = options.schemaLocation ?\n    options.schemaLocation :\n    WFS.SCHEMA_LOCATIONS[WFS.DEFAULT_VERSION];\n\n  XMLFeature.call(this);\n};\n\ninherits(WFS, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FEATURE_PREFIX = 'feature';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.OGCNS = 'http://www.opengis.net/ogc';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.WFSNS = 'http://www.opengis.net/wfs';\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.FESNS = 'http://www.opengis.net/fes';\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nWFS.SCHEMA_LOCATIONS = {\n  '1.1.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.0.0/wfs.xsd'\n};\n\n\n/**\n * @const\n * @type {string}\n */\nWFS.DEFAULT_VERSION = '1.1.0';\n\n\n/**\n * @return {Array.<string>|string|undefined} featureType\n */\nWFS.prototype.getFeatureType = function() {\n  return this.featureType_;\n};\n\n\n/**\n * @param {Array.<string>|string|undefined} featureType Feature type(s) to parse.\n */\nWFS.prototype.setFeatureType = function(featureType) {\n  this.featureType_ = featureType;\n};\n\n\n/**\n * Read all features from a WFS FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\nWFS.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const context = /** @type {ol.XmlNodeStackItem} */ ({\n    'featureType': this.featureType_,\n    'featureNS': this.featureNS_\n  });\n  assign(context, this.getReadOptions(node, opt_options ? opt_options : {}));\n  const objectStack = [context];\n  this.gmlFormat_.FEATURE_COLLECTION_PARSERS[GMLBase.GMLNS][\n    'featureMember'] =\n      _ol_xml_.makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n  let features = _ol_xml_.pushParseAndPop([],\n    this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n    objectStack, this.gmlFormat_);\n  if (!features) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * Read transaction response of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n * @api\n */\nWFS.prototype.readTransactionResponse = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readTransactionResponseFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readTransactionResponseFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readTransactionResponseFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Read feature collection metadata of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n * @api\n */\nWFS.prototype.readFeatureCollectionMetadata = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureCollectionMetadataFromDocument(\n      /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureCollectionMetadataFromNode(\n      /** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = _ol_xml_.parse(source);\n    return this.readFeatureCollectionMetadataFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFeatureCollectionMetadataFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.FEATURE_COLLECTION_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': _ol_xml_.makeObjectPropertySetter(\n      GMLBase.prototype.readGeometryElement, 'bounds')\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromNode = function(node) {\n  const result = {};\n  const value = XSD.readNonNegativeIntegerString(\n    node.getAttribute('numberOfFeatures'));\n  result['numberOfFeatures'] = value;\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSFeatureCollectionMetadata} */ (result),\n    WFS.FEATURE_COLLECTION_PARSERS_, node, [], this.gmlFormat_);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_SUMMARY_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalUpdated': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'totalDeleted': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n * @private\n */\nWFS.readTransactionSummary_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, WFS.TRANSACTION_SUMMARY_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.OGC_FID_PARSERS_ = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': _ol_xml_.makeArrayPusher(function(node, objectStack) {\n      return node.getAttribute('fid');\n    })\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nWFS.fidParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(WFS.OGC_FID_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.INSERT_RESULTS_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Feature': WFS.fidParser_\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<string>|undefined} Insert results.\n * @private\n */\nWFS.readInsertResults_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    [], WFS.INSERT_RESULTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWFS.TRANSACTION_RESPONSE_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': _ol_xml_.makeObjectPropertySetter(\n      WFS.readTransactionSummary_, 'transactionSummary'),\n    'InsertResults': _ol_xml_.makeObjectPropertySetter(\n      WFS.readInsertResults_, 'insertIds')\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readTransactionResponseFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromNode = function(node) {\n  return _ol_xml_.pushParseAndPop(\n    /** @type {ol.WFSTransactionResponse} */({}),\n    WFS.TRANSACTION_RESPONSE_PARSERS_, node, []);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.QUERY_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFeature_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const gmlVersion = context['gmlVersion'];\n  const child = _ol_xml_.createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeOgcFidFilter_ = function(node, fid, objectStack) {\n  const filter = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', fid);\n  node.appendChild(filter);\n};\n\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @returns {string} The value of the typeName property.\n * @private\n */\nWFS.getTypeName_ = function(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix :\n    WFS.FEATURE_PREFIX;\n  const prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.indexOf(prefix) === 0) {\n    return featureType;\n  } else {\n    return prefix + featureType;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDelete_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 26); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeUpdate_ = function(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 27); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = WFS.getTypeName_(featurePrefix, featureType);\n  const geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n    featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    const keys = feature.getKeys();\n    const values = [];\n    for (let i = 0, ii = keys.length; i < ii; i++) {\n      const value = feature.get(keys[i]);\n      if (value !== undefined) {\n        let name = keys[i];\n        if (value instanceof Geometry) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */ (\n      {'gmlVersion': context['gmlVersion'], node: node,\n        'hasZ': context['hasZ'], 'srsName': context['srsName']}),\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Property'), values,\n    objectStack);\n    WFS.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeProperty_ = function(node, pair, objectStack) {\n  const name = _ol_xml_.createElementNS(WFS.WFSNS, 'Name');\n  const context = objectStack[objectStack.length - 1];\n  const gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  XSD.writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    const value = _ol_xml_.createElementNS(WFS.WFSNS, 'Value');\n    node.appendChild(value);\n    if (pair.value instanceof Geometry) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      } else {\n        GML3.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      }\n    } else {\n      XSD.writeStringTextNode(value, pair.value);\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}}\n *     nativeElement The native element.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNative_ = function(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', nativeElement.safeToIgnore);\n  }\n  if (nativeElement.value !== undefined) {\n    XSD.writeStringTextNode(node, nativeElement.value);\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.TRANSACTION_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Insert': _ol_xml_.makeChildAppender(WFS.writeFeature_),\n    'Update': _ol_xml_.makeChildAppender(WFS.writeUpdate_),\n    'Delete': _ol_xml_.makeChildAppender(WFS.writeDelete_),\n    'Property': _ol_xml_.makeChildAppender(WFS.writeProperty_),\n    'Native': _ol_xml_.makeChildAppender(WFS.writeNative_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} featureType Feature type.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeQuery_ = function(node, featureType, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const propertyNames = context['propertyNames'];\n  const srsName = context['srsName'];\n  let typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = WFS.getTypeName_(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  node.setAttribute('typeName', typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    _ol_xml_.setAttributeNS(node, WFS.XMLNS, 'xmlns:' + featurePrefix,\n      featureNS);\n  }\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.QUERY_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('PropertyName'), propertyNames,\n    objectStack);\n  const filter = context['filter'];\n  if (filter) {\n    const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n    node.appendChild(child);\n    WFS.writeFilterCondition_(child, filter, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Filter} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeFilterCondition_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(filter.getTagName()),\n    [filter], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Bbox} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeBboxFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.extent, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Contains} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeContainsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Intersects} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIntersectsFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Within} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeWithinFilter_ = function(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  WFS.writeOgcPropertyName_(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.During} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeDuringFilter_ = function(node, filter, objectStack) {\n\n  const valueReference = _ol_xml_.createElementNS(WFS.FESNS, 'ValueReference');\n  XSD.writeStringTextNode(valueReference, filter.propertyName);\n  node.appendChild(valueReference);\n\n  const timePeriod = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  const begin = _ol_xml_.createElementNS(GMLBase.GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  WFS.writeTimeInstant_(begin, filter.begin);\n\n  const end = _ol_xml_.createElementNS(GMLBase.GMLNS, 'end');\n  timePeriod.appendChild(end);\n  WFS.writeTimeInstant_(end, filter.end);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.LogicalNary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeLogicalFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const conditions = filter.conditions;\n  for (let i = 0, ii = conditions.length; i < ii; ++i) {\n    const condition = conditions[i];\n    _ol_xml_.pushSerializeAndPop(item,\n      WFS.GETFEATURE_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n      [condition], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Not} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeNotFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  const item = {node: node};\n  const condition = filter.condition;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n    [condition], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.ComparisonBinary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeComparisonFilter_ = function(node, filter, objectStack) {\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.expression);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsNull} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsNullFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsBetween} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsBetweenFilter_ = function(node, filter, objectStack) {\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n\n  const lowerBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  WFS.writeOgcLiteral_(lowerBoundary, '' + filter.lowerBoundary);\n\n  const upperBoundary = _ol_xml_.createElementNS(WFS.OGCNS, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  WFS.writeOgcLiteral_(upperBoundary, '' + filter.upperBoundary);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsLike} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeIsLikeFilter_ = function(node, filter, objectStack) {\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  WFS.writeOgcPropertyName_(node, filter.propertyName);\n  WFS.writeOgcLiteral_(node, '' + filter.pattern);\n};\n\n\n/**\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n * @private\n */\nWFS.writeOgcExpression_ = function(tagName, node, value) {\n  const property = _ol_xml_.createElementNS(WFS.OGCNS, tagName);\n  XSD.writeStringTextNode(property, value);\n  node.appendChild(property);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcPropertyName_ = function(node, value) {\n  WFS.writeOgcExpression_('PropertyName', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\nWFS.writeOgcLiteral_ = function(node, value) {\n  WFS.writeOgcExpression_('Literal', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n * @private\n */\nWFS.writeTimeInstant_ = function(node, time) {\n  const timeInstant = _ol_xml_.createElementNS(GMLBase.GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  const timePosition = _ol_xml_.createElementNS(GMLBase.GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  XSD.writeStringTextNode(timePosition, time);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nWFS.GETFEATURE_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Query': _ol_xml_.makeChildAppender(WFS.writeQuery_)\n  },\n  'http://www.opengis.net/ogc': {\n    'During': _ol_xml_.makeChildAppender(WFS.writeDuringFilter_),\n    'And': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Or': _ol_xml_.makeChildAppender(WFS.writeLogicalFilter_),\n    'Not': _ol_xml_.makeChildAppender(WFS.writeNotFilter_),\n    'BBOX': _ol_xml_.makeChildAppender(WFS.writeBboxFilter_),\n    'Contains': _ol_xml_.makeChildAppender(WFS.writeContainsFilter_),\n    'Intersects': _ol_xml_.makeChildAppender(WFS.writeIntersectsFilter_),\n    'Within': _ol_xml_.makeChildAppender(WFS.writeWithinFilter_),\n    'PropertyIsEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNotEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsLessThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThan': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsGreaterThanOrEqualTo': _ol_xml_.makeChildAppender(WFS.writeComparisonFilter_),\n    'PropertyIsNull': _ol_xml_.makeChildAppender(WFS.writeIsNullFilter_),\n    'PropertyIsBetween': _ol_xml_.makeChildAppender(WFS.writeIsBetweenFilter_),\n    'PropertyIsLike': _ol_xml_.makeChildAppender(WFS.writeIsLikeFilter_)\n  }\n};\n\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {ol.format.filter.Filter} filter Filter.\n * @return {Node} Result.\n * @api\n */\nWFS.writeFilter = function(filter) {\n  const child = _ol_xml_.createElementNS(WFS.OGCNS, 'Filter');\n  WFS.writeFilterCondition_(child, filter, []);\n  return child;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<string>} featureTypes Feature types.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nWFS.writeGetFeature_ = function(node, featureTypes, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const item = /** @type {ol.XmlNodeStackItem} */ (assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n    WFS.GETFEATURE_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Query'), featureTypes,\n    objectStack);\n};\n\n\n/**\n * Encode format as WFS `GetFeature` and return the Node.\n *\n * @param {olx.format.WFSWriteGetFeatureOptions} options Options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeGetFeature = function(options) {\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'GetFeature');\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', '1.1.0');\n  let filter;\n  if (options) {\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', options.maxFeatures);\n    }\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', options.startIndex);\n    }\n    if (options.count !== undefined) {\n      node.setAttribute('count', options.count);\n    }\n    filter = options.filter;\n    if (options.bbox) {\n      assert(options.geometryName,\n        12); // `options.geometryName` must also be provided when `options.bbox` is set\n      const bbox = _ol_format_filter_.bbox(\n        /** @type {string} */ (options.geometryName), options.bbox, options.srsName);\n      if (filter) {\n        // if bbox and filter are both set, combine the two into a single filter\n        filter = _ol_format_filter_.and(filter, bbox);\n      } else {\n        filter = bbox;\n      }\n    }\n  }\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation_);\n  /** @type {ol.XmlNodeStackItem} */\n  const context = {\n    node: node,\n    'srsName': options.srsName,\n    'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n    'featurePrefix': options.featurePrefix,\n    'geometryName': options.geometryName,\n    'filter': filter,\n    'propertyNames': options.propertyNames ? options.propertyNames : []\n  };\n  assert(Array.isArray(options.featureTypes),\n    11); // `options.featureTypes` should be an Array\n  WFS.writeGetFeature_(node, /** @type {!Array.<string>} */ (options.featureTypes), [context]);\n  return node;\n};\n\n\n/**\n * Encode format as WFS `Transaction` and return the Node.\n *\n * @param {Array.<ol.Feature>} inserts The features to insert.\n * @param {Array.<ol.Feature>} updates The features to update.\n * @param {Array.<ol.Feature>} deletes The features to delete.\n * @param {olx.format.WFSWriteTransactionOptions} options Write options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeTransaction = function(inserts, updates, deletes,\n  options) {\n  const objectStack = [];\n  const node = _ol_xml_.createElementNS(WFS.WFSNS, 'Transaction');\n  const version = options.version ?\n    options.version : WFS.DEFAULT_VERSION;\n  const gmlVersion = version === '1.0.0' ? 2 : 3;\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', version);\n  let baseObj;\n  /** @type {ol.XmlNodeStackItem} */\n  let obj;\n  if (options) {\n    baseObj = options.gmlOptions ? options.gmlOptions : {};\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n  }\n  const schemaLocation = WFS.SCHEMA_LOCATIONS[version];\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', schemaLocation);\n  const featurePrefix = options.featurePrefix ? options.featurePrefix : WFS.FEATURE_PREFIX;\n  if (inserts) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Insert'), inserts,\n      objectStack);\n  }\n  if (updates) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n      WFS.TRANSACTION_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Update'), updates,\n      objectStack);\n  }\n  if (deletes) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Delete'), deletes,\n    objectStack);\n  }\n  if (options.nativeElements) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    WFS.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Native'), options.nativeElements,\n    objectStack);\n  }\n  return node;\n};\n\n\n/**\n * Read the projection from a WFS source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {?ol.proj.Projection} Projection.\n * @api\n */\nWFS.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readProjectionFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromNode = function(node) {\n  if (node.firstElementChild &&\n      node.firstElementChild.firstElementChild) {\n    node = node.firstElementChild.firstElementChild;\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (!(n.childNodes.length === 0 ||\n          (n.childNodes.length === 1 &&\n          n.firstChild.nodeType === 3))) {\n        const objectStack = [{}];\n        this.gmlFormat_.readGeometryElement(n, objectStack);\n        return getProjection(objectStack.pop().srsName);\n      }\n    }\n  }\n\n  return null;\n};\nexport default WFS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WFS.js\n// module id = 62\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @type {string} Default WMS version.\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/common.js\n// module id = 66\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/WMSServerType.js\n// module id = 67\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.datasource.Group\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olCollection from 'ol/Collection.js';\n\nconst exports = class {\n\n  /**\n   * A Group data source combines multiple `ngeo.datasource.DataSource` objects.\n   * Its main purpose is to provide a calculated `visibilityState` property\n   * that can be used to determine if all its data source are all visible, all\n   * hidden or some are hidden and other visible.\n   *\n   * @struct\n   * @param {ngeox.datasource.GroupOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * @type {!ol.Collection.<!ngeo.datasource.DataSource>}\n     * @protected\n     */\n    this.dataSourcesCollection_ = new olCollection(options.dataSources);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.title_ = options.title;\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.dataSourcesCollection_.clear();\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSources() {\n    return this.dataSourcesCollection_.getArray();\n  }\n\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSourcesCollection() {\n    return this.dataSourcesCollection_;\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {string} Title\n   * @export\n   */\n  get title() {\n    return this.title_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {string} Visibility state\n   * @export\n   */\n  get visibilityState() {\n    let state;\n\n    for (const dataSource of this.dataSources) {\n      if (state === undefined) {\n        state = this.getDataSourceState(dataSource);\n      } else {\n        const otherState = this.getDataSourceState(dataSource);\n        if (otherState !== state) {\n          state = exports.VisibilityState.INDETERMINATE;\n        }\n      }\n      if (state === exports.VisibilityState.INDETERMINATE) {\n        break;\n      }\n    }\n\n    googAsserts.assertString(state);\n\n    return state;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source.\n   * @return {string} Visible state of a data source\n   * @export\n   */\n  getDataSourceState(dataSource) {\n    return dataSource.visible ?\n      exports.VisibilityState.ON :\n      exports.VisibilityState.OFF;\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to add.\n   * @export\n   */\n  addDataSource(dataSource) {\n    this.dataSourcesCollection_.push(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSourcesCollection_.remove(dataSource);\n  }\n\n  /**\n   * Update visible property of all data sources depending on the current\n   * visibility state:\n   *\n   * - state ON --> visible false\n   * - state OFF --> visible true\n   * - state IND. --> visible true\n   *\n   * @export\n   */\n  toggleVisibilityState() {\n    const visibleToSet =\n        this.visibilityState !== exports.VisibilityState.ON;\n    for (const dataSource of this.dataSources) {\n      if (dataSource.visible !== visibleToSet) {\n        dataSource.visible = visibleToSet;\n      }\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisibilityState = {\n  INDETERMINATE: 'indeterminate',\n  OFF: 'off',\n  ON: 'on'\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/Group.js","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nconst TileWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const params = options.params || {};\n\n  const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  let tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  const axisOrientation = projection.getAxisOrientation();\n  const bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    let tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = _ol_size_.toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/TileWMS.js\n// module id = 69\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ngeo.statemanager.Location\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides a service for interacting with the URL in the\n * browser address bar.\n *\n * WARNING: because of a bug in Angular this service is not compatible with\n * the $location service. This further means that service is not compatible\n * with the $anchorScroll and $route services, and with the ng-include and\n * ng-view directives (which are based on the $anchorScroll and $route\n * services). See <https://github.com/angular/angular.js/issues/1417>.\n *\n * This file also provides an ngeo.statemanager.Location.MockProvider function that you can\n * use to mock Angular's $location provider and make it possible to use both\n * ngeoLocation and ng-include.\n *\n *     app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * The ngeo Location type.\n *\n * See our live example: [../examples/permalink.html](../examples/permalink.html)\n *\n * @param {Location} location Location.\n * @param {History} history History.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLocation\n */\nconst exports = function(location, history) {\n  /**\n   * @type {History}\n   * @private\n   */\n  this.history_ = history;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.schema_ = location.protocol.substring(0, location.protocol.length - 1);\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.domain_ = location.hostname;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.port_ = location.port ? parseInt(location.port, 10) : undefined;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.path_ = location.pathname;\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.queryData_ = ngeoUtils.decodeQueryString(location.search);\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.fragment_ = ngeoUtils.decodeQueryString(location.hash);\n};\n\n\n/**\n * @param {History} history History.\n * @param {string} state State.\n */\nexports.replaceState = function(history, state) {\n  try {\n    history.replaceState(null, '', state);\n  } catch (error) {\n    // replaceState fails on some browser if the domain in the state\n    // is not the same as location.origin\n  }\n};\n\n\n/**\n * Get the location's current path.\n * @return {string|undefined} The path.\n * @export\n */\nexports.prototype.getPath = function() {\n  return this.path_;\n};\n\n\n/**\n * Get the location's URI as a string\n * @return {string} The URI.\n * @export\n */\nexports.prototype.getUriString = function() {\n  const out = [];\n\n  if (this.schema_) {\n    out.push(this.schema_, ':');\n  }\n\n  if (this.domain_ || this.schema_ === 'file') {\n    out.push('//');\n\n    out.push(this.domain_);\n\n    if (this.port_ !== undefined) {\n      out.push(':', String(this.port_));\n    }\n  }\n\n  if (this.path_) {\n    if (this.domain_ && this.path_.charAt(0) !== '/') {\n      out.push('/');\n    }\n    out.push(this.path_);\n  }\n\n  const encodedQueryData = ngeoUtils.encodeQueryString(this.queryData_);\n  if (encodedQueryData.length > 0) {\n    out.push('?', encodedQueryData);\n  }\n\n  const encodedFragment = ngeoUtils.encodeQueryString(this.fragment_);\n  if (encodedFragment.length > 0) {\n    out.push('#', encodedFragment);\n  }\n  return out.join('');\n};\n\n\n/**\n * Check if a param exists in the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasParam = function(key) {\n  return key in this.queryData_;\n};\n\n\n/**\n * Check if a param exists in the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasFragmentParam = function(key) {\n  return key in this.fragment_;\n};\n\n\n/**\n * Get a param in the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getParam = function(key) {\n  return this.queryData_[key];\n};\n\n\n/**\n * Get a param from the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParam = function(key) {\n  return this.fragment_[key];\n};\n\n\n/**\n * Get a param in the location's URI as integer. If the entry does not exist,\n * or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsInt = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get a param in the location's URI as a floating point number.\n * If the entry does not exist, or if the value can not be parsed,\n * `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsFloat = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsFloat = parseFloat(value);\n  return isNaN(valueAsFloat) ? undefined : valueAsFloat;\n};\n\n\n/**\n * Get a param from the fragment of the location's URI as integer. If the entry\n * does not exist, or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParamAsInt = function(key) {\n  const value = this.getFragmentParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeys = function() {\n  const keys = [];\n  for (const key in this.queryData_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeys = function() {\n  const keys = [];\n  for (const key in this.fragment_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI that start\n * with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.queryData_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI\n * that start with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.fragment_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Set or create a param in the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateParams = function(params) {\n  for (const key in params) {\n    this.queryData_[key] = params[key];\n  }\n};\n\n\n/**\n * Set or create a param in the fragment of the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateFragmentParams = function(params) {\n  for (const key in params) {\n    this.fragment_[key] = params[key];\n  }\n};\n\n\n/**\n * Delete a param in the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteParam = function(key) {\n  delete this.queryData_[key];\n};\n\n\n/**\n * Delete a param int the fragment of the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteFragmentParam = function(key) {\n  delete this.fragment_[key];\n};\n\n\n/**\n * Refresh the the location's URI.\n * @export\n */\nexports.prototype.refresh = function() {\n  exports.replaceState(this.history_, this.getUriString());\n};\n\n\n/**\n * Set a new path for this location.\n * @param {string} path Path.\n * @export\n */\nexports.prototype.setPath = function(path) {\n  this.path_ = path;\n};\n\n\n/**\n * The factory creating the ngeo Location service.\n *\n * @param {angular.Scope} $rootScope The root scope.\n * @param {angular.$window} $window Angular window service.\n * @return {ngeo.statemanager.Location} The ngeo location service.\n * @ngInject\n */\nexports.LocationFactory = function($rootScope, $window) {\n  const history = $window.history;\n  const service = new exports($window.location, $window.history);\n\n  let lastUri = service.getUriString();\n  $rootScope.$watch(() => {\n    const newUri = service.getUriString();\n    if (lastUri !== newUri) {\n      $rootScope.$evalAsync(() => {\n        lastUri = newUri;\n        if (history !== undefined && history.replaceState !== undefined) {\n          exports.replaceState(history, newUri);\n        }\n        $rootScope.$broadcast('ngeoLocationChange');\n      });\n    }\n  });\n\n  return service;\n};\n\n/**\n * A function that changes Angular's $location provider to avoid problem\n * when both ngeoLocation and $location are used in an application. This\n * is how you can use that function in an application:\n *\n * app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * @param {angular.$locationProvider} $locationProvider Angular location\n *     provider.\n * @ngInject\n */\nexports.MockProvider = function($locationProvider) {\n  /**\n   * @return {angular.$location} Mock object for Angular location service.\n   */\n  $locationProvider['$get'] = function() {\n    const locationMock = /** @type {angular.$location} */ ({\n      /**\n       * @return {string} Absolute URL.\n       */\n      absUrl() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Hash.\n       */\n      hash(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {string} Host.\n       */\n      host() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Path.\n       */\n      path(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {number} Port.\n       */\n      port() {\n        return 0;\n      },\n      /**\n       * @return {string} Protocol.\n       */\n      protocol() {\n        return '';\n      },\n      replace() {\n      },\n      /**\n       * @param {string=} opt_search Search.\n       * @param {Object=} opt_paramValue Parameters.\n       * @return {Object} Search.\n       */\n      search(opt_search, opt_paramValue) {\n        return opt_search !== undefined ? this : {};\n      },\n      /**\n       * @param {string=} opt_url URL.\n       * @return {string} URL.\n       */\n      url(opt_url) {\n        return '';\n      }\n    });\n    return locationMock;\n  };\n};\n\n\n/**\n * @type {!angular.Module}\n * FIXME add utils dependencies.\n * FIXME What about Mockup provider ?\n */\nexports.module = angular.module('ngeoLocation', []);\nexports.module.factory('ngeoLocation', exports.LocationFactory);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/statemanager/Location.js","/**\n * @module ngeo.datasource.DataSource\n */\nimport ngeoBase from 'ngeo/index.js';\n\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.DataSources`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/DataSource.js","/**\n * @module ol/style/Text\n */\nimport Fill from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n/**\n * @classdesc\n * Set text style for vector features.\n *\n * @constructor\n * @param {olx.style.TextOptions=} opt_options Options.\n * @api\n */\nconst Text = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.font_ = options.font;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.text_ = options.text;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textAlign_ = options.textAlign;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: Text.DEFAULT_FILL_COLOR_});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n   * @private\n   * @type {ol.style.TextPlacement|string}\n   */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overflow_ = !!options.overflow;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n * @private\n */\nText.DEFAULT_FILL_COLOR_ = '#333';\n\n\n/**\n * Clones the style.\n * @return {ol.style.Text} The cloned style.\n * @api\n */\nText.prototype.clone = function() {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n\n/**\n * Get the `overflow` configuration.\n * @return {boolean} Let text overflow the length of the path they follow.\n * @api\n */\nText.prototype.getOverflow = function() {\n  return this.overflow_;\n};\n\n\n/**\n * Get the font name.\n * @return {string|undefined} Font.\n * @api\n */\nText.prototype.getFont = function() {\n  return this.font_;\n};\n\n\n/**\n * Get the maximum angle between adjacent characters.\n * @return {number} Angle in radians.\n * @api\n */\nText.prototype.getMaxAngle = function() {\n  return this.maxAngle_;\n};\n\n\n/**\n * Get the label placement.\n * @return {ol.style.TextPlacement|string} Text placement.\n * @api\n */\nText.prototype.getPlacement = function() {\n  return this.placement_;\n};\n\n\n/**\n * Get the x-offset for the text.\n * @return {number} Horizontal text offset.\n * @api\n */\nText.prototype.getOffsetX = function() {\n  return this.offsetX_;\n};\n\n\n/**\n * Get the y-offset for the text.\n * @return {number} Vertical text offset.\n * @api\n */\nText.prototype.getOffsetY = function() {\n  return this.offsetY_;\n};\n\n\n/**\n * Get the fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Determine whether the text rotates with the map.\n * @return {boolean|undefined} Rotate with map.\n * @api\n */\nText.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the text rotation.\n * @return {number|undefined} Rotation.\n * @api\n */\nText.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the text scale.\n * @return {number|undefined} Scale.\n * @api\n */\nText.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Get the stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Get the text to be rendered.\n * @return {string|undefined} Text.\n * @api\n */\nText.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Get the text alignment.\n * @return {string|undefined} Text align.\n * @api\n */\nText.prototype.getTextAlign = function() {\n  return this.textAlign_;\n};\n\n\n/**\n * Get the text baseline.\n * @return {string|undefined} Text baseline.\n * @api\n */\nText.prototype.getTextBaseline = function() {\n  return this.textBaseline_;\n};\n\n\n/**\n * Get the background fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\nText.prototype.getBackgroundFill = function() {\n  return this.backgroundFill_;\n};\n\n\n/**\n * Get the background stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\nText.prototype.getBackgroundStroke = function() {\n  return this.backgroundStroke_;\n};\n\n\n/**\n * Get the padding for the text.\n * @return {Array.<number>} Padding.\n * @api\n */\nText.prototype.getPadding = function() {\n  return this.padding_;\n};\n\n\n/**\n * Set the `overflow` property.\n *\n * @param {boolean} overflow Let text overflow the path that it follows.\n * @api\n */\nText.prototype.setOverflow = function(overflow) {\n  this.overflow_ = overflow;\n};\n\n\n/**\n * Set the font.\n *\n * @param {string|undefined} font Font.\n * @api\n */\nText.prototype.setFont = function(font) {\n  this.font_ = font;\n};\n\n\n/**\n * Set the maximum angle between adjacent characters.\n *\n * @param {number} maxAngle Angle in radians.\n * @api\n */\nText.prototype.setMaxAngle = function(maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n\n/**\n * Set the x offset.\n *\n * @param {number} offsetX Horizontal text offset.\n * @api\n */\nText.prototype.setOffsetX = function(offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n\n/**\n * Set the y offset.\n *\n * @param {number} offsetY Vertical text offset.\n * @api\n */\nText.prototype.setOffsetY = function(offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n\n/**\n * Set the text placement.\n *\n * @param {ol.style.TextPlacement|string} placement Placement.\n * @api\n */\nText.prototype.setPlacement = function(placement) {\n  this.placement_ = placement;\n};\n\n\n/**\n * Set the fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number|undefined} rotation Rotation.\n * @api\n */\nText.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number|undefined} scale Scale.\n * @api\n */\nText.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set the stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Set the text.\n *\n * @param {string|undefined} text Text.\n * @api\n */\nText.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Set the text alignment.\n *\n * @param {string|undefined} textAlign Text align.\n * @api\n */\nText.prototype.setTextAlign = function(textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n\n/**\n * Set the text baseline.\n *\n * @param {string|undefined} textBaseline Text baseline.\n * @api\n */\nText.prototype.setTextBaseline = function(textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n\n/**\n * Set the background fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\nText.prototype.setBackgroundFill = function(fill) {\n  this.backgroundFill_ = fill;\n};\n\n\n/**\n * Set the background stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setBackgroundStroke = function(stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n\n/**\n * Set the padding (`[top, right, bottom, left]`).\n *\n * @param {!Array.<number>} padding Padding.\n * @api\n */\nText.prototype.setPadding = function(padding) {\n  this.padding_ = padding;\n};\nexport default Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/style/Text.js\n// module id = 75\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21","/**\n * @module ol/format/GML3\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase from '../format/GMLBase.js';\nimport XSD from '../format/XSD.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nconst GML3 = function(opt_options) {\n  const options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.surface_ = options.surface !== undefined ? options.surface : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.curve_ = options.curve !== undefined ? options.curve : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiCurve_ = options.multiCurve !== undefined ?\n    options.multiCurve : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiSurface_ = options.multiSurface !== undefined ?\n    options.multiSurface : true;\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : GML3.schemaLocation_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hasZ = options.hasZ !== undefined ?\n    options.hasZ : false;\n\n};\n\ninherits(GML3, GMLBase);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nGML3.schemaLocation_ = GMLBase.GMLNS +\n    ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n    '1.0.0/gmlsf.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\nGML3.prototype.readMultiCurve_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  const lineStrings = _ol_xml_.pushParseAndPop([],\n    this.MULTICURVE_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\nGML3.prototype.readMultiSurface_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  const polygons = _ol_xml_.pushParseAndPop([],\n    this.MULTISURFACE_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.curveMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.CURVEMEMBER_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.surfaceMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.SURFACEMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.PATCHES_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.SEGMENTS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPolygonPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readLineStringSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.interiorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.exteriorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\nGML3.prototype.readSurface_ = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = _ol_xml_.pushParseAndPop([null],\n    this.SURFACE_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\nGML3.prototype.readCurve_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.CURVE_PARSERS_, node, objectStack, this);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\nGML3.prototype.readEnvelope_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = _ol_xml_.pushParseAndPop([null],\n    this.ENVELOPE_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[2][0],\n    flatCoordinates[2][1]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPos_ = function(node, objectStack) {\n  let s = _ol_xml_.getAllTextContent(node, false);\n  const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n  /** @type {Array.<number>} */\n  const flatCoordinates = [];\n  let m;\n  while ((m = re.exec(s))) {\n    flatCoordinates.push(parseFloat(m[1]));\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  if (axisOrientation === 'neu') {\n    let i, ii;\n    for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n      const y = flatCoordinates[i];\n      const x = flatCoordinates[i + 1];\n      flatCoordinates[i] = x;\n      flatCoordinates[i + 1] = y;\n    }\n  }\n  const len = flatCoordinates.length;\n  if (len == 2) {\n    flatCoordinates.push(0);\n  }\n  if (len === 0) {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPosList_ = function(node, objectStack) {\n  const s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  const contextDimension = context['srsDimension'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  const coords = s.split(/\\s+/);\n  // The \"dimension\" attribute is from the GML 3.0.1 spec.\n  let dim = 2;\n  if (node.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('srsDimension'));\n  } else if (node.getAttribute('dimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.getAttribute('dimension'));\n  } else if (node.parentNode.getAttribute('srsDimension')) {\n    dim = XSD.readNonNegativeIntegerString(\n      node.parentNode.getAttribute('srsDimension'));\n  } else if (contextDimension) {\n    dim = XSD.readNonNegativeIntegerString(contextDimension);\n  }\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coords.length; i < ii; i += dim) {\n    x = parseFloat(coords[i]);\n    y = parseFloat(coords[i + 1]);\n    z = (dim === 3) ? parseFloat(coords[i + 2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pos': _ol_xml_.makeReplacer(GML3.prototype.readFlatPos_),\n    'posList': _ol_xml_.makeReplacer(GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser_,\n    'exterior': GML3.prototype.exteriorParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Surface': _ol_xml_.makeReplacer(GML3.prototype.readSurface_),\n    'MultiSurface': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiSurface_),\n    'Curve': _ol_xml_.makeReplacer(GML3.prototype.readCurve_),\n    'MultiCurve': _ol_xml_.makeReplacer(\n      GML3.prototype.readMultiCurve_),\n    'Envelope': _ol_xml_.makeReplacer(GML3.prototype.readEnvelope_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTICURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'curveMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_),\n    'curveMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.curveMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.MULTISURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_),\n    'surfaceMembers': _ol_xml_.makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n      GMLBase.prototype.readLineString),\n    'Curve': _ol_xml_.makeArrayPusher(GML3.prototype.readCurve_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': _ol_xml_.makeArrayPusher(GML3.prototype.readSurface_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'patches': _ol_xml_.makeReplacer(GML3.prototype.readPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.CURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'segments': _ol_xml_.makeReplacer(GML3.prototype.readSegment_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.ENVELOPE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_),\n    'upperCorner': _ol_xml_.makeArrayPusher(\n      GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.PATCHES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': _ol_xml_.makeReplacer(\n      GML3.prototype.readPolygonPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nGML3.prototype.SEGMENTS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': _ol_xml_.makeReplacer(\n      GML3.prototype.readLineStringSegment_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} value Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePos_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  let axisOrientation = 'enu';\n  if (srsName) {\n    axisOrientation = getProjection(srsName).getAxisOrientation();\n  }\n  const point = value.getCoordinates();\n  let coords;\n  // only 2d for simple features profile\n  if (axisOrientation.substr(0, 2) === 'en') {\n    coords = (point[0] + ' ' + point[1]);\n  } else {\n    coords = (point[1] + ' ' + point[0]);\n  }\n  if (hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n  XSD.writeStringTextNode(node, coords);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML3.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ' ' + point[1] :\n    point[1] + ' ' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePosList_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  XSD.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const pos = _ol_xml_.createElementNS(node.namespaceURI, 'pos');\n  node.appendChild(pos);\n  this.writePos_(pos, geometry, objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(XSD.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    ({node: node}), GML3.ENVELOPE_SERIALIZERS_,\n    _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n  node.appendChild(posList);\n  this.writePosList_(posList, geometry, objectStack);\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML3.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'interior' : 'exterior');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      GML3.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    GML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiPoint_ = function(node, geometry,\n  objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  const hasZ = context['hasZ'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    GML3.POINTMEMBER_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    GML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = _ol_xml_.createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), GML3.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n            XSD.writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item), context.serializers,\n    _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeFeatureMembers_ = function(node, features, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const serializers = {};\n  serializers[featureNS] = {};\n  serializers[featureNS][featureType] = _ol_xml_.makeChildAppender(\n    this.writeFeatureElement, this);\n  const item = assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n    (item),\n    serializers,\n    _ol_xml_.makeSimpleNodeFactory(featureType, featureNS), features,\n    objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'exterior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_),\n    'interior': _ol_xml_.makeChildAppender(GML3.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\nGML3.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(GML3.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n      GML3.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\nGML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    GML3.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const curve = context['curve'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'LineString' && curve === true) {\n      nodeName = 'Curve';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * Encode a geometry in GML 3.1.1 Simple Features.\n *\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeGeometryNode = function(geometry, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const geom = _ol_xml_.createElementNS('http://www.opengis.net/gml', 'geom');\n  const context = {node: geom, hasZ: this.hasZ, srsName: this.srsName,\n    curve: this.curve_, surface: this.surface_,\n    multiSurface: this.multiSurface_, multiCurve: this.multiCurve_};\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeGeometryElement(geom, geometry, [context]);\n  return geom;\n};\n\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GML 3.1.1 format as an XML node.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const node = _ol_xml_.createElementNS('http://www.opengis.net/gml',\n    'featureMembers');\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n    'xsi:schemaLocation', this.schemaLocation);\n  const context = {\n    srsName: this.srsName,\n    hasZ: this.hasZ,\n    curve: this.curve_,\n    surface: this.surface_,\n    multiSurface: this.multiSurface_,\n    multiCurve: this.multiCurve_,\n    featureNS: this.featureNS,\n    featureType: this.featureType\n  };\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeFeatureMembers_(node, features, [context]);\n  return node;\n};\nexport default GML3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/GML3.js\n// module id = 76\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","/**\n * @module ngeo.map.FeatureOverlayMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleStyle.defaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : olStyleStyle.createFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/map/FeatureOverlayMgr.js","/**\n * @module ol/proj/proj4\n */\nimport {addCoordinateTransforms, addProjection, addEquivalentProjections, get} from '../proj.js';\nimport {get as getTransform} from './transforms.js';\nimport Projection from './Projection.js';\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {?} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  const projCodes = Object.keys(proj4.defs);\n  const len = projCodes.length;\n  let i, j;\n  for (i = 0; i < len; ++i) {\n    const code = projCodes[i];\n    if (!get(code)) {\n      const def = proj4.defs(code);\n      addProjection(new Projection({\n        code: code,\n        axisOrientation: def.axis,\n        metersPerUnit: def.to_meter,\n        units: def.units\n      }));\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    const code1 = projCodes[i];\n    const proj1 = get(code1);\n    for (j = 0; j < len; ++j) {\n      const code2 = projCodes[j];\n      const proj2 = get(code2);\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          const transform = proj4(code1, code2);\n          addCoordinateTransforms(proj1, proj2, transform.forward, transform.inverse);\n        }\n      }\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/proj/proj4.js\n// module id = 82\n// module chunks = 0 1 2 3 4 5 6 7 9 10 11 12 13 15 16 17 18 19 20","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/global.js\n// module id = null\n// module chunks = ","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/values.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/PrimeMeridian.js\n// module id = null\n// module chunks = ","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/units.js\n// module id = null\n// module chunks = ","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/match.js\n// module id = null\n// module chunks = ","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projString.js\n// module id = null\n// module chunks = ","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/parser.js\n// module id = null\n// module chunks = ","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/process.js\n// module id = null\n// module chunks = ","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert, 10;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['false_easting', 'False_Easting'],\n    ['false_northing', 'False_Northing'],\n    ['central_meridian', 'Central_Meridian'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wkt-parser/index.js\n// module id = null\n// module chunks = ","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/defs.js\n// module id = null\n// module chunks = ","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\n var codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS']; \nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      return wkt(code);\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/parseCode.js\n// module id = null\n// module chunks = ","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/extend.js\n// module id = null\n// module chunks = ","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/msfnz.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return x<0 ? -1 : 1;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/sign.js\n// module id = null\n// module chunks = ","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_lon.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/tsfnz.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/phi2z.js\n// module id = null\n// module chunks = ","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/longlat.js\n// module id = null\n// module chunks = ","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/merc.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/Ellipsoid.js\n// module id = null\n// module chunks = ","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"606.0,23.0,413.0\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"653.0,-212.0,449.0\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/constants/Datum.js\n// module id = null\n// module chunks = ","import {PJD_3PARAM, PJD_7PARAM, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datum.js\n// module id = null\n// module chunks = ","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = datumDef.towgs84 ? datumDef.towgs84.split(',') : null;\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calulated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/Proj.js\n// module id = null\n// module chunks = ","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/deriveConstants.js\n// module id = null\n// module chunks = ","import {PJD_3PARAM, PJD_7PARAM, PJD_NODATUM} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n\n  // Do we need to go through geocentric coordinates?\n  if (source.es === dest.es && source.a === dest.a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source.es, source.a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  return geocentricToGeodetic(point, dest.es, dest.a, dest.b);\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datum_transform.js\n// module id = null\n// module chunks = ","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if ((Latitude < -HALF_PI) || (Latitude > HALF_PI)) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return null;\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/datumUtils.js\n// module id = null\n// module chunks = ","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      t = 'x';\n    }\n    else if (i === 1) {\n      v = yin;\n      t = 'y';\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/adjust_axis.js\n// module id = null\n// module chunks = ","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/toPoint.js\n// module id = null\n// module chunks = ","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/checkSanity.js\n// module id = null\n// module chunks = ","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return ((source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM) && dest.datumCode !== 'WGS84') || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  }\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R\n    };\n  }\n  else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  return point;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/transform.js\n// module id = null\n// module chunks = ","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords);\n    if (coords.length === 3) {\n      return [transformedArray.x, transformedArray.y, transformedArray.z];\n    }\n    else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  }\n  else {\n    out = transform(from, to, coords);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if (key === 'x' || key === 'y') {\n        return;\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  }\n  else {\n    obj = {\n      forward: function(coords) {\n        return transformer(fromProj, toProj, coords);\n      },\n      inverse: function(coords) {\n        return transformer(toProj, fromProj, coords);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/core.js\n// module id = null\n// module chunks = ","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mgrs/mgrs.js\n// module id = null\n// module chunks = ","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/Point.js\n// module id = null\n// module chunks = ","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_enfn.js\n// module id = null\n// module chunks = ","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_mlfn.js\n// module id = null\n// module chunks = ","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/pj_inv_mlfn.js\n// module id = null\n// module chunks = ","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/tmerc.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/sinh.js\n// module id = null\n// module chunks = ","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/hypot.js\n// module id = null\n// module chunks = ","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/asinhy.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/log1py.js\n// module id = null\n// module chunks = ","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/gatg.js\n// module id = null\n// module chunks = ","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/clens.js\n// module id = null\n// module chunks = ","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/clens_cmplx.js\n// module id = null\n// module chunks = ","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/cosh.js\n// module id = null\n// module chunks = ","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (this.es === undefined || this.es <= 0) {\n    throw new Error('incorrect elliptical usage');\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/etmerc.js\n// module id = null\n// module chunks = ","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_zone.js\n// module id = null\n// module chunks = ","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/utm.js\n// module id = null\n// module chunks = ","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/srat.js\n// module id = null\n// module chunks = ","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/gauss.js\n// module id = null\n// module chunks = ","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/sterea.js\n// module id = null\n// module chunks = ","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (0.5 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/stere.js\n// module id = null\n// module chunks = ","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {EPSLN, HALF_PI, FORTPI} from '../constants/values';\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {\n  this.no_off = this.no_off || false;\n  this.no_rot = this.no_rot || false;\n\n  if (isNaN(this.k0)) {\n    this.k0 = 1;\n  }\n  var sinlat = Math.sin(this.lat0);\n  var coslat = Math.cos(this.lat0);\n  var con = this.e * sinlat;\n\n  this.bl = Math.sqrt(1 + this.es / (1 - this.es) * Math.pow(coslat, 4));\n  this.al = this.a * this.bl * this.k0 * Math.sqrt(1 - this.es) / (1 - con * con);\n  var t0 = tsfnz(this.e, this.lat0, sinlat);\n  var dl = this.bl / coslat * Math.sqrt((1 - this.es) / (1 - con * con));\n  if (dl * dl < 1) {\n    dl = 1;\n  }\n  var fl;\n  var gl;\n  if (!isNaN(this.longc)) {\n    //Central point and azimuth method\n\n    if (this.lat0 >= 0) {\n      fl = dl + Math.sqrt(dl * dl - 1);\n    }\n    else {\n      fl = dl - Math.sqrt(dl * dl - 1);\n    }\n    this.el = fl * Math.pow(t0, this.bl);\n    gl = 0.5 * (fl - 1 / fl);\n    this.gamma0 = Math.asin(Math.sin(this.alpha) / dl);\n    this.long0 = this.longc - Math.asin(gl * Math.tan(this.gamma0)) / this.bl;\n\n  }\n  else {\n    //2 points method\n    var t1 = tsfnz(this.e, this.lat1, Math.sin(this.lat1));\n    var t2 = tsfnz(this.e, this.lat2, Math.sin(this.lat2));\n    if (this.lat0 >= 0) {\n      this.el = (dl + Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    else {\n      this.el = (dl - Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    var hl = Math.pow(t1, this.bl);\n    var ll = Math.pow(t2, this.bl);\n    fl = this.el / hl;\n    gl = 0.5 * (fl - 1 / fl);\n    var jl = (this.el * this.el - ll * hl) / (this.el * this.el + ll * hl);\n    var pl = (ll - hl) / (ll + hl);\n    var dlon12 = adjust_lon(this.long1 - this.long2);\n    this.long0 = 0.5 * (this.long1 + this.long2) - Math.atan(jl * Math.tan(0.5 * this.bl * (dlon12)) / pl) / this.bl;\n    this.long0 = adjust_lon(this.long0);\n    var dlon10 = adjust_lon(this.long1 - this.long0);\n    this.gamma0 = Math.atan(Math.sin(this.bl * (dlon10)) / gl);\n    this.alpha = Math.asin(dl * Math.sin(this.gamma0));\n  }\n\n  if (this.no_off) {\n    this.uc = 0;\n  }\n  else {\n    if (this.lat0 >= 0) {\n      this.uc = this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n    else {\n      this.uc = -1 * this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n  }\n\n}\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var dlon = adjust_lon(lon - this.long0);\n  var us, vs;\n  var con;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    if (lat > 0) {\n      con = -1;\n    }\n    else {\n      con = 1;\n    }\n    vs = this.al / this.bl * Math.log(Math.tan(FORTPI + con * this.gamma0 * 0.5));\n    us = -1 * con * HALF_PI * this.al / this.bl;\n  }\n  else {\n    var t = tsfnz(this.e, lat, Math.sin(lat));\n    var ql = this.el / Math.pow(t, this.bl);\n    var sl = 0.5 * (ql - 1 / ql);\n    var tl = 0.5 * (ql + 1 / ql);\n    var vl = Math.sin(this.bl * (dlon));\n    var ul = (sl * Math.sin(this.gamma0) - vl * Math.cos(this.gamma0)) / tl;\n    if (Math.abs(Math.abs(ul) - 1) <= EPSLN) {\n      vs = Number.POSITIVE_INFINITY;\n    }\n    else {\n      vs = 0.5 * this.al * Math.log((1 - ul) / (1 + ul)) / this.bl;\n    }\n    if (Math.abs(Math.cos(this.bl * (dlon))) <= EPSLN) {\n      us = this.al * this.bl * (dlon);\n    }\n    else {\n      us = this.al * Math.atan2(sl * Math.cos(this.gamma0) + vl * Math.sin(this.gamma0), Math.cos(this.bl * dlon)) / this.bl;\n    }\n  }\n\n  if (this.no_rot) {\n    p.x = this.x0 + us;\n    p.y = this.y0 + vs;\n  }\n  else {\n\n    us -= this.uc;\n    p.x = this.x0 + vs * Math.cos(this.alpha) + us * Math.sin(this.alpha);\n    p.y = this.y0 + us * Math.cos(this.alpha) - vs * Math.sin(this.alpha);\n  }\n  return p;\n}\n\nexport function inverse(p) {\n  var us, vs;\n  if (this.no_rot) {\n    vs = p.y - this.y0;\n    us = p.x - this.x0;\n  }\n  else {\n    vs = (p.x - this.x0) * Math.cos(this.alpha) - (p.y - this.y0) * Math.sin(this.alpha);\n    us = (p.y - this.y0) * Math.cos(this.alpha) + (p.x - this.x0) * Math.sin(this.alpha);\n    us += this.uc;\n  }\n  var qp = Math.exp(-1 * this.bl * vs / this.al);\n  var sp = 0.5 * (qp - 1 / qp);\n  var tp = 0.5 * (qp + 1 / qp);\n  var vp = Math.sin(this.bl * us / this.al);\n  var up = (vp * Math.cos(this.gamma0) + sp * Math.sin(this.gamma0)) / tp;\n  var ts = Math.pow(this.el / Math.sqrt((1 + up) / (1 - up)), 1 / this.bl);\n  if (Math.abs(up - 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = HALF_PI;\n  }\n  else if (Math.abs(up + 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = -1 * HALF_PI;\n  }\n  else {\n    p.y = phi2z(this.e, ts);\n    p.x = adjust_lon(this.long0 - Math.atan2(sp * Math.cos(this.gamma0) - vp * Math.sin(this.gamma0), Math.cos(this.bl * us / this.al)) / this.bl);\n  }\n  return p;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/omerc.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n\n  // array of:  r_maj,r_min,lat1,lat2,c_lon,c_lat,false_east,false_north\n  //double c_lat;                   /* center latitude                      */\n  //double c_lon;                   /* center longitude                     */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Lambert Tangential Conformal Conic Projection\", \"Lambert_Conformal_Conic\", \"Lambert_Conformal_Conic_2SP\", \"lcc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/lcc.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/krovak.js\n// module id = null\n// module chunks = ","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/mlfn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e0fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e1fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e2fn.js\n// module id = null\n// module chunks = ","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/e3fn.js\n// module id = null\n// module chunks = ","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/gN.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/adjust_lat.js\n// module id = null\n// module chunks = ","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/imlfn.js\n// module id = null\n// module chunks = ","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/cass.js\n// module id = null\n// module chunks = ","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/qsfnz.js\n// module id = null\n// module chunks = ","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.phi0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.phi0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/laea.js\n// module id = null\n// module chunks = ","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/asinz.js\n// module id = null\n// module chunks = ","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi, this.cos_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/aea.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/gnom.js\n// module id = null\n// module chunks = ","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/common/iqsfnz.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/cea.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/eqc.js\n// module id = null\n// module chunks = ","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/poly.js\n// module id = null\n// module chunks = ","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/nzmg.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/mill.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/sinu.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/moll.js\n// module id = null\n// module chunks = ","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/eqdc.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/vandg.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c / Math.sin(c);\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      lat = Math.atan((1 - this.es * F * this.sin_p12 / Math.sin(psi)) * Math.tan(psi) / (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/aeqd.js\n// module id = null\n// module chunks = ","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/ortho.js\n// module id = null\n// module chunks = ","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/qsc.js\n// module id = null\n// module chunks = ","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/projs.js\n// module id = null\n// module chunks = ","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport version from \"./version\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = version;\nincludedProjections(proj4);\nexport default proj4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/index.js\n// module id = null\n// module chunks = ","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/proj4/lib/projections/somerc.js\n// module id = 85\n// module chunks = 0 1 2 3 4 5 6 7 9 10 11 12 13 15 16 17 18 19 20","/**\n * @module ol/format/OWS\n */\nimport {inherits} from '../index.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @constructor\n * @extends {ol.format.XML}\n */\nconst OWS = function() {\n  XML.call(this);\n};\n\ninherits(OWS, XML);\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromNode = function(node) {\n  const owsObject = _ol_xml_.pushParseAndPop({},\n    OWS.PARSERS_, node, []);\n  return owsObject ? owsObject : null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The address.\n */\nOWS.readAddress_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ADDRESS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The values.\n */\nOWS.readAllowedValues_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.ALLOWED_VALUES_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The constraint.\n */\nOWS.readConstraint_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'name': name},\n    OWS.CONSTRAINT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The contact info.\n */\nOWS.readContactInfo_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.CONTACT_INFO_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The DCP.\n */\nOWS.readDcp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.DCP_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The GET object.\n */\nOWS.readGet_ = function(node, objectStack) {\n  const href = XLink.readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return _ol_xml_.pushParseAndPop({'href': href},\n    OWS.REQUEST_METHOD_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The HTTP object.\n */\nOWS.readHttp_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({}, OWS.HTTP_PARSERS_,\n    node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operation.\n */\nOWS.readOperation_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = _ol_xml_.pushParseAndPop({},\n    OWS.OPERATION_PARSERS_, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */\n      (objectStack[objectStack.length - 1]);\n  object[name] = value;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The operations metadata.\n */\nOWS.readOperationsMetadata_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.OPERATIONS_METADATA_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The phone.\n */\nOWS.readPhone_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    OWS.PHONE_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service identification.\n */\nOWS.readServiceIdentification_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_IDENTIFICATION_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service contact.\n */\nOWS.readServiceContact_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_CONTACT_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Object|undefined} The service provider.\n */\nOWS.readServiceProvider_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n    {}, OWS.SERVICE_PROVIDER_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {string|undefined} The value.\n */\nOWS.readValue_ = function(node, objectStack) {\n  return XSD.readString(node);\n};\n\n\n/**\n * @const\n * @type {Array.<string>}\n * @private\n */\nOWS.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'ServiceIdentification': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceIdentification_),\n    'ServiceProvider': _ol_xml_.makeObjectPropertySetter(\n      OWS.readServiceProvider_),\n    'OperationsMetadata': _ol_xml_.makeObjectPropertySetter(\n      OWS.readOperationsMetadata_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ADDRESS_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DeliveryPoint': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'City': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'AdministrativeArea': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'PostalCode': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Country': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'ElectronicMailAddress': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.ALLOWED_VALUES_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Value': _ol_xml_.makeObjectPropertyPusher(OWS.readValue_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONSTRAINT_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'AllowedValues': _ol_xml_.makeObjectPropertySetter(\n      OWS.readAllowedValues_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.CONTACT_INFO_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Phone': _ol_xml_.makeObjectPropertySetter(OWS.readPhone_),\n    'Address': _ol_xml_.makeObjectPropertySetter(OWS.readAddress_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.DCP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'HTTP': _ol_xml_.makeObjectPropertySetter(OWS.readHttp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.HTTP_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Get': _ol_xml_.makeObjectPropertyPusher(OWS.readGet_),\n    'Post': undefined // TODO\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATION_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'DCP': _ol_xml_.makeObjectPropertySetter(OWS.readDcp_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.OPERATIONS_METADATA_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Operation': OWS.readOperation_\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.PHONE_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Voice': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n    'Facsimile': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.REQUEST_METHOD_PARSERS_ = _ol_xml_.makeStructureNS(\n  OWS.NAMESPACE_URIS_, {\n    'Constraint': _ol_xml_.makeObjectPropertyPusher(\n      OWS.readConstraint_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_CONTACT_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'IndividualName': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'PositionName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ContactInfo': _ol_xml_.makeObjectPropertySetter(\n          OWS.readContactInfo_)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_IDENTIFICATION_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'Abstract': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'AccessConstraints': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Fees': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'Title': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ServiceTypeVersion': _ol_xml_.makeObjectPropertySetter(\n          XSD.readString),\n        'ServiceType': _ol_xml_.makeObjectPropertySetter(XSD.readString)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nOWS.SERVICE_PROVIDER_PARSERS_ =\n    _ol_xml_.makeStructureNS(\n      OWS.NAMESPACE_URIS_, {\n        'ProviderName': _ol_xml_.makeObjectPropertySetter(XSD.readString),\n        'ProviderSite': _ol_xml_.makeObjectPropertySetter(XLink.readHref),\n        'ServiceContact': _ol_xml_.makeObjectPropertySetter(\n          OWS.readServiceContact_)\n      });\nexport default OWS;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/OWS.js\n// module id = null\n// module chunks = ","/**\n * @module ol/format/WMTSCapabilities\n */\nimport {inherits} from '../index.js';\nimport {boundingExtent} from '../extent.js';\nimport OWS from '../format/OWS.js';\nimport XLink from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport XSD from '../format/XSD.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst WMTSCapabilities = function() {\n  XML.call(this);\n\n  /**\n   * @type {ol.format.OWS}\n   * @private\n   */\n  this.owsParser_ = new OWS();\n};\n\ninherits(WMTSCapabilities, XML);\n\n\n/**\n * Read a WMTS capabilities document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WMTS capabilities.\n * @api\n */\nWMTSCapabilities.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromNode = function(node) {\n  const version = node.getAttribute('version').trim();\n  let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n  if (!WMTSCapabilityObject) {\n    return null;\n  }\n  WMTSCapabilityObject['version'] = version;\n  WMTSCapabilityObject = _ol_xml_.pushParseAndPop(WMTSCapabilityObject,\n    WMTSCapabilities.PARSERS_, node, []);\n  return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nWMTSCapabilities.readContents_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.CONTENTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nWMTSCapabilities.readLayer_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.LAYER_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nWMTSCapabilities.readTileMatrixSet_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nWMTSCapabilities.readStyle_ = function(node, objectStack) {\n  const style = _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.STYLE_PARSERS_, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nWMTSCapabilities.readTileMatrixSetLink_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LINKS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nWMTSCapabilities.readDimensions_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.DIMENSION_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nWMTSCapabilities.readResourceUrl_ = function(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\nWMTSCapabilities.readWgs84BoundingBox_ = function(node, objectStack) {\n  const coordinates = _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.WGS84_BBOX_READERS_, node, objectStack);\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nWMTSCapabilities.readLegendUrl_ = function(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = XLink.readHref(node);\n  return legend;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nWMTSCapabilities.readCoordinates_ = function(node, objectStack) {\n  const coordinates = XSD.readString(node).split(' ');\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nWMTSCapabilities.readTileMatrix_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TM_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nWMTSCapabilities.readTileMatrixLimitsList_ = function(node,\n  objectStack) {\n  return _ol_xml_.pushParseAndPop([],\n    WMTSCapabilities.TMS_LIMITS_LIST_PARSERS_, node,\n    objectStack);\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nWMTSCapabilities.readTileMatrixLimits_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop({},\n    WMTSCapabilities.TMS_LIMITS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/wmts/1.0'\n];\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nWMTSCapabilities.OWS_NAMESPACE_URIS_ = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Contents': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readContents_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.CONTENTS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Layer': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLayer_),\n    'TileMatrixSet': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSet_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.LAYER_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Style': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readStyle_),\n    'Format': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString),\n    'TileMatrixSetLink': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrixSetLink_),\n    'Dimension': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readDimensions_),\n    'ResourceURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readResourceUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Abstract': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'WGS84BoundingBox': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readWgs84BoundingBox_),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.STYLE_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'LegendURL': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readLegendUrl_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Title': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LINKS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrixSetLimits': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readTileMatrixLimitsList_)\n  });\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_LIST_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrixLimits': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readTileMatrixLimits_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_LIMITS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TileMatrix': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'MinTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileRow': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MinTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MaxTileCol': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.DIMENSION_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'Default': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Value': _ol_xml_.makeObjectPropertyPusher(\n      XSD.readString)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.WGS84_BBOX_READERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'LowerCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_),\n    'UpperCorner': _ol_xml_.makeArrayPusher(\n      WMTSCapabilities.readCoordinates_)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TMS_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'WellKnownScaleSet': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'TileMatrix': _ol_xml_.makeObjectPropertyPusher(\n      WMTSCapabilities.readTileMatrix_)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'SupportedCRS': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString),\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\nWMTSCapabilities.TM_PARSERS_ = _ol_xml_.makeStructureNS(\n  WMTSCapabilities.NAMESPACE_URIS_, {\n    'TopLeftCorner': _ol_xml_.makeObjectPropertySetter(\n      WMTSCapabilities.readCoordinates_),\n    'ScaleDenominator': _ol_xml_.makeObjectPropertySetter(\n      XSD.readDecimal),\n    'TileWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'TileHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixWidth': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger),\n    'MatrixHeight': _ol_xml_.makeObjectPropertySetter(\n      XSD.readNonNegativeInteger)\n  }, _ol_xml_.makeStructureNS(WMTSCapabilities.OWS_NAMESPACE_URIS_, {\n    'Identifier': _ol_xml_.makeObjectPropertySetter(\n      XSD.readString)\n  }));\nexport default WMTSCapabilities;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/format/WMTSCapabilities.js\n// module id = null\n// module chunks = ","/**\n * @module ngeo.misc.decorate\n */\nconst exports = {};\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImage from 'ol/source/Image.js';\nimport olSourceTile from 'ol/source/Tile.js';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/decorate.js","/**\n * @module gmf.permalink.Permalink\n */\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoPopover from 'ngeo/Popover.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceWMSGroup from 'ngeo/datasource/WMSGroup.js';\n\nimport ngeoOlcsConstants from 'ngeo/olcs/constants.js';\nimport ngeoFormatFeatureHash from 'ngeo/format/FeatureHash.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olProj from 'ol/proj.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olLayerGroup from 'ol/layer/Group.js';\n\n/**\n * The Permalink service for GMF, which uses the `ngeo.statemanager.Service` to\n * manage the GMF application state. Here's the list of states are are managed:\n *\n * - the map center and zoom level\n * - the current background layer selected\n * - whether to add a crosshair feature in the map or not\n * - the dimensions value\n *\n * To have the whole possibilities offer by the permalink, these services\n * should be instantiated: ngeoBackgroundLayerMgr, ngeoFeatureOverlayMgr,\n * ngeoFeatureHelper, gmfPermalinkOptions, gmfThemes, gmfObjectEditingManager,\n * gmfThemeManager, defaultTheme, gmfTreeManager, ngeoWfsPermalink,\n * ngeoAutoProjection and ngeoFeatures.\n *\n * @constructor\n * @struct\n * @param {!angular.$q} $q The Angular $q service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$injector} $injector Main injector.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfPermalink\n */\nconst exports = function($q, $timeout, $rootScope, $injector, ngeoDebounce, ngeoEventHelper,\n  ngeoStateManager, ngeoLocation) {\n\n  /**\n   * @type {!angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  // == listener keys ==\n\n  /**\n   * The key for map view 'propertychange' event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.mapViewPropertyChangeEventKey_ = null;\n\n  // == properties from params ==\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {?ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = $injector.has('ngeoFeatures') ?\n    $injector.get('ngeoFeatures') : null;\n\n  /**\n   * @type {?ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.ngeoBackgroundLayerMgr_ = $injector.has('ngeoBackgroundLayerMgr') ?\n    $injector.get('ngeoBackgroundLayerMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.has('ngeoFeatureOverlayMgr') ?\n    $injector.get('ngeoFeatureOverlayMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.featureOverlay_ = ngeoFeatureOverlayMgr ?\n    ngeoFeatureOverlayMgr.getFeatureOverlay() : null;\n\n  /**\n   * @type {?ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = $injector.has('ngeoFeatureHelper') ?\n    $injector.get('ngeoFeatureHelper') : null;\n\n  /**\n   * @type {?ngeo.query.Querent}\n   * @private\n   */\n  this.ngeoQuerent_ = $injector.has('ngeoQuerent') ?\n    $injector.get('ngeoQuerent') : null;\n\n  /**\n   * The options to configure the gmf permalink service with.\n   * @type {!gmfx.PermalinkOptions}\n   */\n  const gmfPermalinkOptions = $injector.has('gmfPermalinkOptions') ?\n    $injector.get('gmfPermalinkOptions') : {};\n  if (gmfPermalinkOptions.useLocalStorage === true) {\n    // localStorage is deactivated by default\n    this.ngeoStateManager_.setUseLocalStorage(true);\n  }\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.crosshairEnabledByDefault_ = !!gmfPermalinkOptions.crosshairEnabledByDefault;\n\n  /**\n   * @type {?gmf.datasource.ExternalDataSourcesManager}\n   * @private\n   */\n  this.gmfExternalDataSourcesManager_ =\n    $injector.has('gmfExternalDataSourcesManager') ?\n      $injector.get('gmfExternalDataSourcesManager') : null;\n\n  /**\n   * @type {?gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.has('gmfThemes') ? $injector.get('gmfThemes') : null;\n\n  /**\n   * @type {?gmf.objectediting.Manager}\n   * @private\n   */\n  this.gmfObjectEditingManager_ = $injector.has('gmfObjectEditingManager') ?\n    $injector.get('gmfObjectEditingManager') : null;\n\n  /**\n   * @type {?gmf.theme.Manager}\n   * @private\n   */\n  this.gmfThemeManager_ = $injector.has('gmfThemeManager') ?\n    $injector.get('gmfThemeManager') : null;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.defaultTheme_ = $injector.has('defaultTheme') ?\n    $injector.get('defaultTheme') : undefined;\n\n  /**\n   * @type {?gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.has('gmfTreeManager') ?\n    $injector.get('gmfTreeManager') : null;\n\n  // == other properties ==\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {?ngeo.statemanager.WfsPermalink}\n   * @private\n   */\n  this.ngeoWfsPermalink_ = $injector.has('ngeoWfsPermalink') ?\n    $injector.get('ngeoWfsPermalink') : null;\n\n  /**\n   * @type {?gmfx.User}\n   * @export\n   */\n  this.gmfUser_ = $injector.has('gmfUser') ?\n    $injector.get('gmfUser') : null;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?ngeo.misc.AutoProjection}\n   * @private\n   */\n  this.ngeoAutoProjection_ = $injector.has('ngeoAutoProjection') ?\n    $injector.get('ngeoAutoProjection') : null;\n\n  /**\n   * A list of projections that the coordinates in the permalink can be in.\n   * @type {?Array.<ol.proj.Projection>}\n   * @private\n   */\n  this.sourceProjections_ = null;\n  if (gmfPermalinkOptions.projectionCodes !== undefined && this.ngeoAutoProjection_) {\n    const projections = this.ngeoAutoProjection_.getProjectionList(gmfPermalinkOptions.projectionCodes);\n    if (projections.length > 0) {\n      this.sourceProjections_ = projections;\n    }\n  }\n\n  /**\n   * @type {?ol.Feature}\n   * @private\n   */\n  this.crosshairFeature_ = null;\n\n  /**\n   * @type {Array<(null|ol.style.Style)>|null|ol.FeatureStyleFunction|ol.style.Style}\n   * @private\n   */\n  this.crosshairStyle_;\n\n  if (gmfPermalinkOptions.crosshairStyle !== undefined) {\n    this.crosshairStyle_ = gmfPermalinkOptions.crosshairStyle;\n  } else {\n    this.crosshairStyle_ = [new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 255, 255, 0.8)',\n          width: 5\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    }), new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({\n          color: 'rgba(255, 0, 0, 1)',\n          width: 2\n        }),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    })];\n  }\n\n  /**\n   * @type {?ngeo.Popover}\n   * @private\n   */\n  this.mapTooltip_ = null;\n\n  /**\n   * @type {ngeo.format.FeatureHash}\n   * @private\n   */\n  this.featureHashFormat_ = new ngeoFormatFeatureHash({\n    setStyle: false,\n    encodeStyles: false,\n    propertiesType: {\n      'fillColor': ngeoFormatFeatureProperties.COLOR,\n      'fillOpacity': ngeoFormatFeatureProperties.OPACITY,\n      'fontColor': ngeoFormatFeatureProperties.COLOR,\n      'fontSize': ngeoFormatFeatureProperties.SIZE,\n      'isBox': ngeoFormatFeatureProperties.IS_RECTANGLE,\n      'isCircle': ngeoFormatFeatureProperties.IS_CIRCLE,\n      'isLabel': ngeoFormatFeatureProperties.IS_TEXT,\n      'name': ngeoFormatFeatureProperties.NAME,\n      'pointRadius': ngeoFormatFeatureProperties.SIZE,\n      'showLabel': ngeoFormatFeatureProperties.SHOW_LABEL,\n      'showMeasure': ngeoFormatFeatureProperties.SHOW_MEASURE,\n      'strokeColor': ngeoFormatFeatureProperties.COLOR,\n      'strokeWidth': ngeoFormatFeatureProperties.STROKE\n    }\n  });\n\n  // == event listeners ==\n\n  if (this.ngeoBackgroundLayerMgr_) {\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleBackgroundLayerManagerChange_,\n      this);\n  }\n\n  // visibility\n  this.rootScope_.$on('ngeo-layertree-state', (event, treeCtrl, firstParent) => {\n    const newState = {};\n    if (firstParent.node.mixed) {\n      const state = treeCtrl.getState();\n      googAsserts.assert(state === 'on' || state === 'off');\n      const visible = state === 'on';\n      treeCtrl.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined) {\n          const param = exports.ParamPrefix.TREE_ENABLE + ctrl.node.name;\n          newState[param] = visible;\n        }\n      });\n    } else {\n      const gmfLayerNames = [];\n      firstParent.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined && ctrl.getState() === 'on') {\n          gmfLayerNames.push(ctrl.node.name);\n        }\n      });\n      newState[exports.ParamPrefix.TREE_GROUP_LAYERS + firstParent.node.name] = gmfLayerNames.join(',');\n    }\n    this.ngeoStateManager_.updateState(newState);\n  });\n  this.rootScope_.$on('ngeo-layertree-opacity', (event, treeCtrl) => {\n    const newState = {};\n    const opacity = treeCtrl.layer.getOpacity();\n    const stateName = (treeCtrl.parent.node.mixed ?\n      exports.ParamPrefix.TREE_OPACITY : exports.ParamPrefix.TREE_GROUP_OPACITY\n    ) + treeCtrl.node.name;\n    newState[stateName] = opacity;\n    this.ngeoStateManager_.updateState(newState);\n  });\n\n  // ngeoFeatures\n  //   (1) read from features from the state manager first, add them\n  //   (2) listen for further features added/removed\n  const features = this.getFeatures();\n  if (this.ngeoFeatures_) {\n    features.forEach(function(feature) {\n      if (this.featureHelper_) {\n        this.featureHelper_.setStyle(feature);\n      }\n      this.addNgeoFeature_(feature);\n    }, this);\n\n    this.ngeoFeatures_.extend(features);\n    olEvents.listen(this.ngeoFeatures_, 'add', this.handleNgeoFeaturesAdd_, this);\n    olEvents.listen(this.ngeoFeatures_, 'remove', this.handleNgeoFeaturesRemove_, this);\n  }\n\n  if (this.featureHelper_) {\n    this.rootScope_.$on('$localeChangeSuccess', () => {\n      features.forEach(function(feature) {\n        this.featureHelper_.setStyle(feature);\n      }, this);\n    });\n  }\n\n  if (this.gmfThemeManager_) {\n    this.rootScope_.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n      this.setThemeInUrl_(name);\n    });\n  }\n\n  // External DataSources\n\n  /**\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.setExternalDataSourcesStatePromise_ = null;\n\n  if (this.ngeoQuerent_ && this.gmfExternalDataSourcesManager_) {\n    // First, load the external data sources that are defined in the url\n    this.initExternalDataSources_().then(() => {\n      // Then, listen to the changes made to the external data sources to\n      // update the url accordingly.\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n\n      // We also need to 'register' the existing groups as well, i.e. those\n      // that were created by the Permalink\n      for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n        this.registerExternalDSGroup_(wmsGroup);\n      }\n      for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n        this.registerExternalDSGroup_(wmtsGroup);\n      }\n    });\n  }\n\n  this.initLayers_();\n};\n\n// === Map X, Y, Z ===\n\n/**\n * Get the coordinate to use to initialize the map view from the state manager.\n * @return {?ol.Coordinate} The coordinate for the map view center.\n * @export\n */\nexports.prototype.getMapCenter = function() {\n  const x = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_X);\n  const y = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Y);\n\n  if (!isNaN(x) && !isNaN(y)) {\n    const center = [x, y];\n    if (this.sourceProjections_ !== null && this.ngeoAutoProjection_) {\n      const targetProjection = this.map_.getView().getProjection();\n      const reprojectedCenter = this.ngeoAutoProjection_.tryProjectionsWithInversion(\n        center, targetProjection.getExtent(), targetProjection,\n        this.sourceProjections_);\n      if (reprojectedCenter) {\n        return reprojectedCenter;\n      }\n    }\n    return center;\n  }\n  return null;\n};\n\n\n/**\n * Get the zoom level to use to initialize the map view from the state manager.\n * @return {number|undefined} The zoom for the map view.\n * @export\n */\nexports.prototype.getMapZoom = function() {\n  const zoom = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Z);\n  return isNaN(zoom) ? undefined : zoom;\n};\n\n\n// === Map crosshair ===\n\n\n/**\n * Get the map crosshair property from the state manager, if defined.\n * @return {boolean} Whether map crosshair property is set or not.\n * @export\n */\nexports.prototype.getMapCrosshair = function() {\n  const crosshair = this.ngeoStateManager_.getInitialBooleanValue(gmfBase.PermalinkParam.MAP_CROSSHAIR);\n  return crosshair === undefined ? this.crosshairEnabledByDefault_ : crosshair;\n};\n\n\n/**\n * Sets the map crosshair to the center (or the map center if nothing provided).\n * Overwrites an existing map crosshair.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapCrosshair = function(opt_center) {\n  let crosshairCoordinate;\n  if (opt_center) {\n    crosshairCoordinate = opt_center;\n  } else {\n    crosshairCoordinate = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(crosshairCoordinate);\n\n  // remove existing crosshair first\n  if (this.crosshairFeature_) {\n    this.featureOverlay_.removeFeature(this.crosshairFeature_);\n  }\n  // set new crosshair\n  this.crosshairFeature_ = new olFeature(\n    new olGeomPoint(crosshairCoordinate));\n  this.crosshairFeature_.setStyle(this.crosshairStyle_);\n\n  // add to overlay\n  this.featureOverlay_.addFeature(this.crosshairFeature_);\n};\n\n\n// === Map tooltip ===\n\n\n/**\n * Get the tooltip text from the state manager.\n * @return {string|undefined} Tooltip text.\n * @export\n */\nexports.prototype.getMapTooltip = function() {\n  return this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.MAP_TOOLTIP);\n};\n\n/**\n * Sets the map tooltip to the center (or the map center if nothing provided).\n * Overwrites an existing map tooltip.\n * @param {string} tooltipText Text to display in tooltip.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapTooltip = function(tooltipText, opt_center) {\n  let tooltipPosition;\n  if (opt_center) {\n    tooltipPosition = opt_center;\n  } else {\n    tooltipPosition = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(tooltipPosition);\n\n  const div = $('<div/>', {\n    'class': 'gmf-permalink-tooltip',\n    'text': tooltipText\n  })[0];\n\n  if (this.mapTooltip_ !== null) {\n    this.map_.removeOverlay(this.mapTooltip_);\n  }\n\n  this.mapTooltip_ = new ngeoPopover({\n    element: div,\n    position: tooltipPosition\n  });\n\n  this.map_.addOverlay(this.mapTooltip_);\n};\n\n\n// === NgeoFeatures (A.K.A. DrawFeature, RedLining) ===\n\n\n/**\n * Get the ngeo features from the state manager for initialization purpose\n * @return {!Array.<!ol.Feature>} The features read from the state manager.\n * @export\n */\nexports.prototype.getFeatures = function() {\n  const f = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.FEATURES);\n  if (f !== undefined && f !== '') {\n    return googAsserts.assert(this.featureHashFormat_.readFeatures(f));\n  }\n  return [];\n};\n\n\n/**\n * @param {!Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.setDimensions = function(dimensions) {\n  // apply initial state\n  const keys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.DIMENSIONS);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const value = this.ngeoLocation_.getParam(key);\n    googAsserts.assert(value);\n    dimensions[key.slice(exports.ParamPrefix.DIMENSIONS.length)] = value;\n  }\n\n  this.rootScope_.$watchCollection(() => dimensions, (dimensions) => {\n    const params = {};\n    for (const key in dimensions) {\n      params[exports.ParamPrefix.DIMENSIONS + key] = dimensions[key];\n    }\n    this.ngeoLocation_.updateParams(params);\n  });\n};\n\n\n/**\n * Bind an ol3 map object to this service. The service will, from there on,\n * listen to the properties changed within the map view and update the following\n * state properties: map_x, map_y and map_zoom.\n *\n * If the service is already bound to a map, those events are unlistened first.\n *\n * @param {?ol.Map} map The ol3 map object.\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  if (map === this.map_) {\n    return;\n  }\n\n  if (this.map_) {\n    this.unregisterMap_();\n    this.map_ = null;\n  }\n\n  if (map) {\n    this.map_ = map;\n    if (this.gmfObjectEditingManager_) {\n      this.gmfObjectEditingManager_.getFeature().then((feature) => {\n        this.registerMap_(map, feature);\n      });\n    } else {\n      this.registerMap_(map, null);\n    }\n  }\n\n};\n\n\n/**\n * Listen to the map view property change and update the state accordingly.\n * @param {ol.Map} map The ol3 map object.\n * @param {?ol.Feature} oeFeature ObjectEditing feature\n * @private\n */\nexports.prototype.registerMap_ = function(map, oeFeature) {\n\n  const view = map.getView();\n  let center;\n\n  // (1) Initialize the map view with either:\n  //     a) the given ObjectEditing feature\n  //     b) the X, Y and Z available within the permalink service, if available\n  if (oeFeature && oeFeature.getGeometry()) {\n    const size = map.getSize();\n    googAsserts.assert(size);\n    view.fit(oeFeature.getGeometry().getExtent(), size);\n  } else {\n    const enabled3d = this.ngeoStateManager_.getInitialBooleanValue(ngeoOlcsConstants.Permalink3dParam.ENABLED);\n    if (!enabled3d) {\n      center = this.getMapCenter();\n      if (center) {\n        view.setCenter(center);\n      }\n      const zoom = this.getMapZoom();\n      if (zoom !== undefined) {\n        view.setZoom(zoom);\n      }\n    }\n  }\n\n\n  // (2) Listen to any property changes within the view and apply them to\n  //     the permalink service\n  this.mapViewPropertyChangeEventKey_ = olEvents.listen(\n    view,\n    'propertychange',\n    this.ngeoDebounce_(() => {\n      const center = view.getCenter();\n      const zoom = view.getZoom();\n      const object = {};\n      object[gmfBase.PermalinkParam.MAP_X] = Math.round(center[0]);\n      object[gmfBase.PermalinkParam.MAP_Y] = Math.round(center[1]);\n      object[gmfBase.PermalinkParam.MAP_Z] = zoom;\n      this.ngeoStateManager_.updateState(object);\n    }, 300, /* invokeApply */ true),\n    this);\n\n  // (3) Add map crosshair, if set\n  if (this.getMapCrosshair() && this.featureOverlay_) {\n    this.setMapCrosshair(center);\n  }\n\n  // (4) Add map tooltip, if set\n  const tooltipText = this.getMapTooltip();\n  if (tooltipText) {\n    this.setMapTooltip(tooltipText, center);\n  }\n\n  // (6) check for a wfs permalink\n  const wfsPermalinkData = this.getWfsPermalinkData_();\n  if (wfsPermalinkData !== null && this.ngeoWfsPermalink_) {\n    this.ngeoWfsPermalink_.issue(wfsPermalinkData, map);\n  }\n};\n\n\n/**\n * Remove any event listeners from the current map.\n * @private\n */\nexports.prototype.unregisterMap_ = function() {\n  googAsserts.assert(\n    this.mapViewPropertyChangeEventKey_, 'Key should be thruthy');\n  olEvents.unlistenByKey(this.mapViewPropertyChangeEventKey_);\n  this.mapViewPropertyChangeEventKey_ = null;\n};\n\n\n// === Background layer ===\n\n\n/**\n * Get the background layer object to use to initialize the map from the\n * state manager.\n * @param {!Array.<!ol.layer.Base>} layers Array of background layer objects.\n * @return {?ol.layer.Base} Background layer.\n * @export\n */\nexports.prototype.getBackgroundLayer = function(layers) {\n  const layerName = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.BG_LAYER);\n  if (layerName !== undefined) {\n    for (const layer of layers) {\n      if (layer.get('label') === layerName) {\n        return layer;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Called when the background layer changes. Update the state using the\n * background layer label, i.e. its name.\n * @private\n */\nexports.prototype.handleBackgroundLayerManagerChange_ = function() {\n  if (!this.map_ || !this.ngeoBackgroundLayerMgr_) {\n    return;\n  }\n\n  // get layer label, i.e its name\n  const layer = this.ngeoBackgroundLayerMgr_.get(this.map_);\n  const layerName = layer.get('label');\n  googAsserts.assertString(layerName);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.BG_LAYER] = layerName;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n// === Layers (layer tree) ===\n\n\n/**\n * Get the current first level node names in the tree manager and update the\n * correspondent state of the permalink.\n * @export\n */\nexports.prototype.refreshFirstLevelGroups = function() {\n  if (!this.gmfTreeManager_) {\n    return;\n  }\n  // Get first-level-groups order\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const orderedNames = groupNodes.map(node => node.name);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.TREE_GROUPS] = orderedNames.join(',');\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Return true if there is a theme specified in the URL path.\n * @private\n * @param {Array.<string>} pathElements Array of path elements.\n * @return {boolean} theme in path.\n */\nexports.prototype.themeInUrl_ = function(pathElements) {\n  const indexOfTheme = pathElements.indexOf('theme');\n  return indexOfTheme != -1 && indexOfTheme == pathElements.length - 2;\n};\n\n\n/**\n * @param {string} themeName Theme name.\n * @private\n */\nexports.prototype.setThemeInUrl_ = function(themeName) {\n  if (themeName) {\n    const pathElements = this.ngeoLocation_.getPath().split('/');\n    googAsserts.assert(pathElements.length > 1);\n    if (pathElements[pathElements.length - 1] === '') {\n      // case where the path is just \"/\"\n      pathElements.splice(pathElements.length - 1);\n    }\n    if (this.themeInUrl_(pathElements)) {\n      pathElements[pathElements.length - 1] = themeName;\n    } else {\n      pathElements.push('theme', themeName);\n    }\n    this.ngeoLocation_.setPath(pathElements.join('/'));\n  }\n};\n\n\n/**\n * Get the default theme from url, local storage, user functionalities or\n * defaultTheme constant.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeName = function() {\n\n  // check if we have a theme in url\n  const pathElements = this.ngeoLocation_.getPath().split('/');\n  if (this.themeInUrl_(pathElements)) {\n    return pathElements[pathElements.length - 1];\n  }\n\n  // check if we have a theme in the local storage\n  const tn = this.ngeoStateManager_.getInitialStringValue('theme');\n  if (tn) {\n    return tn;\n  }\n\n  const defaultTheme = this.defaultThemeNameFromFunctionalities();\n  if (defaultTheme !== null) {\n    return defaultTheme;\n  }\n\n  // fallback to the defaultTheme constant\n  if (this.defaultTheme_) {\n    return this.defaultTheme_;\n  }\n\n  return null;\n};\n\n\n/**\n * Get the default theme from user functionalities.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeNameFromFunctionalities = function() {\n  //check if we have a theme in the user functionalities\n  if (!this.gmfUser_) {\n    return null;\n  }\n  const functionalities = this.gmfUser_.functionalities;\n  if (functionalities && 'default_theme' in functionalities) {\n    const defaultTheme = functionalities.default_theme;\n    if (defaultTheme.length > 0) {\n      return defaultTheme[0];\n    }\n  }\n  return null;\n};\n\n\n/**\n * @private\n */\nexports.prototype.initLayers_ = function() {\n  if (!this.gmfThemes_) {\n    return;\n  }\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.defaultThemeName();\n    googAsserts.assert(themeName !== null);\n\n    if (this.gmfThemeManager_) {\n      this.gmfThemeManager_.setThemeName(this.gmfThemeManager_.modeFlush ? themeName : '');\n    }\n\n    /**\n     * @type {Array<(gmfThemes.GmfGroup)>}\n     */\n    let firstLevelGroups = [];\n    let theme;\n    // Check if we have the groups in the permalink\n    const groupsNames = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.TREE_GROUPS);\n    if (groupsNames === undefined) {\n      googAsserts.assertString(themeName);\n      theme = gmfThemeThemes.findThemeByName(themes, themeName);\n      if (theme) {\n        firstLevelGroups = theme.children;\n      }\n    } else {\n      groupsNames.split(',').forEach((groupName) => {\n        const group = gmfThemeThemes.findGroupByName(themes, groupName);\n        if (group) {\n          firstLevelGroups.push(group);\n        }\n      });\n    }\n\n    if (this.gmfTreeManager_) {\n      this.gmfTreeManager_.setFirstLevelGroups(firstLevelGroups);\n    }\n\n    this.$timeout_(() => {\n      if (!this.gmfTreeManager_ || !this.gmfTreeManager_.rootCtrl) {\n        // we don't have any layertree\n        return;\n      }\n      // Enable the layers and set the opacity\n      this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n        if (treeCtrl.isRoot) {\n          return;\n        }\n\n        const opacity = this.ngeoStateManager_.getInitialNumberValue((\n          treeCtrl.parent.node.mixed ?\n            exports.ParamPrefix.TREE_OPACITY :\n            exports.ParamPrefix.TREE_GROUP_OPACITY\n        ) + treeCtrl.node.name);\n        if (opacity !== undefined && treeCtrl.layer) {\n          treeCtrl.layer.setOpacity(opacity);\n        }\n        if (treeCtrl.parent.node && treeCtrl.parent.node.mixed && treeCtrl.node.children == undefined) {\n          // Layer of a mixed group\n          const enable = this.ngeoStateManager_.getInitialBooleanValue(\n            exports.ParamPrefix.TREE_ENABLE + treeCtrl.node.name\n          );\n          if (enable !== undefined) {\n            treeCtrl.setState(enable ? 'on' : 'off', false);\n          }\n        } else if (!treeCtrl.node.mixed && treeCtrl.depth == 1) {\n          // First level non mixed group\n          const groupLayers = this.ngeoStateManager_.getInitialStringValue(\n            exports.ParamPrefix.TREE_GROUP_LAYERS + treeCtrl.node.name\n          );\n          if (groupLayers !== undefined) {\n            const groupLayersArray = groupLayers.split(',');\n            treeCtrl.traverseDepthFirst((treeCtrl) => {\n              if (treeCtrl.node.children === undefined) {\n                const enable = olArray.includes(groupLayersArray, treeCtrl.node.name);\n                treeCtrl.setState(enable ? 'on' : 'off', false);\n              }\n            });\n          }\n        }\n      });\n      const firstParents = this.gmfTreeManager_.rootCtrl.children;\n      firstParents.forEach((firstParent) => {\n        firstParent.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.getState() !== 'indeterminate') {\n            this.rootScope_.$broadcast('ngeo-layertree-state', treeCtrl, firstParent);\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n      });\n    });\n  });\n};\n\n\n// === ngeoFeatures, A.K.A features from the DrawFeature, RedLining  ===\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesAdd_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.addNgeoFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesRemove_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.removeNgeoFeature_(feature);\n};\n\n\n/**\n * Listen to any changes that may occur within the feature in order to\n * update the state of the permalink accordingly.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(feature, 'change',\n      this.ngeoDebounce_(this.handleNgeoFeaturesChange_, 250, true), this)\n  );\n};\n\n\n/**\n * Unregister any event listener from the feature.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.handleNgeoFeaturesChange_();\n};\n\n\n/**\n * Called once upon initialization of the permalink service if there's at\n * least one feature in the ngeoFeatures collection, then called every time\n * the collection changes or any of the features within the collection changes.\n * @private\n */\nexports.prototype.handleNgeoFeaturesChange_ = function() {\n  if (!this.ngeoFeatures_) {\n    return;\n  }\n  const features = this.ngeoFeatures_.getArray();\n  const data = this.featureHashFormat_.writeFeatures(features);\n\n  const object = {};\n  object[gmfBase.PermalinkParam.FEATURES] = data;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Get the query data for a WFS permalink.\n * @return {?ngeox.WfsPermalinkData} The query data.\n * @private\n */\nexports.prototype.getWfsPermalinkData_ = function() {\n  const wfsLayer = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_LAYER);\n  if (!wfsLayer) {\n    return null;\n  }\n\n  const numGroups = this.ngeoLocation_.getParamAsInt(gmfBase.PermalinkParam.WFS_NGROUPS);\n  const paramKeys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.WFS);\n\n  const filterGroups = [];\n  let filterGroup;\n  if (numGroups === undefined) {\n    // no groups are used, e.g. '?wfs_layer=fuel&wfs_osm_id=123\n    filterGroup = this.createFilterGroup_(exports.ParamPrefix.WFS, paramKeys);\n    if (filterGroup !== null) {\n      filterGroups.push(filterGroup);\n    }\n  } else {\n    // filter groups are used, e.g. '?wfs_layer=osm_scale&wfs_ngroups=2&wfs_0_ele=380&\n    // wfs_0_highway=bus_stop&&wfs_1_name=Grand-Pont'\n    for (let i = 0; i < numGroups; i++) {\n      filterGroup = this.createFilterGroup_(`${exports.ParamPrefix.WFS + i}_`, paramKeys);\n      if (filterGroup !== null) {\n        filterGroups.push(filterGroup);\n      }\n    }\n  }\n\n  if (filterGroups.length == 0) {\n    return null;\n  }\n\n  const showFeaturesParam = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_SHOW_FEATURES);\n  const showFeatures = !(showFeaturesParam === '0' || showFeaturesParam === 'false');\n\n  return {\n    wfsType: wfsLayer,\n    showFeatures: showFeatures,\n    filterGroups: filterGroups\n  };\n};\n\n\n/**\n * Create a filter group for a given prefix from the query params.\n * @param {string} prefix E.g. `wfs_` or `wfs_0_`.\n * @param {Array.<string>} paramKeys All param keys starting with `wfs_`.\n * @return {ngeox.WfsPermalinkFilterGroup|null} A filter group.\n * @private\n */\nexports.prototype.createFilterGroup_ = function(prefix, paramKeys) {\n  /**\n   * @type {Array.<ngeox.WfsPermalinkFilter>}\n   */\n  const filters = [];\n\n  paramKeys.forEach((paramKey) => {\n    if (paramKey == gmfBase.PermalinkParam.WFS_LAYER || paramKey == gmfBase.PermalinkParam.WFS_SHOW_FEATURES ||\n        paramKey == gmfBase.PermalinkParam.WFS_NGROUPS || paramKey.indexOf(prefix) != 0) {\n      return;\n    }\n    const value = this.ngeoLocation_.getParam(paramKey);\n    if (!value) {\n      return;\n    }\n\n    let condition = value;\n    if (value.indexOf(',') > -1) {\n      condition = value.split(',');\n    }\n\n    const filter = {\n      property: paramKey.replace(prefix, ''),\n      condition: condition\n    };\n    filters.push(filter);\n  });\n\n  return (filters.length > 0) ? {filters} : null;\n};\n\n\n// === External Data Sources management ===\n\n\n/**\n * @return {!angular.$q.Promise} Promise\n * @private\n */\n\nexports.prototype.initExternalDataSources_ = function() {\n\n  const ngeoQuerent = googAsserts.assert(this.ngeoQuerent_);\n  const gmfExtDSManager = googAsserts.assert(\n    this.gmfExternalDataSourcesManager_);\n\n  const promises = [];\n\n  const layerNamesString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES);\n  const urlsString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS);\n\n  if (layerNamesString && urlsString) {\n\n    const layerNames = layerNamesString.split(exports.ExtDSSeparator.LIST);\n    const urls = urlsString.split(exports.ExtDSSeparator.LIST);\n\n    for (let i = 0, ii = urls.length; i < ii; i++) {\n      // Stop iterating if we do not have the same number of urls and layer\n      // names\n      const groupLayerNamesString = layerNames[i];\n\n      if (!groupLayerNamesString) {\n        break;\n      }\n\n      const groupLayerNames = groupLayerNamesString.split(\n        exports.ExtDSSeparator.NAMES);\n      const url = urls[i];\n\n      const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n      const getCapabilitiesDefer = this.q_.defer();\n      promises.push(getCapabilitiesDefer.promise);\n\n      if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n        ngeoQuerent.wmsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n        ngeoQuerent.wmtsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMTS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else {\n        // Wrong service type\n        getCapabilitiesDefer.reject({\n          groupLayerNames,\n          serviceType,\n          url\n        });\n      }\n    }\n  }\n\n  return this.q_.all(promises).then(\n    (responses) => {\n      for (const response of responses) {\n\n        // WMS - For each layer name, find its layer capability object, then\n        //       create the data source\n        if (response.serviceType === ngeoDatasourceOGC.Type.WMS) {\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmsFindLayerCapability(\n              response.capabilities['Capability']['Layer']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n\n        } else if (response.serviceType === ngeoDatasourceOGC.Type.WMTS) {\n\n          // WMTS - For each layer name, find its layer capability object, then\n          //        create the data source\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmtsFindLayerCapability(\n              response.capabilities['Contents']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMTSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n        }\n      }\n    },\n    (rejections) => {\n      // TODO - handle rejections\n    }\n  );\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionAdd_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.registerExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.registerExternalDSGroup_ = function(group) {\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Contains the layer name\n * @param {!ol.layer.Base} layer The layer to inspect\n * @param {string} name The layer name to find\n * @return {boolean} The containing status\n */\nexports.prototype.containsLayerName = function(layer, name) {\n  if (layer instanceof olLayerGroup) {\n    for (const l of layer.getLayers().getArray()) {\n      googAsserts.assert(l);\n      if (this.containsLayerName(l, name)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return layer.get('layerNodeName') == name;\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionRemove_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.unregisterExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.unregisterExternalDSGroup_ = function(group) {\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Set the External Data Sources parameters in the url.\n * @private\n */\nexports.prototype.setExternalDataSourcesState_ = function() {\n\n  if (this.setExternalDataSourcesStatePromise_) {\n    this.$timeout_.cancel(this.setExternalDataSourcesStatePromise_);\n  }\n\n  this.setExternalDataSourcesStatePromise_ = this.$timeout_(() => {\n    const names = [];\n    const urls = [];\n\n    // (1) Collect WMS Groups and their layer names\n    for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n\n      // (1a) url\n      urls.push(wmsGroup.url);\n\n      // (1b) layer names\n      const wmsGroupLayerNames = [];\n      for (const wmsDataSource of wmsGroup.dataSources) {\n        googAsserts.assertInstanceof(wmsDataSource, ngeoDatasourceOGC);\n\n        // External WMS data sources always have only one OGC layer name,\n        // as they are created using a single Capability Layer object that\n        // has only 1 layer name\n        const layerName = wmsDataSource.getOGCLayerNames()[0];\n        wmsGroupLayerNames.push(layerName);\n      }\n      names.push(wmsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (2) Collect WMTS Groups and their layer names\n    for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n\n      // (2a) url\n      urls.push(wmtsGroup.url);\n\n      // (2b) layer names\n      const wmtsGroupLayerNames = [];\n      for (const wmtsDataSource of wmtsGroup.dataSources) {\n        googAsserts.assert(wmtsDataSource.wmtsLayer);\n        wmtsGroupLayerNames.push(wmtsDataSource.wmtsLayer);\n      }\n      names.push(wmtsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (3) Update state\n    this.ngeoStateManager_.updateState({\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES]: names.join(\n        exports.ExtDSSeparator.LIST\n      ),\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS]: urls.join(\n        exports.ExtDSSeparator.LIST\n      )\n    });\n\n    // (4) Reset promise\n    this.setExternalDataSourcesStatePromise_ = null;\n  });\n};\n\n\n/**\n * Clean the permalink parameters\n * @param {!Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n */\nexports.prototype.cleanParams = function(groups) {\n  const keys = googAsserts.assert(this.ngeoLocation_.getParamKeys());\n  for (const key of keys) {\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_LAYERS)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_LAYERS.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_OPACITY)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_OPACITY.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n  }\n  this.$timeout_(() => {\n    if (!this.map_) {\n      return;\n    }\n    const layer = this.map_.getLayerGroup();\n    googAsserts.assert(layer);\n    for (const key of keys) {\n      if (key.startsWith(exports.ParamPrefix.TREE_ENABLE)) {\n        const value = key.substring(exports.ParamPrefix.TREE_ENABLE.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n      if (key.startsWith(exports.ParamPrefix.TREE_OPACITY)) {\n        const value = key.substring(exports.ParamPrefix.TREE_OPACITY.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n    }\n  });\n};\n\n\nexports.module = angular.module('gmfPermalink', [\n  ngeoStatemanagerModule.name,\n  gmfThemeThemes.module.name,\n  gmfThemeManager.module.name,\n  ngeoDrawFeatures.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoLayertreeController.module.name,\n]);\n\nexports.module.service('gmfPermalink', exports);\n\n\n/**\n * @enum {string}\n */\nexports.OpenLayersLayerProperties = {\n  OPACITY: 'opacity'\n};\n\n/**\n * @enum {string}\n */\nexports.ParamPrefix = {\n  DIMENSIONS: 'dim_',\n  TREE_ENABLE: 'tree_enable_',\n  TREE_GROUP_LAYERS: 'tree_group_layers_',\n  TREE_GROUP_OPACITY: 'tree_group_opacity_',\n  TREE_OPACITY: 'tree_opacity_',\n  WFS: 'wfs_'\n};\n\n\n/**\n * External data source separators\n * @enum {string}\n */\nexports.ExtDSSeparator = {\n  LIST: ',',\n  NAMES: ';'\n};\n\n\nexports.module.value('gmfPermalinkOptions',\n  /** @type {gmfx.PermalinkOptions} */ ({}));\n\n\n/** Configure the ngeo state manager */\n(function() {\n  const regexp = [];\n  for (const key1 in exports.ParamPrefix) {\n    regexp.push(new RegExp(`${exports.ParamPrefix[key1]}.*`));\n  }\n  for (const key2 in gmfBase.PermalinkParam) {\n    regexp.push(new RegExp(exports.ParamPrefix[key2]));\n  }\n  ngeoStatemanagerService.module.value('ngeoUsedKeyRegexp', regexp);\n})();\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/permalink/Permalink.js","/**\n * @module ngeo.message.Notification\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * Provides methods to display any sort of messages, notifications, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoNotification\n * @abstract\n * @ngInject\n */\nconst exports = function($timeout) {\n\n  ngeoMessageMessage.call(this);\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  const container = angular.element('<div class=\"ngeo-notification\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * @type {Object.<number, ngeo.message.Notification.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Default delay (in milliseconds) a message should be displayed.\n * @type {number}\n * @private\n */\nexports.DEFAULT_DELAY_ = 7000;\n\n\n// MAIN API METHODS\n\n\n/**\n * Display the given message string or object or list of message strings or\n * objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.notify = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Clears all messages that are currently being shown.\n * @export\n */\nexports.prototype.clear = function() {\n  for (const uid in this.cache_) {\n    this.clearMessageByCacheItem_(this.cache_[parseInt(uid, 10)]);\n  }\n};\n\n\n/**\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  const classNames = ['alert', 'fade'];\n  switch (type) {\n    case ngeoMessageMessage.Type.ERROR:\n      classNames.push('alert-danger');\n      break;\n    case ngeoMessageMessage.Type.INFORMATION:\n      classNames.push('alert-info');\n      break;\n    case ngeoMessageMessage.Type.SUCCESS:\n      classNames.push('alert-success');\n      break;\n    case ngeoMessageMessage.Type.WARNING:\n      classNames.push('alert-warning');\n      break;\n    default:\n      break;\n  }\n\n  const el = angular.element(`<div class=\"${classNames.join(' ')}\"></div>`);\n  let container;\n\n  if (message.target) {\n    container = angular.element(message.target);\n  } else {\n    container = this.container_;\n  }\n\n  container.append(el);\n  el.html(message.msg).addClass('in');\n\n  const delay = message.delay !== undefined ? message.delay :\n    exports.DEFAULT_DELAY_;\n\n  const item = /** @type {ngeo.message.Notification.CacheItem} */ ({\n    el\n  });\n\n  // Keep a reference to the promise, in case we want to manually cancel it\n  // before the delay\n  const uid = olBase.getUid(el);\n  item.promise = this.timeout_(() => {\n    el.alert('close');\n    delete this.cache_[uid];\n  }, delay);\n\n  this.cache_[uid] = item;\n};\n\n\n/**\n * Clear a message using its cache item.\n * @param {ngeo.message.Notification.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.clearMessageByCacheItem_ = function(item) {\n  const el = item.el;\n  const promise = item.promise;\n  const uid = olBase.getUid(el);\n\n  // Close the message\n  el.alert('close');\n\n  // Cancel timeout in case we want to stop before delay. If called by the\n  // timeout itself, then this has no consequence.\n  this.timeout_.cancel(promise);\n\n  // Delete the cache item\n  delete this.cache_[uid];\n};\n\n\n/**\n * @typedef {{\n *     el: angular.JQLite,\n *     promise: angular.$q.Promise\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoNotification', [\n]);\n\nexports.module.service('ngeoNotification', exports);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/message/Notification.js","/**\n * @module ngeo.datasource.WMSGroup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class extends ngeoDatasourceOGCGroup {\n\n  /**\n   * A WMSGroup data source combines multiple `ngeo.datasource.OGC` objects\n   * that have the 'WMS' type. Its main goal is to create a single\n   * `ol.layer.Image` object in which the data source visible properties\n   * determine the WMS LAYERS parameter.\n   *\n   * Note: the layer is not added to the map here.\n   *\n   * @struct\n   * @param {ngeox.datasource.WMSGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {ol.layer.Image}\n     * @private\n     */\n    this.layer_;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = injector.get('ngeoLayerHelper');\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.wmsDataSourceUnregister_ = {};\n\n\n    this.init_();\n  }\n\n  /**\n   * @private\n   */\n  init_() {\n    googAsserts.assert(\n      this.dataSources.length, 'At least one data source is required.');\n\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  destroy() {\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.unregisterDataSource_(dataSource);\n    }\n    super.destroy();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {ol.layer.Image} layer\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n\n    const id = dataSource.id;\n\n    this.wmsDataSourceUnregister_[id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this)\n    );\n\n    if (!this.layer_) {\n      this.layer_ = this.ngeoLayerHelper_.createBasicWMSLayerFromDataSource(\n        dataSource\n      );\n    } else {\n      this.layer_.get('querySourceIds').push(id);\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLayer_() {\n    const layer = this.layer;\n    let layerNames = [];\n\n    // (1) Collect layer names from data sources in the group\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      if (dataSource.visible) {\n        layerNames = layerNames.concat(dataSource.getOGCLayerNames());\n      }\n    }\n\n    // (2) Update layer object\n    this.ngeoLayerHelper_.updateWMSLayerState(layer, layerNames.join(','));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n\n    const id = dataSource.id;\n    const layer = this.layer;\n\n    // Unregister watcher\n    const unregister = this.wmsDataSourceUnregister_[id];\n    unregister();\n    delete this.wmsDataSourceUnregister_[id];\n\n    // Remove DS from the group\n    olArray.remove(this.dataSources, dataSource);\n\n    // Remove query source id\n    const ids = this.ngeoLayerHelper_.getQuerySourceIds(layer);\n    if (ids) {\n      olArray.remove(ids, id);\n    }\n\n    if (this.dataSources.length) {\n      this.updateLayer_();\n    }\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/WMSGroup.js","/**\n * @module ngeo.datasource.OGCGroup\n */\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A OGCGroup data source combines multiple `ngeo.datasource.OGC` objects.\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.url_ = options.url;\n  }\n\n  /**\n   * @return {string} Url\n   * @export\n   */\n  get url() {\n    return this.url_;\n  }\n};\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/datasource/OGCGroup.js"],"sourceRoot":""}