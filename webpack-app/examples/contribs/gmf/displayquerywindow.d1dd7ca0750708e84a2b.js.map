{"version":3,"sources":["webpack:///./contribs/gmf/src/query/windowComponent.js","webpack:///./src/misc/swipe.js","webpack:///./contribs/gmf/examples/displayquerywindow.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js"],"names":["__webpack_require__","e","Error","code","olObj","exports","angular","module","_FeatureOverlayMgr2","default","name","_FeatureHelper2","_swipe2","_MapQuerent2","gmfDisplayquerywindowTemplateUrl","$element","$attrs","config","$animateProvider","classNameFilter","value","templateUrl","undefined","_index2","baseModuleTemplateUrl","component_","controller","bindings","draggableContainment","featuresStyleFn","selectedFeatureStyleFn","defaultCollapsedFn","desktop","showUnqueriedLayers","component","Controller_","$scope","ngeoQueryResult","ngeoMapQuerent","ngeoFeatureOverlayMgr","_this","this","collapsed","showUnqueriedLayers_","sourcesFilter","queried","sources","total","pending","ngeoMapQuerent_","selectedSource","features_","_Collection2","ngeoFeatureOverlayMgr_","highlightFeatures_","source","feature","currentResult","isNext","animate","open","element_","$watchCollection","newQueryResult","oldQueryResult","updateQueryResult_","show","close","prototype","$onInit","featuresOverlay","getFeatureOverlay","setFeatures","featuresStyle","_asserts2","assertInstanceof","_Style2","setStyle","highlightFeaturesOverlay","highlightFeatureStyle","fill","_Fill2","color","stroke","_Stroke2","width","image","_Circle2","radius","find","draggable","cancel","containment","resizable","minHeight","minWidth","clear","updateFeatures_","setCurrentResult_","collectFeatures_","highlightCurrentFeature_","position","setHighlight","hasChanged","i","features","lastFeature","length","previous","getResultLength","animate_","next","queryResult","filter","assert","isEmpty","getFilteredFeatureValues","push","isFirst","isLast","getFeatureValues","ii","opt_lastFeature","remove","setSelectedSource","factory","POINTER_EVENTS","mouse","start","move","end","touch","pointer","getCoordinates","event","originalEvent","touches","changedTouches","x","clientX","y","clientY","getEvents","pointerTypes","eventType","res","forEach","pointerType","eventName","join","bind","element","eventHandlers","totalX","totalY","startCoords","lastPos","active","on","events","coords","Math","abs","preventDefault","makeSwipeDirective_","directiveName","direction","directive","$parse","$verticalSwipe","MAX_HORIZONTAL_DISTANCE","MAX_HORIZONTAL_RATIO","MIN_VERTICAL_DISTANCE","scope","attr","swipeHandler","valid","isDefined","deltaY","deltaX","validSwipe","$apply","triggerHandler","$event","_Manager2","_component2","_component4","_windowComponent2","_Themes2","_module2","_btnComponent2","limit","constant","queryresultComponent","controllerAs","QueryresultController","result","MainController","gmfThemes","gmfDataSourcesManager","loadThemes","featureStyle","map","_Map2","layers","_Tile2","_OSM2","view","_View2","projection","resolutions","center","zoom","setDatasourceMap","themes","treeSource","queryActive","getThemesObject","then","init","XYZ","opt_options","options","tileGrid","tilegrid","createXYZ","extent","extentFromProjection","maxZoom","minZoom","tileSize","TileImage","call","attributions","cacheSize","crossOrigin","opaque","reprojectionErrorThreshold","tileLoadFunction","tilePixelRatio","tileUrlFunction","url","urls","wrapX","transition","Object","ol","source_XYZ","OSM","ATTRIBUTION","__webpack_exports__"],"mappings":"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","file":"displayquerywindow.d1dd7ca0750708e84a2b.js","sourcesContent":["/**\n * @module gmf.query.windowComponent\n */\nimport gmfBase from 'gmf/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscSwipe from 'ngeo/misc/swipe.js';\n\n/** @suppress {extraRequire} - required for `ngeoQueryResult` */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport olCollection from 'ol/Collection.js';\nimport * as olObj from 'ol/obj.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n// webpack: import 'jquery-ui/ui/widgets/resizable.js';\n// webpack: import 'angular-animate';\n// webpack: import 'angular-touch';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfQueryWindowComponent', [\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscSwipe.name,\n  ngeoQueryMapQuerent.module.name,\n  'ngAnimate',\n  'ngTouch',\n]);\n\n\nexports.config(['$animateProvider',\n  /**\n   * For performance reason, only perform animation on elements that have the\n   * `gmf-animatable` css class.\n   * @param {angular.$animateProvider} $animateProvider animate provider.\n   */\n  function($animateProvider) {\n    $animateProvider.classNameFilter(/gmf-animatable/);\n  }\n]);\n\n\nexports.value('gmfDisplayquerywindowTemplateUrl',\n  /**\n     * @param {!angular.JQLite} $element Element.\n     * @param {!angular.Attributes} $attrs Attributes.\n     * @return {string} Template.\n     */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfDisplayquerywindowTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      `${gmfBase.baseModuleTemplateUrl}/query/windowComponent.html`;\n  });\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfDisplayquerywindowTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfDisplayquerywindowTemplateUrl($element, $attrs, gmfDisplayquerywindowTemplateUrl) {\n  return gmfDisplayquerywindowTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provide a component to display results of the {@link ngeo.queryResult}\n * and shows related features on the map using the {@link ngeo.map.FeatureOverlayMgr}.\n *\n * You can override the default component's template by setting the\n * value `gmfDisplayquerywindowTemplateUrl`.\n *\n * Features displayed on the map use a default style but you can override these\n * styles by passing ol.style.Style objects as attributes of this component.\n *\n * Example:\n *\n *      <gmf-displayquerywindow\n *        gmf-displayquerywindow-featuresstyle=\"ctrl.styleForAllFeatures\"\n *        gmf-displayquerywindow-selectedfeaturestyle=\"ctrl.styleForTheCurrentFeature\">\n *      </gmf-displayquerywindow>\n *\n * @htmlAttribute {ol.style.Style} gmf-displayquerywindow-featuresstyle A style\n *     object for all features from the result of the query.\n * @htmlAttribute {ol.style.Style} selectedfeaturestyle A style\n *     object for the current displayed feature.\n * @htmlAttribute {boolean=} defaultcollapsed If the query result window is\n *     collapsed.\n * @htmlAttribute {boolean} desktop If the component is used in the desktop\n *     application.\n * @htmlAttribute {boolean} showunqueriedlayers If also layers, that have not\n *     been queried for the last query, should be shown in the filter.\n *\n * @ngdoc component\n * @ngname gmfDisplayquerywindow\n */\nexports.component_ = {\n  controller: 'GmfDisplayquerywindowController as ctrl',\n  bindings: {\n    'draggableContainment': '<?gmfDisplayquerywindowDraggableContainment',\n    'featuresStyleFn': '&gmfDisplayquerywindowFeaturesstyle',\n    'selectedFeatureStyleFn': '&gmfDisplayquerywindowSelectedfeaturestyle',\n    'defaultCollapsedFn': '&?gmfDisplayquerywindowDefaultcollapsed',\n    'desktop': '=gmfDisplayquerywindowDesktop',\n    'showUnqueriedLayers': '=gmfDisplayquerywindowShowunqueriedlayers'\n  },\n  templateUrl: gmfDisplayquerywindowTemplateUrl\n};\n\n\nexports.component('gmfDisplayquerywindow', exports.component_);\n\n\n/**\n * @param {!jQuery} $element Element.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeox.QueryResult} ngeoQueryResult ngeo query result.\n * @param {!ngeo.query.MapQuerent} ngeoMapQuerent ngeo map querent service.\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n *     overlay manager service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDisplayquerywindowController\n */\nexports.Controller_ = function($element, $scope, ngeoQueryResult, ngeoMapQuerent,\n  ngeoFeatureOverlayMgr) {\n\n  /**\n   * @type {Element|string}\n   * @export\n   */\n  this.draggableContainment;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.desktop = false;\n\n  /**\n   * Is the window currently collapsed?\n   * When used for Desktop, it is shown non-collapsed.\n   * @type {boolean}\n   * @export\n   */\n  this.collapsed = !this.desktop;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.showUnqueriedLayers_ = false;\n\n  /**\n   * Object that is used to filter the source list in the template.\n   * @type {Object}\n   * @export\n   */\n  this.sourcesFilter = {'queried': true};\n\n  /**\n   * @type {ngeox.QueryResult}\n   * @export\n   */\n  this.ngeoQueryResult = {\n    sources: [],\n    total: 0,\n    pending: false\n  };\n\n  /**\n   * @type {!ngeo.query.MapQuerent}\n   * @private\n   */\n  this.ngeoMapQuerent_ = ngeoMapQuerent;\n\n  /**\n   * @type {?ngeox.QueryResultSource}\n   * @export\n   */\n  this.selectedSource = null;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.features_ = new olCollection();\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.highlightFeatures_ = new olCollection();\n\n  /**\n   * @type {?ngeox.QueryResultSource}\n   * @export\n   */\n  this.source = null;\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.feature = null;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.currentResult = -1;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isNext = true;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.animate = 0;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.open = false;\n\n  /**\n   * @const {!jQuery}\n   * @private\n   */\n  this.element_ = $element;\n\n  $scope.$watchCollection(\n    () => ngeoQueryResult,\n    (newQueryResult, oldQueryResult) => {\n      this.updateQueryResult_(newQueryResult);\n      if (newQueryResult.total > 0) {\n        this.show();\n      } else if (oldQueryResult !== newQueryResult) {\n        this.close();\n      }\n    });\n};\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.draggableContainment = this.draggableContainment || 'document';\n  this.desktop = this.desktop;\n  this.collapsed = this['defaultCollapsedFn'] ?\n    this['defaultCollapsedFn']() === true : !this.desktop;\n\n  this.showUnqueriedLayers_ = this['showUnqueriedLayers'] ?\n    this['showUnqueriedLayers'] === true : false;\n\n  this.sourcesFilter = this.showUnqueriedLayers_ ? {} : {'queried': true};\n\n  const featuresOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  featuresOverlay.setFeatures(this.features_);\n  const featuresStyle = this['featuresStyleFn']();\n  if (featuresStyle !== undefined) {\n    googAsserts.assertInstanceof(featuresStyle, olStyleStyle);\n    featuresOverlay.setStyle(featuresStyle);\n  }\n\n  const highlightFeaturesOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  highlightFeaturesOverlay.setFeatures(this.highlightFeatures_);\n  let highlightFeatureStyle = this['selectedFeatureStyleFn']();\n  if (highlightFeatureStyle !== undefined) {\n    googAsserts.assertInstanceof(highlightFeatureStyle, olStyleStyle);\n  } else {\n    const fill = new olStyleFill({color: [255, 0, 0, 0.6]});\n    const stroke = new olStyleStroke({color: [255, 0, 0, 1], width: 2});\n    highlightFeatureStyle = new olStyleStyle({\n      fill: fill,\n      image: new olStyleCircle({\n        fill: fill,\n        radius: 5,\n        stroke: stroke\n      }),\n      stroke: stroke\n    });\n  }\n  highlightFeaturesOverlay.setStyle(highlightFeatureStyle);\n\n  if (this.desktop) {\n    this.element_.find('.gmf-displayquerywindow .container').draggable({\n      'cancel': 'input,textarea,button,select,option,tr',\n      'containment': this.draggableContainment\n    });\n    this.element_.find('.gmf-displayquerywindow .container').resizable({\n      'minHeight': 240,\n      'minWidth': 240\n    });\n  }\n};\n\n\n/**\n * Remove current displayed results then get new results from the\n * ngeoQueryResult service. Display all results on the map and display,\n * highlight the first feature.\n * @export\n */\nexports.Controller_.prototype.show = function() {\n  this.clear();\n  this.updateFeatures_();\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.updateFeatures_ = function() {\n  this.setCurrentResult_(0, false);\n  if (this.source !== null) {\n    this.collectFeatures_();\n    this.highlightCurrentFeature_();\n    this.open = true;\n  }\n};\n\n/**\n * Select a source and a feature depending of the given position.\n * @param {number} position The index of the feature. If the position is bigger\n * than the length of the first source, get it in the next source. Etc.\n * @param {boolean} setHighlight True to set the highlight automatically.\n * @return {boolean} True if result has changed. False else.\n * @private\n */\nexports.Controller_.prototype.setCurrentResult_ = function(\n  position, setHighlight) {\n  let hasChanged = false;\n  if (position !== this.currentResult) {\n    let i, source, features;\n    const lastFeature = this.feature;\n    const sources = this.ngeoQueryResult.sources;\n    this.currentResult = position;\n    for (i = 0; i < sources.length; i++) {\n      source = sources[i];\n      if (this.selectedSource !== null && this.selectedSource !== source) {\n        // when filtering on a source, only consider features of the selected source\n        continue;\n      }\n      features = source.features;\n      if (position >= features.length) {\n        position -= features.length;\n      } else {\n        this.source = source;\n        this.feature = source.features[position];\n        hasChanged = true;\n        break;\n      }\n    }\n    if (setHighlight) {\n      this.highlightCurrentFeature_(lastFeature);\n    }\n  }\n  return hasChanged;\n};\n\n\n/**\n * Select the logical previous source and feature then highlight this feature on\n * the map.\n * @export\n */\nexports.Controller_.prototype.previous = function() {\n  let position = this.currentResult - 1;\n  if (position < 0) {\n    position = this.getResultLength() - 1;\n  }\n  const hasChanged = this.setCurrentResult_(position, true);\n  if (hasChanged) {\n    this.animate_(false);\n  }\n};\n\n\n/**\n * Select the logical next source and feature then highlight this feature on\n * the map.\n * @export\n */\nexports.Controller_.prototype.next = function() {\n  let position = this.currentResult + 1;\n  const positionMax = this.getResultLength() - 1;\n  if (position > positionMax) {\n    position = 0;\n  }\n  const hasChanged = this.setCurrentResult_(position, true);\n  if (hasChanged) {\n    this.animate_(true);\n  }\n};\n\n\n/**\n * Remove features without properties from the query result.\n * @param {ngeox.QueryResult} queryResult ngeo query result.\n * @private\n */\nexports.Controller_.prototype.updateQueryResult_ = function(queryResult) {\n  this.ngeoQueryResult.total = 0;\n  this.ngeoQueryResult.sources.length = 0;\n  for (let i = 0; i < queryResult.sources.length; i++) {\n    const source = queryResult.sources[i];\n    source.features = source.features.filter((feature) => {\n      googAsserts.assert(feature);\n      return !olObj.isEmpty(ngeoMiscFeatureHelper.getFilteredFeatureValues(feature));\n    });\n    this.ngeoQueryResult.sources.push(source);\n    this.ngeoQueryResult.total += source.features.length;\n  }\n};\n\n/**\n * Get the total count of features in the result of the query. If a source\n * has been select, only the number of features of that source are returned.\n * @return {number} Total number of features.\n * @export\n */\nexports.Controller_.prototype.getResultLength = function() {\n  if (this.selectedSource === null) {\n    return this.ngeoQueryResult.total;\n  } else {\n    return this.selectedSource.features.length;\n  }\n};\n\n\n/**\n * @return {boolean} If the first result is active.\n * @export\n */\nexports.Controller_.prototype.isFirst = function() {\n  return this.currentResult == 0;\n};\n\n\n/**\n * @return {boolean} If the last result is active.\n * @export\n */\nexports.Controller_.prototype.isLast = function() {\n  return this.currentResult == this.getResultLength() - 1;\n};\n\n\n/**\n * Delete the unwanted ol3 properties from the current feature then return the\n * properties.\n * @return {Object?} Filtered properties of the current feature or null.\n * @export\n */\nexports.Controller_.prototype.getFeatureValues = function() {\n  if (!this.feature) {\n    return null;\n  }\n  return ngeoMiscFeatureHelper.getFilteredFeatureValues(this.feature);\n};\n\n\n/**\n * Special function that's used to set the \"animation\" value after to set the\n * \"isNext\" value. The aim is to wait on Angular to add a class (corresponding\n * to \"isNext\") on the DOM before to set the \"animation\" value and do the\n * animation.\n * @param {boolean} isNext used to indicate if the user wants to see the next\n * or the previous result.\n * @private\n */\nexports.Controller_.prototype.animate_ = function(isNext) {\n  this.isNext = isNext;\n  this.animate++;\n};\n\n\n/**\n * Collect all features in the queryResult object.\n * @private\n */\nexports.Controller_.prototype.collectFeatures_ = function() {\n  const sources = this.ngeoQueryResult.sources;\n  this.features_.clear();\n  for (let i = 0; i < sources.length; i++) {\n    const source = sources[i];\n    if (this.selectedSource !== null && this.selectedSource !== source) {\n      // when filtering on a source, only add features of the selected source\n      continue;\n    }\n    const features = source.features;\n    for (let ii = 0; ii < features.length; ii++) {\n      this.features_.push(features[ii]);\n    }\n  }\n};\n\n\n/**\n * Highlight the current displayed feature.\n * @param {ol.Feature=} opt_lastFeature last highlighted feature. Require if\n * it exists because it must be added to the 'non-selected' features collection.\n * @private\n */\nexports.Controller_.prototype.highlightCurrentFeature_ =\nfunction(opt_lastFeature) {\n  this.highlightFeatures_.clear();\n  this.features_.remove(this.feature);\n  this.highlightFeatures_.push(this.feature);\n  if (opt_lastFeature !== undefined) {\n    this.features_.push(opt_lastFeature);\n  }\n};\n\n\n/**\n * Remove the current selected feature and source and remove all features\n * from the map.\n * @export\n */\nexports.Controller_.prototype.close = function() {\n  this.open = false;\n  this.clear();\n  this.ngeoMapQuerent_.clear();\n};\n\n\n/**\n * Remove the current selected feature and source and remove all features\n * from the map.\n * @export\n */\nexports.Controller_.prototype.clear = function() {\n  this.feature = null;\n  this.source = null;\n  this.currentResult = -1;\n  this.features_.clear();\n  this.highlightFeatures_.clear();\n  this.selectedSource = null;\n};\n\n\n/**\n * @param {ngeox.QueryResultSource} source The source to select.\n * @export\n */\nexports.Controller_.prototype.setSelectedSource = function(source) {\n  if (source !== null && source.features.length <= 0) {\n    // sources with no results can not be selected\n    return;\n  }\n  this.clear();\n  this.selectedSource = source;\n  this.updateFeatures_();\n};\n\n\nexports.controller('GmfDisplayquerywindowController',\n  exports.Controller_);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/src/query/windowComponent.js","/**\n * @module ngeo.misc.swipe\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMiscSwipe', []);\n\n\n/**\n * ===========================================\n * NOTE: It is an inversed copy of ngSwipe.\n * Angular ngSwipe assumes that vertical\n * swipe is a scroll.\n * For more details:\n * https://docs.angularjs.org/api/ngTouch/service/$swipe\n * ===========================================\n */\n\n/**\n * @ngdoc service\n * @name $verticalSwipe\n *\n * @description\n * The `$verticalSwipe` service is a service that abstracts the messier details of hold-and-drag swipe\n * behavior, to make implementing swipe-related directives more convenient.\n *\n * Requires the {@link ngTouch `ngTouch`} module to be installed.\n *\n * `$verticalSwipe` is used by the `ngeoSwipeUp` and `ngeoSwipeDown` directives.\n *\n * # Usage\n * The `$verticalSwipe` service is an object with a single method: `bind`. `bind` takes an element\n * which is to be watched for swipes, and an object with four handler functions. See the\n * documentation for `bind` below.\n */\n\nexports.factory('$verticalSwipe', [function() {\n  // The total distance in any direction before we make the call on swipe vs. scroll.\n  const MOVE_BUFFER_RADIUS = 10;\n\n  const POINTER_EVENTS = {\n    'mouse': {\n      start: 'mousedown',\n      move: 'mousemove',\n      end: 'mouseup'\n    },\n    'touch': {\n      start: 'touchstart',\n      move: 'touchmove',\n      end: 'touchend',\n      cancel: 'touchcancel'\n    },\n    'pointer': {\n      start: 'pointerdown',\n      move: 'pointermove',\n      end: 'pointerup',\n      cancel: 'pointercancel'\n    }\n  };\n\n  function getCoordinates(event) {\n    const originalEvent = event.originalEvent || event;\n    const touches = originalEvent.touches && originalEvent.touches.length ? originalEvent.touches : [originalEvent];\n    const e = (originalEvent.changedTouches && originalEvent.changedTouches[0]) || touches[0];\n\n    return {\n      x: e.clientX,\n      y: e.clientY\n    };\n  }\n\n  function getEvents(pointerTypes, eventType) {\n    const res = [];\n    angular.forEach(pointerTypes, (pointerType) => {\n      const eventName = POINTER_EVENTS[pointerType][eventType];\n      if (eventName) {\n        res.push(eventName);\n      }\n    });\n    return res.join(' ');\n  }\n\n  return {\n    /**\n     * @ngdoc method\n     * @name $verticalSwipe#bind\n     * @param {!angular.JQLite} element Element.\n     * @param {Object} eventHandlers - Event handlers object with `start`, `cancel` and `end` callbacks\n     * @param {Array<string>} pointerTypes - Types of pointer\n     *\n     * @description\n     * The main method of `$verticalSwipe`. It takes an element to be watched for swipe motions, and an\n     * object containing event handlers.\n     * The pointer types that should be used can be specified via the optional\n     * third argument, which is an array of strings `'mouse'`, `'touch'` and `'pointer'`. By default,\n     * `$verticalSwipe` will listen for `mouse`, `touch` and `pointer` events.\n     *\n     * The four events are `start`, `move`, `end`, and `cancel`. `start`, `move`, and `end`\n     * receive as a parameter a coordinates object of the form `{ x: 150, y: 310 }` and the raw\n     * `event`. `cancel` receives the raw `event` as its single parameter.\n     *\n     * `start` is called on either `mousedown`, `touchstart` or `pointerdown`. After this event, `$verticalSwipe` is\n     * watching for `touchmove`, `mousemove` or `pointermove` events. These events are ignored until the total\n     * distance moved in either dimension exceeds a small threshold.\n     *\n     * Once this threshold is exceeded, either the vertical or vertical delta is greater.\n     * - If the vertical distance is greater, this is a swipe and `move` and `end` events follow.\n     * - If the horizontal distance is greater, this is a scroll, and we let the browser take over.\n     *   A `cancel` event is sent.\n     *\n     * `move` is called on `mousemove`, `touchmove` and `pointermove` after the above logic has determined that\n     * a swipe is in progress.\n     *\n     * `end` is called when a swipe is successfully completed with a `touchend`, `mouseup` or `pointerup`.\n     *\n     * `cancel` is called either on a `touchcancel` or `pointercancel`  from the browser, or when we begin scrolling\n     * as described above.\n     *\n     */\n    bind(element, eventHandlers, pointerTypes) {\n      // Absolute total movement, used to control swipe vs. scroll.\n      let totalX, totalY;\n      // Coordinates of the start position.\n      let startCoords;\n      // Last event's position.\n      let lastPos;\n      // Whether a swipe is active.\n      let active = false;\n\n      pointerTypes = pointerTypes || ['mouse', 'touch', 'pointer'];\n      element.on(getEvents(pointerTypes, 'start'), (event) => {\n        startCoords = getCoordinates(event);\n        active = true;\n        totalX = 0;\n        totalY = 0;\n        lastPos = startCoords;\n        if (eventHandlers['start']) {\n          eventHandlers['start'](startCoords, event);\n        }\n      });\n      const events = getEvents(pointerTypes, 'cancel');\n      if (events) {\n        element.on(events, (event) => {\n          active = false;\n          if (eventHandlers['cancel']) {\n            eventHandlers['cancel'](event);\n          }\n        });\n      }\n\n      element.on(getEvents(pointerTypes, 'move'), (event) => {\n        if (!active) {\n          return;\n        }\n\n        // Android will send a touchcancel if it thinks we're starting to scroll.\n        // So when the total distance (+ or - or both) exceeds 10px in either direction,\n        // we either:\n        // - On totalX > totalY, we send preventDefault() and treat this as a swipe.\n        // - On totalY > totalX, we let the browser handle it as a scroll.\n\n        if (!startCoords) {\n          return;\n        }\n        const coords = getCoordinates(event);\n\n        totalX += Math.abs(coords.x - lastPos.x);\n        totalY += Math.abs(coords.y - lastPos.y);\n\n        lastPos = coords;\n\n        if (totalX < MOVE_BUFFER_RADIUS && totalY < MOVE_BUFFER_RADIUS) {\n          return;\n        }\n\n        // One of totalX or totalY has exceeded the buffer, so decide on swipe vs. scroll.\n        if (totalX > totalY) {\n          // Allow native scrolling to take over.\n          active = false;\n          if (eventHandlers['cancel']) {\n            eventHandlers['cancel'](event);\n          }\n          return;\n        } else {\n          // Prevent the browser from scrolling.\n          event.preventDefault();\n          if (eventHandlers['move']) {\n            eventHandlers['move'](coords, event);\n          }\n        }\n      });\n\n      element.on(getEvents(pointerTypes, 'end'), (event) => {\n        if (!active) {\n          return;\n        }\n        active = false;\n        if (eventHandlers['end']) {\n          eventHandlers['end'](getCoordinates(event), event);\n        }\n      });\n    }\n  };\n}]);\n\nexports.makeSwipeDirective_ = function(directiveName, direction, eventName) {\n  exports.directive(directiveName, ['$parse', '$verticalSwipe', function($parse, $verticalSwipe) {\n    // The maximum horizontal delta for a swipe should be less than 75px.\n    const MAX_HORIZONTAL_DISTANCE = 75;\n    // Horizontal distance should not be more than a fraction of the vertical distance.\n    const MAX_HORIZONTAL_RATIO = 0.3;\n    // At least a 30px lateral motion is necessary for a swipe.\n    const MIN_VERTICAL_DISTANCE = 30;\n\n    return function(scope, element, attr) {\n      const swipeHandler = $parse(attr[directiveName]);\n\n      let startCoords, valid;\n\n      function validSwipe(coords) {\n        // Check that it's within the coordinates.\n        // Absolute vertical distance must be within tolerances.\n        // Horizontal distance, we take the current X - the starting X.\n        // This is negative for downward swipes and positive for upward swipes.\n        // After multiplying by the direction (-1 for down, +1 for up), legal swipes\n        // (ie. same direction as the directive wants) will have a positive delta and\n        // illegal ones a negative delta.\n        // Therefore this delta must be positive, and larger than the minimum.\n        if (!startCoords) {\n          return false;\n        }\n        const deltaY = (coords.y - startCoords.y) * direction;\n        const deltaX = Math.abs(coords.x - startCoords.x);\n        return valid && // Short circuit for already-invalidated swipes.\n            deltaX < MAX_HORIZONTAL_DISTANCE &&\n            deltaY > 0 &&\n            deltaY > MIN_VERTICAL_DISTANCE &&\n            deltaX / deltaY < MAX_HORIZONTAL_RATIO;\n      }\n\n      const pointerTypes = ['touch'];\n      if (!angular.isDefined(attr['ngeoSwipeDisableMouse'])) {\n        pointerTypes.push('mouse');\n      }\n      $verticalSwipe.bind(element, {\n        'start': function(coords, event) {\n          startCoords = coords;\n          valid = true;\n        },\n        'cancel': function(event) {\n          valid = false;\n        },\n        'end': function(coords, event) {\n          if (validSwipe(coords)) {\n            scope.$apply(() => {\n              element.triggerHandler(eventName);\n              swipeHandler(scope, {$event: event});\n            });\n          }\n        }\n      }, pointerTypes);\n    };\n  }]);\n};\n\n// Down is negative Y-coordinate, up is positive.\nexports.makeSwipeDirective_('ngeoSwipeDown', 1, 'swipedown');\nexports.makeSwipeDirective_('ngeoSwipeUp', -1, 'swipeup');\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/misc/swipe.js","/**\n * @module gmfapp.displayquerywindow\n */\nlet exports = {};\n\n// webpack: import './displayquerywindow.css';\n// webpack: import './common_dependencies.js';\nimport gmfBase from 'gmf/index.js';\n\nimport gmfDatasourceManager from 'gmf/datasource/Manager.js';\nimport gmfLayertreeComponent from 'gmf/layertree/component.js';\n\n/** @suppress {extraRequire} */\nimport gmfMapComponent from 'gmf/map/component.js';\n\n/** @suppress {extraRequire} */\nimport gmfQueryWindowComponent from 'gmf/query/windowComponent.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\n\n/** @suppress {extraRequire} */\nimport ngeoQueryBboxQueryComponent from 'ngeo/query/bboxQueryComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoQueryMapQueryComponent from 'ngeo/query/mapQueryComponent.js';\n\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olSourceOSM from 'ol/source/OSM.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport ngeoMapModule from 'ngeo/map/module.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('gmfapp', [\n  gmfDatasourceManager.module.name,\n  gmfLayertreeComponent.name,\n  gmfMapComponent.name,\n  gmfQueryWindowComponent.name,\n  gmfThemeThemes.module.name,\n  ngeoMapModule.name, // for ngeo.map.FeatureOverlay, perhaps remove me\n  ngeoMiscBtnComponent.name,\n]);\n\n\nexports.module.value('ngeoQueryOptions', {\n  'limit': 20\n});\n\n\nexports.module.value(\n  'gmfTreeUrl',\n  'https://geomapfish-demo.camptocamp.net/2.2/wsgi/themes?' +\n        'version=2&background=background');\n\nexports.constant('defaultTheme', 'Demo');\nexports.constant('angularLocaleScript', '../build/angular-locale_{{locale}}.js');\n\n\n/**\n * Demo, NOT USED.\n * A sample component to display the result.\n *\n * @type {!angular.Component}\n */\nexports.queryresultComponent = {\n  controller: 'AppQueryresultController',\n  controllerAs: 'qrCtrl',\n  templateUrl: 'partials/queryresult.html'\n};\n\nexports.module.component('appQueryresult', exports.queryresultComponent);\n\n\n/**\n * Demo, NOT USED.\n * @param {ngeox.QueryResult} ngeoQueryResult Query service.\n * @constructor\n * @ngInject\n */\nexports.QueryresultController = function(ngeoQueryResult) {\n\n  /**\n   * @type {ngeox.QueryResult}\n   * @export\n   */\n  this.result = ngeoQueryResult;\n\n};\n\n\nexports.module.controller('AppQueryresultController', exports.QueryresultController);\n\n\n/**\n * @constructor\n * @param {gmf.theme.Themes} gmfThemes The gmf themes service.\n * @param {gmf.datasource.Manager} gmfDataSourcesManager The gmf\n *     data sources manager service.\n * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n *   overlay manager service.\n * @ngInject\n */\nexports.MainController = function(gmfThemes, gmfDataSourcesManager,\n  ngeoFeatureOverlayMgr) {\n\n  gmfThemes.loadThemes();\n\n  const fill = new olStyleFill({color: [255, 170, 0, 0.6]});\n  const stroke = new olStyleStroke({color: [255, 170, 0, 1], width: 2});\n\n  /**\n   * FeatureStyle used by the gmf.query.windowComponent\n   * @type {ol.style.Style}\n   * @export\n   */\n  this.featureStyle = new olStyleStyle({\n    fill: fill,\n    image: new olStyleCircle({\n      fill: fill,\n      radius: 5,\n      stroke: stroke\n    }),\n    stroke: stroke\n  });\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ],\n    view: new olView({\n      projection: 'EPSG:21781',\n      resolutions: [200, 100, 50, 20, 10, 5, 2.5, 2, 1, 0.5],\n      center: [537635, 152640],\n      zoom: 3\n    })\n  });\n\n  // Init the datasources with our map.\n  gmfDataSourcesManager.setDatasourceMap(this.map);\n\n  /**\n   * @type {Array.<Object>|undefined}\n   * export\n   */\n  this.themes = undefined;\n\n  /**\n   * @type {Object|undefined}\n   * @export\n   */\n  this.treeSource = undefined;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.queryActive = true;\n\n  gmfThemes.getThemesObject().then((themes) => {\n    if (themes) {\n      this.themes = themes;\n      this.treeSource = themes[3];\n    }\n  });\n\n  ngeoFeatureOverlayMgr.init(this.map);\n};\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./contribs/gmf/examples/displayquerywindow.js","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = null\n// module chunks = ","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = null\n// module chunks = "],"sourceRoot":""}