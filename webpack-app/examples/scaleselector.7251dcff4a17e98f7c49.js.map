{"version":3,"sources":["webpack:///./examples/scaleselector.js","webpack:///./node_modules/openlayers/src/ol/source/OSM.js","webpack:///./node_modules/openlayers/src/ol/source/XYZ.js"],"names":["__webpack_require__","exports","module","angular","_module2","default","name","_filters2","MainController","$scope","this","map","_Map2","layers","_Tile2","source","_OSM2","view","_View2","center","zoom","maxZoom","scales","options","dropup","controller","__WEBPACK_IMPORTED_MODULE_1__source_XYZ_js__","OSM","opt_options","attributions","undefined","ATTRIBUTION","crossOrigin","url","call","cacheSize","opaque","reprojectionErrorThreshold","tileLoadFunction","wrapX","Object","__WEBPACK_IMPORTED_MODULE_0__index_js__","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_2__tilegrid_js__","XYZ","projection","tileGrid","createXYZ","extent","extentFromProjection","minZoom","tileSize","__WEBPACK_IMPORTED_MODULE_1__source_TileImage_js__","tilePixelRatio","tileUrlFunction","urls","transition"],"mappings":"iJAOA,QAAAA,EAAA,SAEAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,MACAA,EAAA,yDAXA,IAAMC,KAeNA,EAAQC,OAASC,QAAQD,OAAO,OAC9BE,EAAAC,QAAcC,KACdC,EAAAF,QAAgBC,OASlBL,EAAQO,eAAiB,SAASC,GAMhCC,KAAKC,IAAM,IAAAC,EAAAP,SACTQ,QACE,IAAAC,EAAAT,SACEU,OAAQ,IAAAC,EAAAX,WAGZY,KAAM,IAAAC,EAAAb,SACJc,SAAU,YAAa,YACvBC,KAAM,EACNC,QAAS,MAUbX,KAAKY,QAAU,IAAW,IAAW,IAAU,KAAU,MAOzDZ,KAAKa,SACHC,QAAQ,IAjCZvB,EAAQO,kCAuCRP,EAAQC,OAAOuB,WAAW,iBAAkBxB,EAAQO,0BAGrCP,8FCvEfyB,EAAA1B,EAAA,GAeA,MAAA2B,EAAA,SAAAC,GAEA,MAAAL,EAAAK,MAEA,IAAAC,EAEAA,OADAC,IAAAP,EAAAM,aACAN,EAAAM,cAEAF,EAAAI,aAGA,MAAAC,OAAAF,IAAAP,EAAAS,YACAT,EAAAS,YAAA,YAEAC,OAAAH,IAAAP,EAAAU,IACAV,EAAAU,IAAA,uDAEAP,EAAA,EAAAQ,KAAAxB,MACAmB,eACAM,UAAAZ,EAAAY,UACAH,cACAI,YAAAN,IAAAP,EAAAa,QAAAb,EAAAa,OACAf,aAAAS,IAAAP,EAAAF,QAAAE,EAAAF,QAAA,GACAgB,2BAAAd,EAAAc,2BACAC,iBAAAf,EAAAe,iBACAL,MACAM,MAAAhB,EAAAgB,SAKAC,OAAAC,EAAA,SAAAD,CAAAb,EAAAD,EAAA,GAUAC,EAAAI,YAAA,2FAGAW,EAAA,6DC3DAC,EAAA3C,EAAA,IA6BA,MAAA4C,EAAA,SAAAhB,GACA,MAAAL,EAAAK,MACAiB,OAAAf,IAAAP,EAAAsB,WACAtB,EAAAsB,WAAA,YAEAC,OAAAhB,IAAAP,EAAAuB,SAAAvB,EAAAuB,SACAH,EAAA,EAAAI,WACAC,OAAAL,EAAA,EAAAM,qBAAAJ,GACAxB,QAAAE,EAAAF,QACA6B,QAAA3B,EAAA2B,QACAC,SAAA5B,EAAA4B,WAGAC,EAAA,EAAAlB,KAAAxB,MACAmB,aAAAN,EAAAM,aACAM,UAAAZ,EAAAY,UACAH,YAAAT,EAAAS,YACAI,OAAAb,EAAAa,OACAS,aACAR,2BAAAd,EAAAc,2BACAS,WACAR,iBAAAf,EAAAe,iBACAe,eAAA9B,EAAA8B,eACAC,gBAAA/B,EAAA+B,gBACArB,IAAAV,EAAAU,IACAsB,KAAAhC,EAAAgC,KACAhB,WAAAT,IAAAP,EAAAgB,OAAAhB,EAAAgB,MACAiB,WAAAjC,EAAAiC,cAKAhB,OAAAC,EAAA,SAAAD,CAAAI,EAAAQ,EAAA,GACAV,EAAA","file":"scaleselector.7251dcff4a17e98f7c49.js","sourcesContent":["/**\n * @module app.scaleselector\n */\nconst exports = {};\n\n// webpack: import './scaleselector.css';\n// webpack: import './common_dependencies.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\n\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olSourceOSM from 'ol/source/OSM.js';\nimport ngeoBase from 'ngeo/index.js';\nimport ngeoMapModule from 'ngeo/map/module.js';\n\n\n/** @type {!angular.Module} **/\nexports.module = angular.module('app', [\n  ngeoMapModule.name,\n  ngeoMiscFilters.name,\n]);\n\n\n/**\n * @constructor\n * @param {angular.Scope} $scope Controller scope.\n * @ngInject\n */\nexports.MainController = function($scope) {\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    layers: [\n      new olLayerTile({\n        source: new olSourceOSM()\n      })\n    ],\n    view: new olView({\n      center: [-10635142.37, 4813698.29],\n      zoom: 1,\n      maxZoom: 4\n    })\n  });\n\n  /**\n   * The zoom level/scale map object for the ngeoScaleselector directive.\n   * @type {!Array.<number>}\n   * @const\n   * @export\n   */\n  this.scales = [200000000, 100000000, 50000000, 25000000, 12000000];\n\n  /**\n   * Use the \"dropup\" variation of the Bootstrap dropdown.\n   * @type {ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.options = {\n    dropup: true\n  };\n\n};\n\n\nexports.module.controller('MainController', exports.MainController);\n\n\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./examples/scaleselector.js","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [OSM.ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nOSM.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default OSM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/OSM.js\n// module id = 5\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport _ol_tilegrid_ from '../tilegrid.js';\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link ol.source.TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.XYZOptions=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    _ol_tilegrid_.createXYZ({\n      extent: _ol_tilegrid_.extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/openlayers/src/ol/source/XYZ.js\n// module id = 6\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24"],"sourceRoot":""}